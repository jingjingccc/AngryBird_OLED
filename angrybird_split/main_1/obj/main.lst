                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14362 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _uart_isr
                                     12 	.globl _main
                                     13 	.globl _angrybird_state_machine
                                     14 	.globl _angrybird_display_home
                                     15 	.globl _I2C_Start
                                     16 	.globl _OLED_Init
                                     17 	.globl _CY
                                     18 	.globl _AC
                                     19 	.globl _F0
                                     20 	.globl _RS1
                                     21 	.globl _RS0
                                     22 	.globl _OV
                                     23 	.globl _F1
                                     24 	.globl _P
                                     25 	.globl _PS
                                     26 	.globl _PT1
                                     27 	.globl _PX1
                                     28 	.globl _PT0
                                     29 	.globl _PX0
                                     30 	.globl _RD
                                     31 	.globl _WR
                                     32 	.globl _T1
                                     33 	.globl _T0
                                     34 	.globl _INT1
                                     35 	.globl _INT0
                                     36 	.globl _TXD
                                     37 	.globl _RXD
                                     38 	.globl _P3_7
                                     39 	.globl _P3_6
                                     40 	.globl _P3_5
                                     41 	.globl _P3_4
                                     42 	.globl _P3_3
                                     43 	.globl _P3_2
                                     44 	.globl _P3_1
                                     45 	.globl _P3_0
                                     46 	.globl _EA
                                     47 	.globl _ES
                                     48 	.globl _ET1
                                     49 	.globl _EX1
                                     50 	.globl _ET0
                                     51 	.globl _EX0
                                     52 	.globl _P2_7
                                     53 	.globl _P2_6
                                     54 	.globl _P2_5
                                     55 	.globl _P2_4
                                     56 	.globl _P2_3
                                     57 	.globl _P2_2
                                     58 	.globl _P2_1
                                     59 	.globl _P2_0
                                     60 	.globl _SM0
                                     61 	.globl _SM1
                                     62 	.globl _SM2
                                     63 	.globl _REN
                                     64 	.globl _TB8
                                     65 	.globl _RB8
                                     66 	.globl _TI
                                     67 	.globl _RI
                                     68 	.globl _P1_7
                                     69 	.globl _P1_6
                                     70 	.globl _P1_5
                                     71 	.globl _P1_4
                                     72 	.globl _P1_3
                                     73 	.globl _P1_2
                                     74 	.globl _P1_1
                                     75 	.globl _P1_0
                                     76 	.globl _TF1
                                     77 	.globl _TR1
                                     78 	.globl _TF0
                                     79 	.globl _TR0
                                     80 	.globl _IE1
                                     81 	.globl _IT1
                                     82 	.globl _IE0
                                     83 	.globl _IT0
                                     84 	.globl _P0_7
                                     85 	.globl _P0_6
                                     86 	.globl _P0_5
                                     87 	.globl _P0_4
                                     88 	.globl _P0_3
                                     89 	.globl _P0_2
                                     90 	.globl _P0_1
                                     91 	.globl _P0_0
                                     92 	.globl _B
                                     93 	.globl _ACC
                                     94 	.globl _PSW
                                     95 	.globl _IP
                                     96 	.globl _P3
                                     97 	.globl _IE
                                     98 	.globl _P2
                                     99 	.globl _SBUF
                                    100 	.globl _SCON
                                    101 	.globl _P1
                                    102 	.globl _TH1
                                    103 	.globl _TH0
                                    104 	.globl _TL1
                                    105 	.globl _TL0
                                    106 	.globl _TMOD
                                    107 	.globl _TCON
                                    108 	.globl _PCON
                                    109 	.globl _DPH
                                    110 	.globl _DPL
                                    111 	.globl _SP
                                    112 	.globl _P0
                                    113 ;--------------------------------------------------------
                                    114 ; special function registers
                                    115 ;--------------------------------------------------------
                                    116 	.area RSEG    (ABS,DATA)
      000000                        117 	.org 0x0000
                           000080   118 _P0	=	0x0080
                           000081   119 _SP	=	0x0081
                           000082   120 _DPL	=	0x0082
                           000083   121 _DPH	=	0x0083
                           000087   122 _PCON	=	0x0087
                           000088   123 _TCON	=	0x0088
                           000089   124 _TMOD	=	0x0089
                           00008A   125 _TL0	=	0x008a
                           00008B   126 _TL1	=	0x008b
                           00008C   127 _TH0	=	0x008c
                           00008D   128 _TH1	=	0x008d
                           000090   129 _P1	=	0x0090
                           000098   130 _SCON	=	0x0098
                           000099   131 _SBUF	=	0x0099
                           0000A0   132 _P2	=	0x00a0
                           0000A8   133 _IE	=	0x00a8
                           0000B0   134 _P3	=	0x00b0
                           0000B8   135 _IP	=	0x00b8
                           0000D0   136 _PSW	=	0x00d0
                           0000E0   137 _ACC	=	0x00e0
                           0000F0   138 _B	=	0x00f0
                                    139 ;--------------------------------------------------------
                                    140 ; special function bits
                                    141 ;--------------------------------------------------------
                                    142 	.area RSEG    (ABS,DATA)
      000000                        143 	.org 0x0000
                           000080   144 _P0_0	=	0x0080
                           000081   145 _P0_1	=	0x0081
                           000082   146 _P0_2	=	0x0082
                           000083   147 _P0_3	=	0x0083
                           000084   148 _P0_4	=	0x0084
                           000085   149 _P0_5	=	0x0085
                           000086   150 _P0_6	=	0x0086
                           000087   151 _P0_7	=	0x0087
                           000088   152 _IT0	=	0x0088
                           000089   153 _IE0	=	0x0089
                           00008A   154 _IT1	=	0x008a
                           00008B   155 _IE1	=	0x008b
                           00008C   156 _TR0	=	0x008c
                           00008D   157 _TF0	=	0x008d
                           00008E   158 _TR1	=	0x008e
                           00008F   159 _TF1	=	0x008f
                           000090   160 _P1_0	=	0x0090
                           000091   161 _P1_1	=	0x0091
                           000092   162 _P1_2	=	0x0092
                           000093   163 _P1_3	=	0x0093
                           000094   164 _P1_4	=	0x0094
                           000095   165 _P1_5	=	0x0095
                           000096   166 _P1_6	=	0x0096
                           000097   167 _P1_7	=	0x0097
                           000098   168 _RI	=	0x0098
                           000099   169 _TI	=	0x0099
                           00009A   170 _RB8	=	0x009a
                           00009B   171 _TB8	=	0x009b
                           00009C   172 _REN	=	0x009c
                           00009D   173 _SM2	=	0x009d
                           00009E   174 _SM1	=	0x009e
                           00009F   175 _SM0	=	0x009f
                           0000A0   176 _P2_0	=	0x00a0
                           0000A1   177 _P2_1	=	0x00a1
                           0000A2   178 _P2_2	=	0x00a2
                           0000A3   179 _P2_3	=	0x00a3
                           0000A4   180 _P2_4	=	0x00a4
                           0000A5   181 _P2_5	=	0x00a5
                           0000A6   182 _P2_6	=	0x00a6
                           0000A7   183 _P2_7	=	0x00a7
                           0000A8   184 _EX0	=	0x00a8
                           0000A9   185 _ET0	=	0x00a9
                           0000AA   186 _EX1	=	0x00aa
                           0000AB   187 _ET1	=	0x00ab
                           0000AC   188 _ES	=	0x00ac
                           0000AF   189 _EA	=	0x00af
                           0000B0   190 _P3_0	=	0x00b0
                           0000B1   191 _P3_1	=	0x00b1
                           0000B2   192 _P3_2	=	0x00b2
                           0000B3   193 _P3_3	=	0x00b3
                           0000B4   194 _P3_4	=	0x00b4
                           0000B5   195 _P3_5	=	0x00b5
                           0000B6   196 _P3_6	=	0x00b6
                           0000B7   197 _P3_7	=	0x00b7
                           0000B0   198 _RXD	=	0x00b0
                           0000B1   199 _TXD	=	0x00b1
                           0000B2   200 _INT0	=	0x00b2
                           0000B3   201 _INT1	=	0x00b3
                           0000B4   202 _T0	=	0x00b4
                           0000B5   203 _T1	=	0x00b5
                           0000B6   204 _WR	=	0x00b6
                           0000B7   205 _RD	=	0x00b7
                           0000B8   206 _PX0	=	0x00b8
                           0000B9   207 _PT0	=	0x00b9
                           0000BA   208 _PX1	=	0x00ba
                           0000BB   209 _PT1	=	0x00bb
                           0000BC   210 _PS	=	0x00bc
                           0000D0   211 _P	=	0x00d0
                           0000D1   212 _F1	=	0x00d1
                           0000D2   213 _OV	=	0x00d2
                           0000D3   214 _RS0	=	0x00d3
                           0000D4   215 _RS1	=	0x00d4
                           0000D5   216 _F0	=	0x00d5
                           0000D6   217 _AC	=	0x00d6
                           0000D7   218 _CY	=	0x00d7
                                    219 ;--------------------------------------------------------
                                    220 ; overlayable register banks
                                    221 ;--------------------------------------------------------
                                    222 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        223 	.ds 8
                                    224 ;--------------------------------------------------------
                                    225 ; internal ram data
                                    226 ;--------------------------------------------------------
                                    227 	.area DSEG    (DATA)
                                    228 ;--------------------------------------------------------
                                    229 ; overlayable items in internal ram
                                    230 ;--------------------------------------------------------
                                    231 ;--------------------------------------------------------
                                    232 ; Stack segment in internal ram
                                    233 ;--------------------------------------------------------
                                    234 	.area SSEG
      000000                        235 __start__stack:
      000000                        236 	.ds	1
                                    237 
                                    238 ;--------------------------------------------------------
                                    239 ; indirectly addressable internal ram data
                                    240 ;--------------------------------------------------------
                                    241 	.area ISEG    (DATA)
                                    242 ;--------------------------------------------------------
                                    243 ; absolute internal ram data
                                    244 ;--------------------------------------------------------
                                    245 	.area IABS    (ABS,DATA)
                                    246 	.area IABS    (ABS,DATA)
                                    247 ;--------------------------------------------------------
                                    248 ; bit data
                                    249 ;--------------------------------------------------------
                                    250 	.area BSEG    (BIT)
                                    251 ;--------------------------------------------------------
                                    252 ; paged external ram data
                                    253 ;--------------------------------------------------------
                                    254 	.area PSEG    (PAG,XDATA)
                                    255 ;--------------------------------------------------------
                                    256 ; uninitialized external ram data
                                    257 ;--------------------------------------------------------
                                    258 	.area XSEG    (XDATA)
                                    259 ;--------------------------------------------------------
                                    260 ; absolute external ram data
                                    261 ;--------------------------------------------------------
                                    262 	.area XABS    (ABS,XDATA)
                                    263 ;--------------------------------------------------------
                                    264 ; initialized external ram data
                                    265 ;--------------------------------------------------------
                                    266 	.area XISEG   (XDATA)
                                    267 	.area HOME    (CODE)
                                    268 	.area GSINIT0 (CODE)
                                    269 	.area GSINIT1 (CODE)
                                    270 	.area GSINIT2 (CODE)
                                    271 	.area GSINIT3 (CODE)
                                    272 	.area GSINIT4 (CODE)
                                    273 	.area GSINIT5 (CODE)
                                    274 	.area GSINIT  (CODE)
                                    275 	.area GSFINAL (CODE)
                                    276 	.area CSEG    (CODE)
                                    277 ;--------------------------------------------------------
                                    278 ; interrupt vector
                                    279 ;--------------------------------------------------------
                                    280 	.area HOME    (CODE)
      000000                        281 __interrupt_vect:
      000000 02r00r00         [24]  282 	ljmp	__sdcc_gsinit_startup
      000003 32               [24]  283 	reti
      000004                        284 	.ds	7
      00000B 32               [24]  285 	reti
      00000C                        286 	.ds	7
      000013 32               [24]  287 	reti
      000014                        288 	.ds	7
      00001B 32               [24]  289 	reti
      00001C                        290 	.ds	7
      000023 02r00r26         [24]  291 	ljmp	_uart_isr
                                    292 ;--------------------------------------------------------
                                    293 ; global & static initialisations
                                    294 ;--------------------------------------------------------
                                    295 	.area HOME    (CODE)
                                    296 	.area GSINIT  (CODE)
                                    297 	.area GSFINAL (CODE)
                                    298 	.area GSINIT  (CODE)
                                    299 	.globl __sdcc_gsinit_startup
                                    300 	.globl __sdcc_program_startup
                                    301 	.globl __start__stack
                                    302 	.globl __mcs51_genXINIT
                                    303 	.globl __mcs51_genXRAMCLEAR
                                    304 	.globl __mcs51_genRAMCLEAR
                                    305 	.area GSFINAL (CODE)
      000000 02r00r26         [24]  306 	ljmp	__sdcc_program_startup
                                    307 ;--------------------------------------------------------
                                    308 ; Home
                                    309 ;--------------------------------------------------------
                                    310 	.area HOME    (CODE)
                                    311 	.area HOME    (CODE)
      000026                        312 __sdcc_program_startup:
      000026 02r00r00         [24]  313 	ljmp	_main
                                    314 ;	return from main will return to caller
                                    315 ;--------------------------------------------------------
                                    316 ; code
                                    317 ;--------------------------------------------------------
                                    318 	.area CSEG    (CODE)
                                    319 ;------------------------------------------------------------
                                    320 ;Allocation info for local variables in function 'main'
                                    321 ;------------------------------------------------------------
                                    322 ;	./src/main.c:5: int main()
                                    323 ;	-----------------------------------------
                                    324 ;	 function main
                                    325 ;	-----------------------------------------
      000000                        326 _main:
                           000007   327 	ar7 = 0x07
                           000006   328 	ar6 = 0x06
                           000005   329 	ar5 = 0x05
                           000004   330 	ar4 = 0x04
                           000003   331 	ar3 = 0x03
                           000002   332 	ar2 = 0x02
                           000001   333 	ar1 = 0x01
                           000000   334 	ar0 = 0x00
                                    335 ;	./src/main.c:10: I2C_Start();
      000000 12r00r00         [24]  336 	lcall	_I2C_Start
                                    337 ;	./src/main.c:13: TMOD = 0x20; // set timer1 to mode2
      000003 75 89 20         [24]  338 	mov	_TMOD,#0x20
                                    339 ;	./src/main.c:14: SCON = 0x50; // set serial mode1
      000006 75 98 50         [24]  340 	mov	_SCON,#0x50
                                    341 ;	./src/main.c:15: TH1 = 250;   // baudrate = 9600, fosc = 11.0592MHz
      000009 75 8D FA         [24]  342 	mov	_TH1,#0xfa
                                    343 ;	./src/main.c:16: TR1 = 1;     // enable timer = 1
                                    344 ;	assignBit
      00000C D2 8E            [12]  345 	setb	_TR1
                                    346 ;	./src/main.c:17: IE = 0x90;   // enable serial port interrupt
      00000E 75 A8 90         [24]  347 	mov	_IE,#0x90
                                    348 ;	./src/main.c:19: but_up = 1;
                                    349 ;	assignBit
      000011 D2 A0            [12]  350 	setb	_P2_0
                                    351 ;	./src/main.c:20: but_down = 1;
                                    352 ;	assignBit
      000013 D2 A1            [12]  353 	setb	_P2_1
                                    354 ;	./src/main.c:21: but_left = 1;
                                    355 ;	assignBit
      000015 D2 B2            [12]  356 	setb	_INT0
                                    357 ;	./src/main.c:22: but_right = 1;
                                    358 ;	assignBit
      000017 D2 B3            [12]  359 	setb	_INT1
                                    360 ;	./src/main.c:23: but_enter = 1;
                                    361 ;	assignBit
      000019 D2 A2            [12]  362 	setb	_P2_2
                                    363 ;	./src/main.c:25: OLED_Init();
      00001B 12r00r00         [24]  364 	lcall	_OLED_Init
                                    365 ;	./src/main.c:26: angrybird_display_home();
      00001E 12r00r00         [24]  366 	lcall	_angrybird_display_home
                                    367 ;	./src/main.c:28: while (1)
      000021                        368 00102$:
                                    369 ;	./src/main.c:30: angrybird_state_machine();
      000021 12r00r00         [24]  370 	lcall	_angrybird_state_machine
                                    371 ;	./src/main.c:32: }
      000024 80 FB            [24]  372 	sjmp	00102$
                                    373 ;------------------------------------------------------------
                                    374 ;Allocation info for local variables in function 'uart_isr'
                                    375 ;------------------------------------------------------------
                                    376 ;	./src/main.c:34: void uart_isr(void) __interrupt(4)
                                    377 ;	-----------------------------------------
                                    378 ;	 function uart_isr
                                    379 ;	-----------------------------------------
      000026                        380 _uart_isr:
                                    381 ;	./src/main.c:36: if (TI == 1)
                                    382 ;	./src/main.c:37: TI = 0;
                                    383 ;	assignBit
      000026 10 99 02         [24]  384 	jbc	_TI,00119$
      000029 80 00            [24]  385 	sjmp	00102$
      00002B                        386 00119$:
      00002B                        387 00102$:
                                    388 ;	./src/main.c:39: if (RI == 1)
                                    389 ;	./src/main.c:41: RI = 0;               // refresh RI
                                    390 ;	assignBit
      00002B 10 98 02         [24]  391 	jbc	_RI,00120$
      00002E 80 06            [24]  392 	sjmp	00105$
      000030                        393 00120$:
                                    394 ;	./src/main.c:42: received_data = SBUF; // receive data from SBUF
      000030 85 99*00         [24]  395 	mov	_received_data,_SBUF
                                    396 ;	./src/main.c:43: received_flag = 1;    // receiving finished
      000033 75*00 01         [24]  397 	mov	_received_flag,#0x01
      000036                        398 00105$:
                                    399 ;	./src/main.c:45: }
      000036 32               [24]  400 	reti
                                    401 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    402 ;	eliminated unneeded push/pop not_psw
                                    403 ;	eliminated unneeded push/pop dpl
                                    404 ;	eliminated unneeded push/pop dph
                                    405 ;	eliminated unneeded push/pop b
                                    406 ;	eliminated unneeded push/pop acc
                                    407 	.area CSEG    (CODE)
                                    408 	.area CONST   (CODE)
                                    409 	.area XINIT   (CODE)
                                    410 	.area CABS    (ABS,CODE)
