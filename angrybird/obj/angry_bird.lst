                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14362 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module angry_bird
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _sine_table
                                     12 	.globl _bird_logo
                                     13 	.globl _pig_logo
                                     14 	.globl _shooter_logo
                                     15 	.globl _button_right_logo
                                     16 	.globl _button_left_logo
                                     17 	.globl _volume_logo
                                     18 	.globl _music_logo
                                     19 	.globl _button_down_logo
                                     20 	.globl _button_up_logo
                                     21 	.globl _angry_bird_logo
                                     22 	.globl _oledSendData
                                     23 	.globl _OLED_SetCursor
                                     24 	.globl _OLED_Clear
                                     25 	.globl _OLED_DisplayString
                                     26 	.globl _delay_ms
                                     27 	.globl _strlen
                                     28 	.globl _CY
                                     29 	.globl _AC
                                     30 	.globl _F0
                                     31 	.globl _RS1
                                     32 	.globl _RS0
                                     33 	.globl _OV
                                     34 	.globl _F1
                                     35 	.globl _P
                                     36 	.globl _PS
                                     37 	.globl _PT1
                                     38 	.globl _PX1
                                     39 	.globl _PT0
                                     40 	.globl _PX0
                                     41 	.globl _RD
                                     42 	.globl _WR
                                     43 	.globl _T1
                                     44 	.globl _T0
                                     45 	.globl _INT1
                                     46 	.globl _INT0
                                     47 	.globl _TXD
                                     48 	.globl _RXD
                                     49 	.globl _P3_7
                                     50 	.globl _P3_6
                                     51 	.globl _P3_5
                                     52 	.globl _P3_4
                                     53 	.globl _P3_3
                                     54 	.globl _P3_2
                                     55 	.globl _P3_1
                                     56 	.globl _P3_0
                                     57 	.globl _EA
                                     58 	.globl _ES
                                     59 	.globl _ET1
                                     60 	.globl _EX1
                                     61 	.globl _ET0
                                     62 	.globl _EX0
                                     63 	.globl _P2_7
                                     64 	.globl _P2_6
                                     65 	.globl _P2_5
                                     66 	.globl _P2_4
                                     67 	.globl _P2_3
                                     68 	.globl _P2_2
                                     69 	.globl _P2_1
                                     70 	.globl _P2_0
                                     71 	.globl _SM0
                                     72 	.globl _SM1
                                     73 	.globl _SM2
                                     74 	.globl _REN
                                     75 	.globl _TB8
                                     76 	.globl _RB8
                                     77 	.globl _TI
                                     78 	.globl _RI
                                     79 	.globl _P1_7
                                     80 	.globl _P1_6
                                     81 	.globl _P1_5
                                     82 	.globl _P1_4
                                     83 	.globl _P1_3
                                     84 	.globl _P1_2
                                     85 	.globl _P1_1
                                     86 	.globl _P1_0
                                     87 	.globl _TF1
                                     88 	.globl _TR1
                                     89 	.globl _TF0
                                     90 	.globl _TR0
                                     91 	.globl _IE1
                                     92 	.globl _IT1
                                     93 	.globl _IE0
                                     94 	.globl _IT0
                                     95 	.globl _P0_7
                                     96 	.globl _P0_6
                                     97 	.globl _P0_5
                                     98 	.globl _P0_4
                                     99 	.globl _P0_3
                                    100 	.globl _P0_2
                                    101 	.globl _P0_1
                                    102 	.globl _P0_0
                                    103 	.globl _B
                                    104 	.globl _ACC
                                    105 	.globl _PSW
                                    106 	.globl _IP
                                    107 	.globl _P3
                                    108 	.globl _IE
                                    109 	.globl _P2
                                    110 	.globl _SBUF
                                    111 	.globl _SCON
                                    112 	.globl _P1
                                    113 	.globl _TH1
                                    114 	.globl _TH0
                                    115 	.globl _TL1
                                    116 	.globl _TL0
                                    117 	.globl _TMOD
                                    118 	.globl _TCON
                                    119 	.globl _PCON
                                    120 	.globl _DPH
                                    121 	.globl _DPL
                                    122 	.globl _SP
                                    123 	.globl _P0
                                    124 	.globl _prebut_enter
                                    125 	.globl _prebut_right
                                    126 	.globl _prebut_left
                                    127 	.globl _prebut_down
                                    128 	.globl _prebut_up
                                    129 	.globl _pig_amt
                                    130 	.globl _bird_amt
                                    131 	.globl _cur_state
                                    132 	.globl _control_strength
                                    133 	.globl _control_angle
                                    134 	.globl _volume_value
                                    135 	.globl _music_value
                                    136 	.globl _setting_state_past
                                    137 	.globl _setting_state
                                    138 	.globl _selection_list
                                    139 	.globl _selection_list_past
                                    140 	.globl _selection_list_cur
                                    141 	.globl _col_offset
                                    142 	.globl _row_offset
                                    143 	.globl _angrybird_display_home
                                    144 	.globl _angrybird_display_setting
                                    145 	.globl _angrybird_display_game
                                    146 	.globl _angrybird_state_machine
                                    147 	.globl _angrybird_home_state
                                    148 	.globl _angrybird_setting_state
                                    149 	.globl _angrybird_game_state
                                    150 	.globl _getsine
                                    151 	.globl _getcosine
                                    152 	.globl _pow_2
                                    153 ;--------------------------------------------------------
                                    154 ; special function registers
                                    155 ;--------------------------------------------------------
                                    156 	.area RSEG    (ABS,DATA)
      000000                        157 	.org 0x0000
                           000080   158 _P0	=	0x0080
                           000081   159 _SP	=	0x0081
                           000082   160 _DPL	=	0x0082
                           000083   161 _DPH	=	0x0083
                           000087   162 _PCON	=	0x0087
                           000088   163 _TCON	=	0x0088
                           000089   164 _TMOD	=	0x0089
                           00008A   165 _TL0	=	0x008a
                           00008B   166 _TL1	=	0x008b
                           00008C   167 _TH0	=	0x008c
                           00008D   168 _TH1	=	0x008d
                           000090   169 _P1	=	0x0090
                           000098   170 _SCON	=	0x0098
                           000099   171 _SBUF	=	0x0099
                           0000A0   172 _P2	=	0x00a0
                           0000A8   173 _IE	=	0x00a8
                           0000B0   174 _P3	=	0x00b0
                           0000B8   175 _IP	=	0x00b8
                           0000D0   176 _PSW	=	0x00d0
                           0000E0   177 _ACC	=	0x00e0
                           0000F0   178 _B	=	0x00f0
                                    179 ;--------------------------------------------------------
                                    180 ; special function bits
                                    181 ;--------------------------------------------------------
                                    182 	.area RSEG    (ABS,DATA)
      000000                        183 	.org 0x0000
                           000080   184 _P0_0	=	0x0080
                           000081   185 _P0_1	=	0x0081
                           000082   186 _P0_2	=	0x0082
                           000083   187 _P0_3	=	0x0083
                           000084   188 _P0_4	=	0x0084
                           000085   189 _P0_5	=	0x0085
                           000086   190 _P0_6	=	0x0086
                           000087   191 _P0_7	=	0x0087
                           000088   192 _IT0	=	0x0088
                           000089   193 _IE0	=	0x0089
                           00008A   194 _IT1	=	0x008a
                           00008B   195 _IE1	=	0x008b
                           00008C   196 _TR0	=	0x008c
                           00008D   197 _TF0	=	0x008d
                           00008E   198 _TR1	=	0x008e
                           00008F   199 _TF1	=	0x008f
                           000090   200 _P1_0	=	0x0090
                           000091   201 _P1_1	=	0x0091
                           000092   202 _P1_2	=	0x0092
                           000093   203 _P1_3	=	0x0093
                           000094   204 _P1_4	=	0x0094
                           000095   205 _P1_5	=	0x0095
                           000096   206 _P1_6	=	0x0096
                           000097   207 _P1_7	=	0x0097
                           000098   208 _RI	=	0x0098
                           000099   209 _TI	=	0x0099
                           00009A   210 _RB8	=	0x009a
                           00009B   211 _TB8	=	0x009b
                           00009C   212 _REN	=	0x009c
                           00009D   213 _SM2	=	0x009d
                           00009E   214 _SM1	=	0x009e
                           00009F   215 _SM0	=	0x009f
                           0000A0   216 _P2_0	=	0x00a0
                           0000A1   217 _P2_1	=	0x00a1
                           0000A2   218 _P2_2	=	0x00a2
                           0000A3   219 _P2_3	=	0x00a3
                           0000A4   220 _P2_4	=	0x00a4
                           0000A5   221 _P2_5	=	0x00a5
                           0000A6   222 _P2_6	=	0x00a6
                           0000A7   223 _P2_7	=	0x00a7
                           0000A8   224 _EX0	=	0x00a8
                           0000A9   225 _ET0	=	0x00a9
                           0000AA   226 _EX1	=	0x00aa
                           0000AB   227 _ET1	=	0x00ab
                           0000AC   228 _ES	=	0x00ac
                           0000AF   229 _EA	=	0x00af
                           0000B0   230 _P3_0	=	0x00b0
                           0000B1   231 _P3_1	=	0x00b1
                           0000B2   232 _P3_2	=	0x00b2
                           0000B3   233 _P3_3	=	0x00b3
                           0000B4   234 _P3_4	=	0x00b4
                           0000B5   235 _P3_5	=	0x00b5
                           0000B6   236 _P3_6	=	0x00b6
                           0000B7   237 _P3_7	=	0x00b7
                           0000B0   238 _RXD	=	0x00b0
                           0000B1   239 _TXD	=	0x00b1
                           0000B2   240 _INT0	=	0x00b2
                           0000B3   241 _INT1	=	0x00b3
                           0000B4   242 _T0	=	0x00b4
                           0000B5   243 _T1	=	0x00b5
                           0000B6   244 _WR	=	0x00b6
                           0000B7   245 _RD	=	0x00b7
                           0000B8   246 _PX0	=	0x00b8
                           0000B9   247 _PT0	=	0x00b9
                           0000BA   248 _PX1	=	0x00ba
                           0000BB   249 _PT1	=	0x00bb
                           0000BC   250 _PS	=	0x00bc
                           0000D0   251 _P	=	0x00d0
                           0000D1   252 _F1	=	0x00d1
                           0000D2   253 _OV	=	0x00d2
                           0000D3   254 _RS0	=	0x00d3
                           0000D4   255 _RS1	=	0x00d4
                           0000D5   256 _F0	=	0x00d5
                           0000D6   257 _AC	=	0x00d6
                           0000D7   258 _CY	=	0x00d7
                                    259 ;--------------------------------------------------------
                                    260 ; overlayable register banks
                                    261 ;--------------------------------------------------------
                                    262 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        263 	.ds 8
                                    264 ;--------------------------------------------------------
                                    265 ; internal ram data
                                    266 ;--------------------------------------------------------
                                    267 	.area DSEG    (DATA)
      000000                        268 _row_offset::
      000000                        269 	.ds 2
      000002                        270 _col_offset::
      000002                        271 	.ds 2
      000004                        272 _selection_list_cur::
      000004                        273 	.ds 2
      000006                        274 _selection_list_past::
      000006                        275 	.ds 2
      000008                        276 _selection_list::
      000008                        277 	.ds 9
      000011                        278 _setting_state::
      000011                        279 	.ds 2
      000013                        280 _setting_state_past::
      000013                        281 	.ds 2
      000015                        282 _music_value::
      000015                        283 	.ds 2
      000017                        284 _volume_value::
      000017                        285 	.ds 2
      000019                        286 _control_angle::
      000019                        287 	.ds 2
      00001B                        288 _control_strength::
      00001B                        289 	.ds 2
      00001D                        290 _angrybird_display_game_control_strength__65537_144:
      00001D                        291 	.ds 2
      00001F                        292 _angrybird_display_game_control_angle__65537_144:
      00001F                        293 	.ds 5
      000024                        294 _angrybird_display_game_angle__65539_146:
      000024                        295 	.ds 2
      000026                        296 _cur_state::
      000026                        297 	.ds 2
      000028                        298 _bird_amt::
      000028                        299 	.ds 2
      00002A                        300 _pig_amt::
      00002A                        301 	.ds 2
      00002C                        302 _prebut_up::
      00002C                        303 	.ds 2
      00002E                        304 _prebut_down::
      00002E                        305 	.ds 2
      000030                        306 _prebut_left::
      000030                        307 	.ds 2
      000032                        308 _prebut_right::
      000032                        309 	.ds 2
      000034                        310 _prebut_enter::
      000034                        311 	.ds 2
      000036                        312 _angrybird_game_state_control_angle__196609_181:
      000036                        313 	.ds 5
      00003B                        314 _angrybird_game_state_angle__196610_182:
      00003B                        315 	.ds 2
      00003D                        316 _angrybird_game_state_control_strength__196609_187:
      00003D                        317 	.ds 2
      00003F                        318 _angrybird_game_state_delta_y_196609_194:
      00003F                        319 	.ds 4
      000043                        320 _angrybird_game_state_delta_x_196609_194:
      000043                        321 	.ds 4
      000047                        322 _angrybird_game_state_peak_x_196609_194:
      000047                        323 	.ds 4
      00004B                        324 _angrybird_game_state_peak_y_196609_194:
      00004B                        325 	.ds 4
      00004F                        326 _angrybird_game_state_a_196609_194:
      00004F                        327 	.ds 4
      000053                        328 _angrybird_game_state_i_262145_199:
      000053                        329 	.ds 2
      000055                        330 _angrybird_game_state_output_row_327681_200:
      000055                        331 	.ds 2
      000057                        332 _angrybird_game_state_sloc1_1_0:
      000057                        333 	.ds 4
                                    334 ;--------------------------------------------------------
                                    335 ; overlayable items in internal ram
                                    336 ;--------------------------------------------------------
                                    337 ;--------------------------------------------------------
                                    338 ; indirectly addressable internal ram data
                                    339 ;--------------------------------------------------------
                                    340 	.area ISEG    (DATA)
                                    341 ;--------------------------------------------------------
                                    342 ; absolute internal ram data
                                    343 ;--------------------------------------------------------
                                    344 	.area IABS    (ABS,DATA)
                                    345 	.area IABS    (ABS,DATA)
                                    346 ;--------------------------------------------------------
                                    347 ; bit data
                                    348 ;--------------------------------------------------------
                                    349 	.area BSEG    (BIT)
      000000                        350 _angrybird_display_game_sloc0_1_0:
      000000                        351 	.ds 1
      000001                        352 _angrybird_game_state_sloc0_1_0:
      000001                        353 	.ds 1
                                    354 ;--------------------------------------------------------
                                    355 ; paged external ram data
                                    356 ;--------------------------------------------------------
                                    357 	.area PSEG    (PAG,XDATA)
                                    358 ;--------------------------------------------------------
                                    359 ; uninitialized external ram data
                                    360 ;--------------------------------------------------------
                                    361 	.area XSEG    (XDATA)
                                    362 ;--------------------------------------------------------
                                    363 ; absolute external ram data
                                    364 ;--------------------------------------------------------
                                    365 	.area XABS    (ABS,XDATA)
                                    366 ;--------------------------------------------------------
                                    367 ; initialized external ram data
                                    368 ;--------------------------------------------------------
                                    369 	.area XISEG   (XDATA)
                                    370 	.area HOME    (CODE)
                                    371 	.area GSINIT0 (CODE)
                                    372 	.area GSINIT1 (CODE)
                                    373 	.area GSINIT2 (CODE)
                                    374 	.area GSINIT3 (CODE)
                                    375 	.area GSINIT4 (CODE)
                                    376 	.area GSINIT5 (CODE)
                                    377 	.area GSINIT  (CODE)
                                    378 	.area GSFINAL (CODE)
                                    379 	.area CSEG    (CODE)
                                    380 ;--------------------------------------------------------
                                    381 ; global & static initialisations
                                    382 ;--------------------------------------------------------
                                    383 	.area HOME    (CODE)
                                    384 	.area GSINIT  (CODE)
                                    385 	.area GSFINAL (CODE)
                                    386 	.area GSINIT  (CODE)
                                    387 ;	./src/angry_bird.c:61: int selection_list_cur = 1, selection_list_past = 1;
      000000 75*04 01         [24]  388 	mov	_selection_list_cur,#0x01
      000003 75*05 00         [24]  389 	mov	(_selection_list_cur + 1),#0x00
                                    390 ;	./src/angry_bird.c:61: char **selection_list[] = {"Setting", "Easy", "Hard"};
      000006 75*06 01         [24]  391 	mov	_selection_list_past,#0x01
      000009 75*07 00         [24]  392 	mov	(_selection_list_past + 1),#0x00
                                    393 ;	./src/angry_bird.c:62: 
      00000C 75*08rB8         [24]  394 	mov	(_selection_list + 0),#___str_6
      00000F 75*09s02         [24]  395 	mov	(_selection_list + 1),#(___str_6 >> 8)
      000012 75*0A 80         [24]  396 	mov	(_selection_list + 2),#0x80
      000015 75*0BrC0         [24]  397 	mov	((_selection_list + 0x0003) + 0),#___str_7
      000018 75*0Cs02         [24]  398 	mov	((_selection_list + 0x0003) + 1),#(___str_7 >> 8)
      00001B 75*0D 80         [24]  399 	mov	((_selection_list + 0x0003) + 2),#0x80
      00001E 75*0ErC5         [24]  400 	mov	((_selection_list + 0x0006) + 0),#___str_8
      000021 75*0Fs02         [24]  401 	mov	((_selection_list + 0x0006) + 1),#(___str_8 >> 8)
      000024 75*10 80         [24]  402 	mov	((_selection_list + 0x0006) + 2),#0x80
                                    403 ;	./src/angry_bird.c:107: int setting_state = 1, setting_state_past = 1;
      000027 75*11 01         [24]  404 	mov	_setting_state,#0x01
      00002A 75*12 00         [24]  405 	mov	(_setting_state + 1),#0x00
                                    406 ;	./src/angry_bird.c:107: int music_value = 0, volume_value = 0;
      00002D 75*13 01         [24]  407 	mov	_setting_state_past,#0x01
      000030 75*14 00         [24]  408 	mov	(_setting_state_past + 1),#0x00
                                    409 ;	./src/angry_bird.c:108: void angrybird_display_setting(void)
      000033 E4               [12]  410 	clr	a
      000034 F5*15            [12]  411 	mov	_music_value,a
      000036 F5*16            [12]  412 	mov	(_music_value + 1),a
                                    413 ;	./src/angry_bird.c:108: int music_value = 0, volume_value = 0;
      000038 F5*17            [12]  414 	mov	_volume_value,a
      00003A F5*18            [12]  415 	mov	(_volume_value + 1),a
                                    416 ;	./src/angry_bird.c:271: int cur_state = 1;
      00003C 75*26 01         [24]  417 	mov	_cur_state,#0x01
      00003F F5*27            [12]  418 	mov	(_cur_state + 1),a
                                    419 ;	./src/angry_bird.c:296: unsigned int prebut_up = 0;
      000041 F5*2C            [12]  420 	mov	_prebut_up,a
      000043 F5*2D            [12]  421 	mov	(_prebut_up + 1),a
                                    422 ;	./src/angry_bird.c:297: unsigned int prebut_down = 0;
      000045 F5*2E            [12]  423 	mov	_prebut_down,a
      000047 F5*2F            [12]  424 	mov	(_prebut_down + 1),a
                                    425 ;	./src/angry_bird.c:298: unsigned int prebut_left = 0;
      000049 F5*30            [12]  426 	mov	_prebut_left,a
      00004B F5*31            [12]  427 	mov	(_prebut_left + 1),a
                                    428 ;	./src/angry_bird.c:299: unsigned int prebut_right = 0;
      00004D F5*32            [12]  429 	mov	_prebut_right,a
      00004F F5*33            [12]  430 	mov	(_prebut_right + 1),a
                                    431 ;	./src/angry_bird.c:300: unsigned int prebut_enter = 0;
      000051 F5*34            [12]  432 	mov	_prebut_enter,a
      000053 F5*35            [12]  433 	mov	(_prebut_enter + 1),a
                                    434 ;--------------------------------------------------------
                                    435 ; Home
                                    436 ;--------------------------------------------------------
                                    437 	.area HOME    (CODE)
                                    438 	.area HOME    (CODE)
                                    439 ;--------------------------------------------------------
                                    440 ; code
                                    441 ;--------------------------------------------------------
                                    442 	.area CSEG    (CODE)
                                    443 ;------------------------------------------------------------
                                    444 ;Allocation info for local variables in function 'angrybird_display_home'
                                    445 ;------------------------------------------------------------
                                    446 ;j                         Allocated to registers r6 r7 
                                    447 ;i                         Allocated to registers r4 r5 
                                    448 ;j                         Allocated to registers r6 r7 
                                    449 ;i                         Allocated to registers r5 
                                    450 ;j                         Allocated to registers r6 r7 
                                    451 ;i                         Allocated to registers r5 
                                    452 ;------------------------------------------------------------
                                    453 ;	./src/angry_bird.c:64: void angrybird_display_home(void)
                                    454 ;	-----------------------------------------
                                    455 ;	 function angrybird_display_home
                                    456 ;	-----------------------------------------
      000000                        457 _angrybird_display_home:
                           000007   458 	ar7 = 0x07
                           000006   459 	ar6 = 0x06
                           000005   460 	ar5 = 0x05
                           000004   461 	ar4 = 0x04
                           000003   462 	ar3 = 0x03
                           000002   463 	ar2 = 0x02
                           000001   464 	ar1 = 0x01
                           000000   465 	ar0 = 0x00
                                    466 ;	./src/angry_bird.c:66: OLED_Clear();
      000000 12r00r00         [24]  467 	lcall	_OLED_Clear
                                    468 ;	./src/angry_bird.c:67: row_offset = image_row_cursor;
      000003 E4               [12]  469 	clr	a
      000004 F5*00            [12]  470 	mov	_row_offset,a
      000006 F5*01            [12]  471 	mov	(_row_offset + 1),a
                                    472 ;	./src/angry_bird.c:68: col_offset = image_col_cursor;
      000008 F5*02            [12]  473 	mov	_col_offset,a
      00000A F5*03            [12]  474 	mov	(_col_offset + 1),a
                                    475 ;	./src/angry_bird.c:69: for (int j = 0; j < image_cul_size; j++)
      00000C FE               [12]  476 	mov	r6,a
      00000D FF               [12]  477 	mov	r7,a
      00000E                        478 00111$:
      00000E C3               [12]  479 	clr	c
      00000F EE               [12]  480 	mov	a,r6
      000010 94 40            [12]  481 	subb	a,#0x40
      000012 EF               [12]  482 	mov	a,r7
      000013 64 80            [12]  483 	xrl	a,#0x80
      000015 94 80            [12]  484 	subb	a,#0x80
      000017 50 7B            [24]  485 	jnc	00102$
                                    486 ;	./src/angry_bird.c:71: for (int i = 0; i < image_row_size; i++)
      000019 7C 00            [12]  487 	mov	r4,#0x00
      00001B 7D 00            [12]  488 	mov	r5,#0x00
      00001D                        489 00108$:
      00001D C3               [12]  490 	clr	c
      00001E EC               [12]  491 	mov	a,r4
      00001F 94 08            [12]  492 	subb	a,#0x08
      000021 ED               [12]  493 	mov	a,r5
      000022 64 80            [12]  494 	xrl	a,#0x80
      000024 94 80            [12]  495 	subb	a,#0x80
      000026 50 64            [24]  496 	jnc	00112$
                                    497 ;	./src/angry_bird.c:73: OLED_SetCursor(row_offset + i, col_offset + j);
      000028 AB*00            [24]  498 	mov	r3,_row_offset
      00002A 8C 02            [24]  499 	mov	ar2,r4
      00002C EA               [12]  500 	mov	a,r2
      00002D 2B               [12]  501 	add	a,r3
      00002E F5 82            [12]  502 	mov	dpl,a
      000030 AB*02            [24]  503 	mov	r3,_col_offset
      000032 8E 02            [24]  504 	mov	ar2,r6
      000034 EA               [12]  505 	mov	a,r2
      000035 2B               [12]  506 	add	a,r3
      000036 F5*00            [12]  507 	mov	_OLED_SetCursor_PARM_2,a
      000038 C0 07            [24]  508 	push	ar7
      00003A C0 06            [24]  509 	push	ar6
      00003C C0 05            [24]  510 	push	ar5
      00003E C0 04            [24]  511 	push	ar4
      000040 12r00r00         [24]  512 	lcall	_OLED_SetCursor
      000043 D0 04            [24]  513 	pop	ar4
      000045 D0 05            [24]  514 	pop	ar5
      000047 D0 06            [24]  515 	pop	ar6
      000049 D0 07            [24]  516 	pop	ar7
                                    517 ;	./src/angry_bird.c:74: oledSendData(angry_bird_logo[image_cul_size * i + j]);
      00004B 8C 02            [24]  518 	mov	ar2,r4
      00004D ED               [12]  519 	mov	a,r5
      00004E 54 03            [12]  520 	anl	a,#0x03
      000050 A2 E0            [12]  521 	mov	c,acc.0
      000052 CA               [12]  522 	xch	a,r2
      000053 13               [12]  523 	rrc	a
      000054 CA               [12]  524 	xch	a,r2
      000055 13               [12]  525 	rrc	a
      000056 A2 E0            [12]  526 	mov	c,acc.0
      000058 CA               [12]  527 	xch	a,r2
      000059 13               [12]  528 	rrc	a
      00005A CA               [12]  529 	xch	a,r2
      00005B 13               [12]  530 	rrc	a
      00005C CA               [12]  531 	xch	a,r2
      00005D FB               [12]  532 	mov	r3,a
      00005E EE               [12]  533 	mov	a,r6
      00005F 2A               [12]  534 	add	a,r2
      000060 FA               [12]  535 	mov	r2,a
      000061 EF               [12]  536 	mov	a,r7
      000062 3B               [12]  537 	addc	a,r3
      000063 FB               [12]  538 	mov	r3,a
      000064 EA               [12]  539 	mov	a,r2
      000065 24r00            [12]  540 	add	a,#_angry_bird_logo
      000067 F5 82            [12]  541 	mov	dpl,a
      000069 EB               [12]  542 	mov	a,r3
      00006A 34s00            [12]  543 	addc	a,#(_angry_bird_logo >> 8)
      00006C F5 83            [12]  544 	mov	dph,a
      00006E E4               [12]  545 	clr	a
      00006F 93               [24]  546 	movc	a,@a+dptr
      000070 F5 82            [12]  547 	mov	dpl,a
      000072 C0 07            [24]  548 	push	ar7
      000074 C0 06            [24]  549 	push	ar6
      000076 C0 05            [24]  550 	push	ar5
      000078 C0 04            [24]  551 	push	ar4
      00007A 12r00r00         [24]  552 	lcall	_oledSendData
      00007D D0 04            [24]  553 	pop	ar4
      00007F D0 05            [24]  554 	pop	ar5
      000081 D0 06            [24]  555 	pop	ar6
      000083 D0 07            [24]  556 	pop	ar7
                                    557 ;	./src/angry_bird.c:71: for (int i = 0; i < image_row_size; i++)
      000085 0C               [12]  558 	inc	r4
      000086 BC 00 94         [24]  559 	cjne	r4,#0x00,00108$
      000089 0D               [12]  560 	inc	r5
      00008A 80 91            [24]  561 	sjmp	00108$
      00008C                        562 00112$:
                                    563 ;	./src/angry_bird.c:69: for (int j = 0; j < image_cul_size; j++)
      00008C 0E               [12]  564 	inc	r6
      00008D BE 00 01         [24]  565 	cjne	r6,#0x00,00208$
      000090 0F               [12]  566 	inc	r7
      000091                        567 00208$:
      000091 02r00r0E         [24]  568 	ljmp	00111$
      000094                        569 00102$:
                                    570 ;	./src/angry_bird.c:78: OLED_SetCursor(game_name_row_cursor, game_name_col_cursor);
      000094 75*00 3C         [24]  571 	mov	_OLED_SetCursor_PARM_2,#0x3c
      000097 75 82 01         [24]  572 	mov	dpl,#0x01
      00009A 12r00r00         [24]  573 	lcall	_OLED_SetCursor
                                    574 ;	./src/angry_bird.c:79: OLED_DisplayString("Angry Bird!");
      00009D 90r02r98         [24]  575 	mov	dptr,#___str_0
      0000A0 75 F0 80         [24]  576 	mov	b,#0x80
      0000A3 12r00r00         [24]  577 	lcall	_OLED_DisplayString
                                    578 ;	./src/angry_bird.c:81: row_offset = button_up_row_cursor;
      0000A6 75*00 03         [24]  579 	mov	_row_offset,#0x03
      0000A9 75*01 00         [24]  580 	mov	(_row_offset + 1),#0x00
                                    581 ;	./src/angry_bird.c:82: col_offset = button_up_col_cursor;
      0000AC 75*02 55         [24]  582 	mov	_col_offset,#0x55
      0000AF 75*03 00         [24]  583 	mov	(_col_offset + 1),#0x00
                                    584 ;	./src/angry_bird.c:83: for (int j = 0; j < button_cul_size; j++)
      0000B2 7E 00            [12]  585 	mov	r6,#0x00
      0000B4 7F 00            [12]  586 	mov	r7,#0x00
      0000B6                        587 00117$:
      0000B6 C3               [12]  588 	clr	c
      0000B7 EE               [12]  589 	mov	a,r6
      0000B8 94 10            [12]  590 	subb	a,#0x10
      0000BA EF               [12]  591 	mov	a,r7
      0000BB 64 80            [12]  592 	xrl	a,#0x80
      0000BD 94 80            [12]  593 	subb	a,#0x80
      0000BF 50 45            [24]  594 	jnc	00104$
                                    595 ;	./src/angry_bird.c:85: for (int i = 0; i < button_row_size; i++)
      0000C1 7D 00            [12]  596 	mov	r5,#0x00
      0000C3                        597 00114$:
      0000C3 BD 01 00         [24]  598 	cjne	r5,#0x01,00210$
      0000C6                        599 00210$:
      0000C6 50 37            [24]  600 	jnc	00118$
                                    601 ;	./src/angry_bird.c:87: OLED_SetCursor(row_offset + i, col_offset + j);
      0000C8 AC*00            [24]  602 	mov	r4,_row_offset
      0000CA E4               [12]  603 	clr	a
      0000CB 2C               [12]  604 	add	a,r4
      0000CC F5 82            [12]  605 	mov	dpl,a
      0000CE AC*02            [24]  606 	mov	r4,_col_offset
      0000D0 8E 03            [24]  607 	mov	ar3,r6
      0000D2 EB               [12]  608 	mov	a,r3
      0000D3 2C               [12]  609 	add	a,r4
      0000D4 F5*00            [12]  610 	mov	_OLED_SetCursor_PARM_2,a
      0000D6 C0 07            [24]  611 	push	ar7
      0000D8 C0 06            [24]  612 	push	ar6
      0000DA C0 03            [24]  613 	push	ar3
      0000DC 12r00r00         [24]  614 	lcall	_OLED_SetCursor
      0000DF D0 03            [24]  615 	pop	ar3
                                    616 ;	./src/angry_bird.c:88: oledSendData(button_up_logo[button_cul_size * i + j]);
      0000E1 EB               [12]  617 	mov	a,r3
      0000E2 33               [12]  618 	rlc	a
      0000E3 95 E0            [12]  619 	subb	a,acc
      0000E5 FC               [12]  620 	mov	r4,a
      0000E6 EB               [12]  621 	mov	a,r3
      0000E7 24r00            [12]  622 	add	a,#_button_up_logo
      0000E9 F5 82            [12]  623 	mov	dpl,a
      0000EB EC               [12]  624 	mov	a,r4
      0000EC 34s02            [12]  625 	addc	a,#(_button_up_logo >> 8)
      0000EE F5 83            [12]  626 	mov	dph,a
      0000F0 E4               [12]  627 	clr	a
      0000F1 93               [24]  628 	movc	a,@a+dptr
      0000F2 F5 82            [12]  629 	mov	dpl,a
      0000F4 12r00r00         [24]  630 	lcall	_oledSendData
      0000F7 D0 06            [24]  631 	pop	ar6
      0000F9 D0 07            [24]  632 	pop	ar7
                                    633 ;	./src/angry_bird.c:85: for (int i = 0; i < button_row_size; i++)
      0000FB 7D 01            [12]  634 	mov	r5,#0x01
      0000FD 80 C4            [24]  635 	sjmp	00114$
      0000FF                        636 00118$:
                                    637 ;	./src/angry_bird.c:83: for (int j = 0; j < button_cul_size; j++)
      0000FF 0E               [12]  638 	inc	r6
      000100 BE 00 B3         [24]  639 	cjne	r6,#0x00,00117$
      000103 0F               [12]  640 	inc	r7
      000104 80 B0            [24]  641 	sjmp	00117$
      000106                        642 00104$:
                                    643 ;	./src/angry_bird.c:92: row_offset = button_down_row_cursor;
      000106 75*00 07         [24]  644 	mov	_row_offset,#0x07
      000109 75*01 00         [24]  645 	mov	(_row_offset + 1),#0x00
                                    646 ;	./src/angry_bird.c:93: col_offset = button_down_col_cursor;
      00010C 75*02 55         [24]  647 	mov	_col_offset,#0x55
      00010F 75*03 00         [24]  648 	mov	(_col_offset + 1),#0x00
                                    649 ;	./src/angry_bird.c:94: for (int j = 0; j < button_cul_size; j++)
      000112 7E 00            [12]  650 	mov	r6,#0x00
      000114 7F 00            [12]  651 	mov	r7,#0x00
      000116                        652 00123$:
      000116 C3               [12]  653 	clr	c
      000117 EE               [12]  654 	mov	a,r6
      000118 94 10            [12]  655 	subb	a,#0x10
      00011A EF               [12]  656 	mov	a,r7
      00011B 64 80            [12]  657 	xrl	a,#0x80
      00011D 94 80            [12]  658 	subb	a,#0x80
      00011F 50 45            [24]  659 	jnc	00106$
                                    660 ;	./src/angry_bird.c:96: for (int i = 0; i < button_row_size; i++)
      000121 7D 00            [12]  661 	mov	r5,#0x00
      000123                        662 00120$:
      000123 BD 01 00         [24]  663 	cjne	r5,#0x01,00214$
      000126                        664 00214$:
      000126 50 37            [24]  665 	jnc	00124$
                                    666 ;	./src/angry_bird.c:98: OLED_SetCursor(row_offset + i, col_offset + j);
      000128 AC*00            [24]  667 	mov	r4,_row_offset
      00012A E4               [12]  668 	clr	a
      00012B 2C               [12]  669 	add	a,r4
      00012C F5 82            [12]  670 	mov	dpl,a
      00012E AC*02            [24]  671 	mov	r4,_col_offset
      000130 8E 03            [24]  672 	mov	ar3,r6
      000132 EB               [12]  673 	mov	a,r3
      000133 2C               [12]  674 	add	a,r4
      000134 F5*00            [12]  675 	mov	_OLED_SetCursor_PARM_2,a
      000136 C0 07            [24]  676 	push	ar7
      000138 C0 06            [24]  677 	push	ar6
      00013A C0 03            [24]  678 	push	ar3
      00013C 12r00r00         [24]  679 	lcall	_OLED_SetCursor
      00013F D0 03            [24]  680 	pop	ar3
                                    681 ;	./src/angry_bird.c:99: oledSendData(button_down_logo[button_cul_size * i + j]);
      000141 EB               [12]  682 	mov	a,r3
      000142 33               [12]  683 	rlc	a
      000143 95 E0            [12]  684 	subb	a,acc
      000145 FC               [12]  685 	mov	r4,a
      000146 EB               [12]  686 	mov	a,r3
      000147 24r10            [12]  687 	add	a,#_button_down_logo
      000149 F5 82            [12]  688 	mov	dpl,a
      00014B EC               [12]  689 	mov	a,r4
      00014C 34s02            [12]  690 	addc	a,#(_button_down_logo >> 8)
      00014E F5 83            [12]  691 	mov	dph,a
      000150 E4               [12]  692 	clr	a
      000151 93               [24]  693 	movc	a,@a+dptr
      000152 F5 82            [12]  694 	mov	dpl,a
      000154 12r00r00         [24]  695 	lcall	_oledSendData
      000157 D0 06            [24]  696 	pop	ar6
      000159 D0 07            [24]  697 	pop	ar7
                                    698 ;	./src/angry_bird.c:96: for (int i = 0; i < button_row_size; i++)
      00015B 7D 01            [12]  699 	mov	r5,#0x01
      00015D 80 C4            [24]  700 	sjmp	00120$
      00015F                        701 00124$:
                                    702 ;	./src/angry_bird.c:94: for (int j = 0; j < button_cul_size; j++)
      00015F 0E               [12]  703 	inc	r6
      000160 BE 00 B3         [24]  704 	cjne	r6,#0x00,00123$
      000163 0F               [12]  705 	inc	r7
      000164 80 B0            [24]  706 	sjmp	00123$
      000166                        707 00106$:
                                    708 ;	./src/angry_bird.c:103: OLED_SetCursor(selection_row_cursor, selection_col_cursor - strlen(selection_list[selection_list_cur]));
      000166 85*04*00         [24]  709 	mov	__mulint_PARM_2,_selection_list_cur
      000169 85*05*01         [24]  710 	mov	(__mulint_PARM_2 + 1),(_selection_list_cur + 1)
      00016C 90 00 03         [24]  711 	mov	dptr,#0x0003
      00016F 12r00r00         [24]  712 	lcall	__mulint
      000172 E5 82            [12]  713 	mov	a,dpl
      000174 24r08            [12]  714 	add	a,#_selection_list
      000176 F9               [12]  715 	mov	r1,a
      000177 87 05            [24]  716 	mov	ar5,@r1
      000179 09               [12]  717 	inc	r1
      00017A 87 06            [24]  718 	mov	ar6,@r1
      00017C 09               [12]  719 	inc	r1
      00017D 87 07            [24]  720 	mov	ar7,@r1
      00017F 8D 82            [24]  721 	mov	dpl,r5
      000181 8E 83            [24]  722 	mov	dph,r6
      000183 8F F0            [24]  723 	mov	b,r7
      000185 12r00r00         [24]  724 	lcall	_strlen
      000188 AE 82            [24]  725 	mov	r6,dpl
      00018A 74 54            [12]  726 	mov	a,#0x54
      00018C C3               [12]  727 	clr	c
      00018D 9E               [12]  728 	subb	a,r6
      00018E F5*00            [12]  729 	mov	_OLED_SetCursor_PARM_2,a
      000190 75 82 05         [24]  730 	mov	dpl,#0x05
      000193 12r00r00         [24]  731 	lcall	_OLED_SetCursor
                                    732 ;	./src/angry_bird.c:104: OLED_DisplayString(selection_list[selection_list_cur]);
      000196 85*04*00         [24]  733 	mov	__mulint_PARM_2,_selection_list_cur
      000199 85*05*01         [24]  734 	mov	(__mulint_PARM_2 + 1),(_selection_list_cur + 1)
      00019C 90 00 03         [24]  735 	mov	dptr,#0x0003
      00019F 12r00r00         [24]  736 	lcall	__mulint
      0001A2 E5 82            [12]  737 	mov	a,dpl
      0001A4 24r08            [12]  738 	add	a,#_selection_list
      0001A6 F9               [12]  739 	mov	r1,a
      0001A7 87 05            [24]  740 	mov	ar5,@r1
      0001A9 09               [12]  741 	inc	r1
      0001AA 87 06            [24]  742 	mov	ar6,@r1
      0001AC 09               [12]  743 	inc	r1
      0001AD 87 07            [24]  744 	mov	ar7,@r1
      0001AF 8D 82            [24]  745 	mov	dpl,r5
      0001B1 8E 83            [24]  746 	mov	dph,r6
      0001B3 8F F0            [24]  747 	mov	b,r7
                                    748 ;	./src/angry_bird.c:105: }
      0001B5 02r00r00         [24]  749 	ljmp	_OLED_DisplayString
                                    750 ;------------------------------------------------------------
                                    751 ;Allocation info for local variables in function 'angrybird_display_setting'
                                    752 ;------------------------------------------------------------
                                    753 ;	./src/angry_bird.c:109: void angrybird_display_setting(void)
                                    754 ;	-----------------------------------------
                                    755 ;	 function angrybird_display_setting
                                    756 ;	-----------------------------------------
      0001B8                        757 _angrybird_display_setting:
                                    758 ;	./src/angry_bird.c:167: }
      0001B8 22               [24]  759 	ret
                                    760 ;------------------------------------------------------------
                                    761 ;Allocation info for local variables in function 'angrybird_display_game'
                                    762 ;------------------------------------------------------------
                                    763 ;control_strength_         Allocated with name '_angrybird_display_game_control_strength__65537_144'
                                    764 ;control_angle_            Allocated with name '_angrybird_display_game_control_angle__65537_144'
                                    765 ;i                         Allocated to registers r4 r5 
                                    766 ;angle_                    Allocated with name '_angrybird_display_game_angle__65539_146'
                                    767 ;j                         Allocated to registers r6 r7 
                                    768 ;i                         Allocated to registers r5 
                                    769 ;j                         Allocated to registers r6 r7 
                                    770 ;i                         Allocated to registers r5 
                                    771 ;j                         Allocated to registers r6 r7 
                                    772 ;i                         Allocated to registers r5 
                                    773 ;------------------------------------------------------------
                                    774 ;	./src/angry_bird.c:170: void angrybird_display_game(void)
                                    775 ;	-----------------------------------------
                                    776 ;	 function angrybird_display_game
                                    777 ;	-----------------------------------------
      0001B9                        778 _angrybird_display_game:
                                    779 ;	./src/angry_bird.c:172: OLED_Clear();
      0001B9 12r00r00         [24]  780 	lcall	_OLED_Clear
                                    781 ;	./src/angry_bird.c:176: control_strength_[0] = '0' + control_strength;
      0001BC AF*1B            [24]  782 	mov	r7,_control_strength
      0001BE 74 30            [12]  783 	mov	a,#0x30
      0001C0 2F               [12]  784 	add	a,r7
      0001C1 F5*1D            [12]  785 	mov	_angrybird_display_game_control_strength__65537_144,a
                                    786 ;	./src/angry_bird.c:177: control_strength_[1] = '\0';
                                    787 ;	./src/angry_bird.c:179: int i = 0;
                                    788 ;	./src/angry_bird.c:180: if (control_angle < 0)
      0001C3 E4               [12]  789 	clr	a
      0001C4 F5*1E            [12]  790 	mov	(_angrybird_display_game_control_strength__65537_144 + 0x0001),a
      0001C6 FE               [12]  791 	mov	r6,a
      0001C7 FF               [12]  792 	mov	r7,a
      0001C8 E5*1A            [12]  793 	mov	a,(_control_angle + 1)
      0001CA 30 E7 07         [24]  794 	jnb	acc.7,00102$
                                    795 ;	./src/angry_bird.c:181: control_angle_[i++] = '-';
      0001CD 7E 01            [12]  796 	mov	r6,#0x01
      0001CF 7F 00            [12]  797 	mov	r7,#0x00
      0001D1 75*1F 2D         [24]  798 	mov	_angrybird_display_game_control_angle__65537_144,#0x2d
      0001D4                        799 00102$:
                                    800 ;	./src/angry_bird.c:182: int angle_ = (control_angle >= 0) ? control_angle : -1 * control_angle;
      0001D4 E5*1A            [12]  801 	mov	a,(_control_angle + 1)
      0001D6 33               [12]  802 	rlc	a
      0001D7 92*00            [24]  803 	mov	_angrybird_display_game_sloc0_1_0,c
      0001D9 40 06            [24]  804 	jc	00131$
      0001DB AC*19            [24]  805 	mov	r4,_control_angle
      0001DD AD*1A            [24]  806 	mov	r5,(_control_angle + 1)
      0001DF 80 09            [24]  807 	sjmp	00132$
      0001E1                        808 00131$:
      0001E1 C3               [12]  809 	clr	c
      0001E2 E4               [12]  810 	clr	a
      0001E3 95*19            [12]  811 	subb	a,_control_angle
      0001E5 FC               [12]  812 	mov	r4,a
      0001E6 E4               [12]  813 	clr	a
      0001E7 95*1A            [12]  814 	subb	a,(_control_angle + 1)
      0001E9 FD               [12]  815 	mov	r5,a
      0001EA                        816 00132$:
      0001EA 8C*24            [24]  817 	mov	_angrybird_display_game_angle__65539_146,r4
      0001EC 8D*25            [24]  818 	mov	(_angrybird_display_game_angle__65539_146 + 1),r5
                                    819 ;	./src/angry_bird.c:183: if (angle_ % 100 / 10 != 0)
      0001EE 75*00 64         [24]  820 	mov	__modsint_PARM_2,#0x64
      0001F1 75*01 00         [24]  821 	mov	(__modsint_PARM_2 + 1),#0x00
      0001F4 85*24 82         [24]  822 	mov	dpl,_angrybird_display_game_angle__65539_146
      0001F7 85*25 83         [24]  823 	mov	dph,(_angrybird_display_game_angle__65539_146 + 1)
      0001FA C0 07            [24]  824 	push	ar7
      0001FC C0 06            [24]  825 	push	ar6
      0001FE 12r00r00         [24]  826 	lcall	__modsint
      000201 75*00 0A         [24]  827 	mov	__divsint_PARM_2,#0x0a
      000204 75*01 00         [24]  828 	mov	(__divsint_PARM_2 + 1),#0x00
      000207 12r00r00         [24]  829 	lcall	__divsint
      00020A AA 82            [24]  830 	mov	r2,dpl
      00020C AB 83            [24]  831 	mov	r3,dph
      00020E D0 06            [24]  832 	pop	ar6
      000210 D0 07            [24]  833 	pop	ar7
      000212 EA               [12]  834 	mov	a,r2
      000213 4B               [12]  835 	orl	a,r3
      000214 60 11            [24]  836 	jz	00104$
                                    837 ;	./src/angry_bird.c:184: control_angle_[i++] = '0' + angle_ % 100 / 10;
      000216 8E 04            [24]  838 	mov	ar4,r6
      000218 8F 05            [24]  839 	mov	ar5,r7
      00021A 0E               [12]  840 	inc	r6
      00021B BE 00 01         [24]  841 	cjne	r6,#0x00,00247$
      00021E 0F               [12]  842 	inc	r7
      00021F                        843 00247$:
      00021F EC               [12]  844 	mov	a,r4
      000220 24r1F            [12]  845 	add	a,#_angrybird_display_game_control_angle__65537_144
      000222 F9               [12]  846 	mov	r1,a
      000223 74 30            [12]  847 	mov	a,#0x30
      000225 2A               [12]  848 	add	a,r2
      000226 F7               [12]  849 	mov	@r1,a
      000227                        850 00104$:
                                    851 ;	./src/angry_bird.c:185: control_angle_[i++] = '0' + angle_ % 10;
      000227 74 01            [12]  852 	mov	a,#0x01
      000229 2E               [12]  853 	add	a,r6
      00022A FC               [12]  854 	mov	r4,a
      00022B E4               [12]  855 	clr	a
      00022C 3F               [12]  856 	addc	a,r7
      00022D FD               [12]  857 	mov	r5,a
      00022E EE               [12]  858 	mov	a,r6
      00022F 24r1F            [12]  859 	add	a,#_angrybird_display_game_control_angle__65537_144
      000231 F9               [12]  860 	mov	r1,a
      000232 75*00 0A         [24]  861 	mov	__modsint_PARM_2,#0x0a
      000235 75*01 00         [24]  862 	mov	(__modsint_PARM_2 + 1),#0x00
      000238 85*24 82         [24]  863 	mov	dpl,_angrybird_display_game_angle__65539_146
      00023B 85*25 83         [24]  864 	mov	dph,(_angrybird_display_game_angle__65539_146 + 1)
      00023E C0 05            [24]  865 	push	ar5
      000240 C0 04            [24]  866 	push	ar4
      000242 C0 01            [24]  867 	push	ar1
      000244 12r00r00         [24]  868 	lcall	__modsint
      000247 AE 82            [24]  869 	mov	r6,dpl
      000249 D0 01            [24]  870 	pop	ar1
      00024B D0 04            [24]  871 	pop	ar4
      00024D D0 05            [24]  872 	pop	ar5
      00024F 74 30            [12]  873 	mov	a,#0x30
      000251 2E               [12]  874 	add	a,r6
      000252 F7               [12]  875 	mov	@r1,a
                                    876 ;	./src/angry_bird.c:186: control_angle_[i++] = '\0';
      000253 EC               [12]  877 	mov	a,r4
      000254 24r1F            [12]  878 	add	a,#_angrybird_display_game_control_angle__65537_144
      000256 F8               [12]  879 	mov	r0,a
      000257 76 00            [12]  880 	mov	@r0,#0x00
                                    881 ;	./src/angry_bird.c:188: OLED_SetCursor(strength_text_row_cursor, 0);
      000259 75*00 00         [24]  882 	mov	_OLED_SetCursor_PARM_2,#0x00
      00025C 75 82 00         [24]  883 	mov	dpl,#0x00
      00025F 12r00r00         [24]  884 	lcall	_OLED_SetCursor
                                    885 ;	./src/angry_bird.c:189: OLED_DisplayString("S ");
      000262 90r02rA4         [24]  886 	mov	dptr,#___str_1
      000265 75 F0 80         [24]  887 	mov	b,#0x80
      000268 12r00r00         [24]  888 	lcall	_OLED_DisplayString
                                    889 ;	./src/angry_bird.c:190: OLED_SetCursor(strength_text_row_cursor, strength_text_col_cursor);
      00026B 75*00 0A         [24]  890 	mov	_OLED_SetCursor_PARM_2,#0x0a
      00026E 75 82 00         [24]  891 	mov	dpl,#0x00
      000271 12r00r00         [24]  892 	lcall	_OLED_SetCursor
                                    893 ;	./src/angry_bird.c:191: OLED_DisplayString(control_strength_);
      000274 90r00r1D         [24]  894 	mov	dptr,#_angrybird_display_game_control_strength__65537_144
      000277 75 F0 40         [24]  895 	mov	b,#0x40
      00027A 12r00r00         [24]  896 	lcall	_OLED_DisplayString
                                    897 ;	./src/angry_bird.c:193: OLED_SetCursor(strength_text_row_cursor, 20);
      00027D 75*00 14         [24]  898 	mov	_OLED_SetCursor_PARM_2,#0x14
      000280 75 82 00         [24]  899 	mov	dpl,#0x00
      000283 12r00r00         [24]  900 	lcall	_OLED_SetCursor
                                    901 ;	./src/angry_bird.c:194: OLED_DisplayString("A ");
      000286 90r02rA7         [24]  902 	mov	dptr,#___str_2
      000289 75 F0 80         [24]  903 	mov	b,#0x80
      00028C 12r00r00         [24]  904 	lcall	_OLED_DisplayString
                                    905 ;	./src/angry_bird.c:195: OLED_SetCursor(angle_text_row_cursor, angle_text_col_cursor);
      00028F 75*00 1E         [24]  906 	mov	_OLED_SetCursor_PARM_2,#0x1e
      000292 75 82 00         [24]  907 	mov	dpl,#0x00
      000295 12r00r00         [24]  908 	lcall	_OLED_SetCursor
                                    909 ;	./src/angry_bird.c:196: OLED_DisplayString(control_angle_);
      000298 90r00r1F         [24]  910 	mov	dptr,#_angrybird_display_game_control_angle__65537_144
      00029B 75 F0 40         [24]  911 	mov	b,#0x40
      00029E 12r00r00         [24]  912 	lcall	_OLED_DisplayString
                                    913 ;	./src/angry_bird.c:214: row_offset = shoot_row_cursor;
      0002A1 75*00 06         [24]  914 	mov	_row_offset,#0x06
                                    915 ;	./src/angry_bird.c:215: col_offset = shoot_col_cursor;
      0002A4 E4               [12]  916 	clr	a
      0002A5 F5*01            [12]  917 	mov	(_row_offset + 1),a
      0002A7 F5*02            [12]  918 	mov	_col_offset,a
      0002A9 F5*03            [12]  919 	mov	(_col_offset + 1),a
                                    920 ;	./src/angry_bird.c:216: for (int j = 0; j < shoot_cul_size; j++)
      0002AB FE               [12]  921 	mov	r6,a
      0002AC FF               [12]  922 	mov	r7,a
      0002AD                        923 00115$:
      0002AD C3               [12]  924 	clr	c
      0002AE EE               [12]  925 	mov	a,r6
      0002AF 94 08            [12]  926 	subb	a,#0x08
      0002B1 EF               [12]  927 	mov	a,r7
      0002B2 64 80            [12]  928 	xrl	a,#0x80
      0002B4 94 80            [12]  929 	subb	a,#0x80
      0002B6 50 54            [24]  930 	jnc	00106$
                                    931 ;	./src/angry_bird.c:218: for (int i = 0; i < shoot_row_size; i++)
      0002B8 7D 00            [12]  932 	mov	r5,#0x00
      0002BA                        933 00112$:
      0002BA BD 02 00         [24]  934 	cjne	r5,#0x02,00249$
      0002BD                        935 00249$:
      0002BD 50 46            [24]  936 	jnc	00116$
                                    937 ;	./src/angry_bird.c:220: OLED_SetCursor(row_offset + i, col_offset + j);
      0002BF AC*00            [24]  938 	mov	r4,_row_offset
      0002C1 8D 03            [24]  939 	mov	ar3,r5
      0002C3 EB               [12]  940 	mov	a,r3
      0002C4 2C               [12]  941 	add	a,r4
      0002C5 F5 82            [12]  942 	mov	dpl,a
      0002C7 AC*02            [24]  943 	mov	r4,_col_offset
      0002C9 8E 02            [24]  944 	mov	ar2,r6
      0002CB EA               [12]  945 	mov	a,r2
      0002CC 2C               [12]  946 	add	a,r4
      0002CD F5*00            [12]  947 	mov	_OLED_SetCursor_PARM_2,a
      0002CF C0 07            [24]  948 	push	ar7
      0002D1 C0 06            [24]  949 	push	ar6
      0002D3 C0 05            [24]  950 	push	ar5
      0002D5 C0 03            [24]  951 	push	ar3
      0002D7 C0 02            [24]  952 	push	ar2
      0002D9 12r00r00         [24]  953 	lcall	_OLED_SetCursor
      0002DC D0 02            [24]  954 	pop	ar2
      0002DE D0 03            [24]  955 	pop	ar3
                                    956 ;	./src/angry_bird.c:221: oledSendData(shooter_logo[shoot_cul_size * i + j]);
      0002E0 EB               [12]  957 	mov	a,r3
      0002E1 C4               [12]  958 	swap	a
      0002E2 03               [12]  959 	rr	a
      0002E3 54 F8            [12]  960 	anl	a,#0xf8
      0002E5 2A               [12]  961 	add	a,r2
      0002E6 FA               [12]  962 	mov	r2,a
      0002E7 33               [12]  963 	rlc	a
      0002E8 95 E0            [12]  964 	subb	a,acc
      0002EA FC               [12]  965 	mov	r4,a
      0002EB EA               [12]  966 	mov	a,r2
      0002EC 24r68            [12]  967 	add	a,#_shooter_logo
      0002EE F5 82            [12]  968 	mov	dpl,a
      0002F0 EC               [12]  969 	mov	a,r4
      0002F1 34s02            [12]  970 	addc	a,#(_shooter_logo >> 8)
      0002F3 F5 83            [12]  971 	mov	dph,a
      0002F5 E4               [12]  972 	clr	a
      0002F6 93               [24]  973 	movc	a,@a+dptr
      0002F7 F5 82            [12]  974 	mov	dpl,a
      0002F9 12r00r00         [24]  975 	lcall	_oledSendData
      0002FC D0 05            [24]  976 	pop	ar5
      0002FE D0 06            [24]  977 	pop	ar6
      000300 D0 07            [24]  978 	pop	ar7
                                    979 ;	./src/angry_bird.c:218: for (int i = 0; i < shoot_row_size; i++)
      000302 0D               [12]  980 	inc	r5
      000303 80 B5            [24]  981 	sjmp	00112$
      000305                        982 00116$:
                                    983 ;	./src/angry_bird.c:216: for (int j = 0; j < shoot_cul_size; j++)
      000305 0E               [12]  984 	inc	r6
      000306 BE 00 A4         [24]  985 	cjne	r6,#0x00,00115$
      000309 0F               [12]  986 	inc	r7
      00030A 80 A1            [24]  987 	sjmp	00115$
      00030C                        988 00106$:
                                    989 ;	./src/angry_bird.c:226: row_offset = bird_init_row_cursor;
      00030C 75*00 07         [24]  990 	mov	_row_offset,#0x07
      00030F 75*01 00         [24]  991 	mov	(_row_offset + 1),#0x00
                                    992 ;	./src/angry_bird.c:227: col_offset = bird_init_col_cursor;
      000312 75*02 08         [24]  993 	mov	_col_offset,#0x08
      000315 75*03 00         [24]  994 	mov	(_col_offset + 1),#0x00
                                    995 ;	./src/angry_bird.c:228: for (int j = 0; j < bird_cul_size; j++)
      000318 7E 00            [12]  996 	mov	r6,#0x00
      00031A 7F 00            [12]  997 	mov	r7,#0x00
      00031C                        998 00121$:
      00031C C3               [12]  999 	clr	c
      00031D EE               [12] 1000 	mov	a,r6
      00031E 94 08            [12] 1001 	subb	a,#0x08
      000320 EF               [12] 1002 	mov	a,r7
      000321 64 80            [12] 1003 	xrl	a,#0x80
      000323 94 80            [12] 1004 	subb	a,#0x80
      000325 50 45            [24] 1005 	jnc	00108$
                                   1006 ;	./src/angry_bird.c:230: for (int i = 0; i < bird_row_size; i++)
      000327 7D 00            [12] 1007 	mov	r5,#0x00
      000329                       1008 00118$:
      000329 BD 01 00         [24] 1009 	cjne	r5,#0x01,00253$
      00032C                       1010 00253$:
      00032C 50 37            [24] 1011 	jnc	00122$
                                   1012 ;	./src/angry_bird.c:232: OLED_SetCursor(row_offset + i, col_offset + j);
      00032E AC*00            [24] 1013 	mov	r4,_row_offset
      000330 E4               [12] 1014 	clr	a
      000331 2C               [12] 1015 	add	a,r4
      000332 F5 82            [12] 1016 	mov	dpl,a
      000334 AC*02            [24] 1017 	mov	r4,_col_offset
      000336 8E 03            [24] 1018 	mov	ar3,r6
      000338 EB               [12] 1019 	mov	a,r3
      000339 2C               [12] 1020 	add	a,r4
      00033A F5*00            [12] 1021 	mov	_OLED_SetCursor_PARM_2,a
      00033C C0 07            [24] 1022 	push	ar7
      00033E C0 06            [24] 1023 	push	ar6
      000340 C0 03            [24] 1024 	push	ar3
      000342 12r00r00         [24] 1025 	lcall	_OLED_SetCursor
      000345 D0 03            [24] 1026 	pop	ar3
                                   1027 ;	./src/angry_bird.c:233: oledSendData(bird_logo[bird_cul_size * i + j]);
      000347 EB               [12] 1028 	mov	a,r3
      000348 33               [12] 1029 	rlc	a
      000349 95 E0            [12] 1030 	subb	a,acc
      00034B FC               [12] 1031 	mov	r4,a
      00034C EB               [12] 1032 	mov	a,r3
      00034D 24r90            [12] 1033 	add	a,#_bird_logo
      00034F F5 82            [12] 1034 	mov	dpl,a
      000351 EC               [12] 1035 	mov	a,r4
      000352 34s02            [12] 1036 	addc	a,#(_bird_logo >> 8)
      000354 F5 83            [12] 1037 	mov	dph,a
      000356 E4               [12] 1038 	clr	a
      000357 93               [24] 1039 	movc	a,@a+dptr
      000358 F5 82            [12] 1040 	mov	dpl,a
      00035A 12r00r00         [24] 1041 	lcall	_oledSendData
      00035D D0 06            [24] 1042 	pop	ar6
      00035F D0 07            [24] 1043 	pop	ar7
                                   1044 ;	./src/angry_bird.c:230: for (int i = 0; i < bird_row_size; i++)
      000361 7D 01            [12] 1045 	mov	r5,#0x01
      000363 80 C4            [24] 1046 	sjmp	00118$
      000365                       1047 00122$:
                                   1048 ;	./src/angry_bird.c:228: for (int j = 0; j < bird_cul_size; j++)
      000365 0E               [12] 1049 	inc	r6
      000366 BE 00 B3         [24] 1050 	cjne	r6,#0x00,00121$
      000369 0F               [12] 1051 	inc	r7
      00036A 80 B0            [24] 1052 	sjmp	00121$
      00036C                       1053 00108$:
                                   1054 ;	./src/angry_bird.c:255: row_offset = pig1_row_cursor;
      00036C 75*00 03         [24] 1055 	mov	_row_offset,#0x03
      00036F 75*01 00         [24] 1056 	mov	(_row_offset + 1),#0x00
                                   1057 ;	./src/angry_bird.c:256: col_offset = pig1_col_cursor;
      000372 75*02 50         [24] 1058 	mov	_col_offset,#0x50
      000375 75*03 00         [24] 1059 	mov	(_col_offset + 1),#0x00
                                   1060 ;	./src/angry_bird.c:257: for (int j = 0; j < pig_cul_size; j++)
      000378 7E 00            [12] 1061 	mov	r6,#0x00
      00037A 7F 00            [12] 1062 	mov	r7,#0x00
      00037C                       1063 00127$:
      00037C C3               [12] 1064 	clr	c
      00037D EE               [12] 1065 	mov	a,r6
      00037E 94 0C            [12] 1066 	subb	a,#0x0c
      000380 EF               [12] 1067 	mov	a,r7
      000381 64 80            [12] 1068 	xrl	a,#0x80
      000383 94 80            [12] 1069 	subb	a,#0x80
      000385 50 54            [24] 1070 	jnc	00129$
                                   1071 ;	./src/angry_bird.c:259: for (int i = 0; i < pig_row_size; i++)
      000387 7D 00            [12] 1072 	mov	r5,#0x00
      000389                       1073 00124$:
      000389 BD 02 00         [24] 1074 	cjne	r5,#0x02,00257$
      00038C                       1075 00257$:
      00038C 50 46            [24] 1076 	jnc	00128$
                                   1077 ;	./src/angry_bird.c:261: OLED_SetCursor(row_offset + i, col_offset + j);
      00038E AC*00            [24] 1078 	mov	r4,_row_offset
      000390 8D 03            [24] 1079 	mov	ar3,r5
      000392 EB               [12] 1080 	mov	a,r3
      000393 2C               [12] 1081 	add	a,r4
      000394 F5 82            [12] 1082 	mov	dpl,a
      000396 AC*02            [24] 1083 	mov	r4,_col_offset
      000398 8E 02            [24] 1084 	mov	ar2,r6
      00039A EA               [12] 1085 	mov	a,r2
      00039B 2C               [12] 1086 	add	a,r4
      00039C F5*00            [12] 1087 	mov	_OLED_SetCursor_PARM_2,a
      00039E C0 07            [24] 1088 	push	ar7
      0003A0 C0 06            [24] 1089 	push	ar6
      0003A2 C0 05            [24] 1090 	push	ar5
      0003A4 C0 03            [24] 1091 	push	ar3
      0003A6 C0 02            [24] 1092 	push	ar2
      0003A8 12r00r00         [24] 1093 	lcall	_OLED_SetCursor
      0003AB D0 02            [24] 1094 	pop	ar2
      0003AD D0 03            [24] 1095 	pop	ar3
                                   1096 ;	./src/angry_bird.c:262: oledSendData(pig_logo[pig_cul_size * i + j]);
      0003AF EB               [12] 1097 	mov	a,r3
      0003B0 75 F0 0C         [24] 1098 	mov	b,#0x0c
      0003B3 A4               [48] 1099 	mul	ab
      0003B4 2A               [12] 1100 	add	a,r2
      0003B5 FA               [12] 1101 	mov	r2,a
      0003B6 33               [12] 1102 	rlc	a
      0003B7 95 E0            [12] 1103 	subb	a,acc
      0003B9 FC               [12] 1104 	mov	r4,a
      0003BA EA               [12] 1105 	mov	a,r2
      0003BB 24r78            [12] 1106 	add	a,#_pig_logo
      0003BD F5 82            [12] 1107 	mov	dpl,a
      0003BF EC               [12] 1108 	mov	a,r4
      0003C0 34s02            [12] 1109 	addc	a,#(_pig_logo >> 8)
      0003C2 F5 83            [12] 1110 	mov	dph,a
      0003C4 E4               [12] 1111 	clr	a
      0003C5 93               [24] 1112 	movc	a,@a+dptr
      0003C6 F5 82            [12] 1113 	mov	dpl,a
      0003C8 12r00r00         [24] 1114 	lcall	_oledSendData
      0003CB D0 05            [24] 1115 	pop	ar5
      0003CD D0 06            [24] 1116 	pop	ar6
      0003CF D0 07            [24] 1117 	pop	ar7
                                   1118 ;	./src/angry_bird.c:259: for (int i = 0; i < pig_row_size; i++)
      0003D1 0D               [12] 1119 	inc	r5
      0003D2 80 B5            [24] 1120 	sjmp	00124$
      0003D4                       1121 00128$:
                                   1122 ;	./src/angry_bird.c:257: for (int j = 0; j < pig_cul_size; j++)
      0003D4 0E               [12] 1123 	inc	r6
      0003D5 BE 00 A4         [24] 1124 	cjne	r6,#0x00,00127$
      0003D8 0F               [12] 1125 	inc	r7
      0003D9 80 A1            [24] 1126 	sjmp	00127$
      0003DB                       1127 00129$:
                                   1128 ;	./src/angry_bird.c:265: }
      0003DB 22               [24] 1129 	ret
                                   1130 ;------------------------------------------------------------
                                   1131 ;Allocation info for local variables in function 'angrybird_state_machine'
                                   1132 ;------------------------------------------------------------
                                   1133 ;	./src/angry_bird.c:273: void angrybird_state_machine(void)
                                   1134 ;	-----------------------------------------
                                   1135 ;	 function angrybird_state_machine
                                   1136 ;	-----------------------------------------
      0003DC                       1137 _angrybird_state_machine:
                                   1138 ;	./src/angry_bird.c:275: switch (cur_state)
      0003DC 74 01            [12] 1139 	mov	a,#0x01
      0003DE B5*26 06         [24] 1140 	cjne	a,_cur_state,00132$
      0003E1 14               [12] 1141 	dec	a
      0003E2 B5*27 02         [24] 1142 	cjne	a,(_cur_state + 1),00132$
      0003E5 80 22            [24] 1143 	sjmp	00101$
      0003E7                       1144 00132$:
      0003E7 74 02            [12] 1145 	mov	a,#0x02
      0003E9 B5*26 06         [24] 1146 	cjne	a,_cur_state,00133$
      0003EC E4               [12] 1147 	clr	a
      0003ED B5*27 02         [24] 1148 	cjne	a,(_cur_state + 1),00133$
      0003F0 80 1A            [24] 1149 	sjmp	00102$
      0003F2                       1150 00133$:
      0003F2 74 03            [12] 1151 	mov	a,#0x03
      0003F4 B5*26 06         [24] 1152 	cjne	a,_cur_state,00134$
      0003F7 E4               [12] 1153 	clr	a
      0003F8 B5*27 02         [24] 1154 	cjne	a,(_cur_state + 1),00134$
      0003FB 80 12            [24] 1155 	sjmp	00104$
      0003FD                       1156 00134$:
      0003FD 74 04            [12] 1157 	mov	a,#0x04
      0003FF B5*26 06         [24] 1158 	cjne	a,_cur_state,00135$
      000402 E4               [12] 1159 	clr	a
      000403 B5*27 02         [24] 1160 	cjne	a,(_cur_state + 1),00135$
      000406 80 07            [24] 1161 	sjmp	00104$
      000408                       1162 00135$:
                                   1163 ;	./src/angry_bird.c:277: case STATE_HOME:
      000408 22               [24] 1164 	ret
      000409                       1165 00101$:
                                   1166 ;	./src/angry_bird.c:278: angrybird_home_state();
                                   1167 ;	./src/angry_bird.c:279: break;
                                   1168 ;	./src/angry_bird.c:281: case STATE_SETTING:
      000409 02r04r12         [24] 1169 	ljmp	_angrybird_home_state
      00040C                       1170 00102$:
                                   1171 ;	./src/angry_bird.c:282: angrybird_setting_state();
                                   1172 ;	./src/angry_bird.c:283: break;
                                   1173 ;	./src/angry_bird.c:286: case STATE_PLAY_HARD:
      00040C 02r05rCB         [24] 1174 	ljmp	_angrybird_setting_state
      00040F                       1175 00104$:
                                   1176 ;	./src/angry_bird.c:287: angrybird_game_state();
                                   1177 ;	./src/angry_bird.c:289: }
                                   1178 ;	./src/angry_bird.c:294: }
      00040F 02r05rCC         [24] 1179 	ljmp	_angrybird_game_state
                                   1180 ;------------------------------------------------------------
                                   1181 ;Allocation info for local variables in function 'angrybird_home_state'
                                   1182 ;------------------------------------------------------------
                                   1183 ;	./src/angry_bird.c:302: void angrybird_home_state(void)
                                   1184 ;	-----------------------------------------
                                   1185 ;	 function angrybird_home_state
                                   1186 ;	-----------------------------------------
      000412                       1187 _angrybird_home_state:
                                   1188 ;	./src/angry_bird.c:304: if ((but_up == 0) && (prebut_up == 1))
      000412 20 A0 2A         [24] 1189 	jb	_P2_0,00106$
      000415 74 01            [12] 1190 	mov	a,#0x01
      000417 B5*2C 06         [24] 1191 	cjne	a,_prebut_up,00236$
      00041A 14               [12] 1192 	dec	a
      00041B B5*2D 02         [24] 1193 	cjne	a,(_prebut_up + 1),00236$
      00041E 80 02            [24] 1194 	sjmp	00237$
      000420                       1195 00236$:
      000420 80 1D            [24] 1196 	sjmp	00106$
      000422                       1197 00237$:
                                   1198 ;	./src/angry_bird.c:306: delay_ms(10);
      000422 90 00 0A         [24] 1199 	mov	dptr,#0x000a
      000425 12r00r00         [24] 1200 	lcall	_delay_ms
                                   1201 ;	./src/angry_bird.c:307: if (but_up == 0)
      000428 20 A0 14         [24] 1202 	jb	_P2_0,00106$
                                   1203 ;	./src/angry_bird.c:309: selection_list_cur--;
      00042B 15*04            [12] 1204 	dec	_selection_list_cur
      00042D 74 FF            [12] 1205 	mov	a,#0xff
      00042F B5*04 02         [24] 1206 	cjne	a,_selection_list_cur,00239$
      000432 15*05            [12] 1207 	dec	(_selection_list_cur + 1)
      000434                       1208 00239$:
                                   1209 ;	./src/angry_bird.c:310: if (selection_list_cur < 0)
      000434 E5*05            [12] 1210 	mov	a,(_selection_list_cur + 1)
      000436 30 E7 06         [24] 1211 	jnb	acc.7,00106$
                                   1212 ;	./src/angry_bird.c:311: selection_list_cur = 2;
      000439 75*04 02         [24] 1213 	mov	_selection_list_cur,#0x02
      00043C 75*05 00         [24] 1214 	mov	(_selection_list_cur + 1),#0x00
      00043F                       1215 00106$:
                                   1216 ;	./src/angry_bird.c:314: if ((but_down == 0) && (prebut_down == 1))
      00043F 20 A1 34         [24] 1217 	jb	_P2_1,00113$
      000442 74 01            [12] 1218 	mov	a,#0x01
      000444 B5*2E 06         [24] 1219 	cjne	a,_prebut_down,00242$
      000447 14               [12] 1220 	dec	a
      000448 B5*2F 02         [24] 1221 	cjne	a,(_prebut_down + 1),00242$
      00044B 80 02            [24] 1222 	sjmp	00243$
      00044D                       1223 00242$:
      00044D 80 27            [24] 1224 	sjmp	00113$
      00044F                       1225 00243$:
                                   1226 ;	./src/angry_bird.c:316: delay_ms(10);
      00044F 90 00 0A         [24] 1227 	mov	dptr,#0x000a
      000452 12r00r00         [24] 1228 	lcall	_delay_ms
                                   1229 ;	./src/angry_bird.c:317: if (but_down == 0)
      000455 20 A1 1E         [24] 1230 	jb	_P2_1,00113$
                                   1231 ;	./src/angry_bird.c:319: selection_list_cur++;
      000458 05*04            [12] 1232 	inc	_selection_list_cur
      00045A E4               [12] 1233 	clr	a
      00045B B5*04 02         [24] 1234 	cjne	a,_selection_list_cur,00245$
      00045E 05*05            [12] 1235 	inc	(_selection_list_cur + 1)
      000460                       1236 00245$:
                                   1237 ;	./src/angry_bird.c:320: if (selection_list_cur > 2)
      000460 C3               [12] 1238 	clr	c
      000461 74 02            [12] 1239 	mov	a,#0x02
      000463 95*04            [12] 1240 	subb	a,_selection_list_cur
      000465 74 80            [12] 1241 	mov	a,#(0x00 ^ 0x80)
      000467 85*05 F0         [24] 1242 	mov	b,(_selection_list_cur + 1)
      00046A 63 F0 80         [24] 1243 	xrl	b,#0x80
      00046D 95 F0            [12] 1244 	subb	a,b
      00046F 50 05            [24] 1245 	jnc	00113$
                                   1246 ;	./src/angry_bird.c:321: selection_list_cur = 0;
      000471 E4               [12] 1247 	clr	a
      000472 F5*04            [12] 1248 	mov	_selection_list_cur,a
      000474 F5*05            [12] 1249 	mov	(_selection_list_cur + 1),a
      000476                       1250 00113$:
                                   1251 ;	./src/angry_bird.c:324: if ((but_enter == 0) && (prebut_enter == 1))
      000476 30 B3 03         [24] 1252 	jnb	_INT1,00247$
      000479 02r05r09         [24] 1253 	ljmp	00127$
      00047C                       1254 00247$:
      00047C 74 01            [12] 1255 	mov	a,#0x01
      00047E B5*34 06         [24] 1256 	cjne	a,_prebut_enter,00248$
      000481 14               [12] 1257 	dec	a
      000482 B5*35 02         [24] 1258 	cjne	a,(_prebut_enter + 1),00248$
      000485 80 03            [24] 1259 	sjmp	00249$
      000487                       1260 00248$:
      000487 02r05r09         [24] 1261 	ljmp	00127$
      00048A                       1262 00249$:
                                   1263 ;	./src/angry_bird.c:326: delay_ms(10);
      00048A 90 00 0A         [24] 1264 	mov	dptr,#0x000a
      00048D 12r00r00         [24] 1265 	lcall	_delay_ms
                                   1266 ;	./src/angry_bird.c:327: if (but_enter == 0)
      000490 30 B3 03         [24] 1267 	jnb	_INT1,00250$
      000493 02r05r09         [24] 1268 	ljmp	00127$
      000496                       1269 00250$:
                                   1270 ;	./src/angry_bird.c:330: switch (selection_list_cur + 2)
      000496 74 02            [12] 1271 	mov	a,#0x02
      000498 25*04            [12] 1272 	add	a,_selection_list_cur
      00049A FE               [12] 1273 	mov	r6,a
      00049B E4               [12] 1274 	clr	a
      00049C 35*05            [12] 1275 	addc	a,(_selection_list_cur + 1)
      00049E FF               [12] 1276 	mov	r7,a
      00049F BE 02 05         [24] 1277 	cjne	r6,#0x02,00251$
      0004A2 BF 00 02         [24] 1278 	cjne	r7,#0x00,00251$
      0004A5 80 10            [24] 1279 	sjmp	00115$
      0004A7                       1280 00251$:
      0004A7 BE 03 05         [24] 1281 	cjne	r6,#0x03,00252$
      0004AA BF 00 02         [24] 1282 	cjne	r7,#0x00,00252$
      0004AD 80 13            [24] 1283 	sjmp	00117$
      0004AF                       1284 00252$:
                                   1285 ;	./src/angry_bird.c:332: case STATE_SETTING:
      0004AF BE 04 2B         [24] 1286 	cjne	r6,#0x04,00118$
      0004B2 BF 00 28         [24] 1287 	cjne	r7,#0x00,00118$
      0004B5 80 0B            [24] 1288 	sjmp	00117$
      0004B7                       1289 00115$:
                                   1290 ;	./src/angry_bird.c:333: angrybird_display_setting();
      0004B7 12r01rB8         [24] 1291 	lcall	_angrybird_display_setting
                                   1292 ;	./src/angry_bird.c:334: cur_state = STATE_SETTING;
      0004BA 75*26 02         [24] 1293 	mov	_cur_state,#0x02
      0004BD 75*27 00         [24] 1294 	mov	(_cur_state + 1),#0x00
                                   1295 ;	./src/angry_bird.c:335: break;
                                   1296 ;	./src/angry_bird.c:338: case STATE_PLAY_HARD:
      0004C0 80 1B            [24] 1297 	sjmp	00118$
      0004C2                       1298 00117$:
                                   1299 ;	./src/angry_bird.c:339: bird_amt = bird_total_amount;
      0004C2 75*28 09         [24] 1300 	mov	_bird_amt,#0x09
      0004C5 75*29 00         [24] 1301 	mov	(_bird_amt + 1),#0x00
                                   1302 ;	./src/angry_bird.c:340: pig_amt = pig_total_amount;
      0004C8 75*2A 03         [24] 1303 	mov	_pig_amt,#0x03
      0004CB 75*2B 00         [24] 1304 	mov	(_pig_amt + 1),#0x00
                                   1305 ;	./src/angry_bird.c:341: control_angle = 60;
      0004CE 75*19 3C         [24] 1306 	mov	_control_angle,#0x3c
      0004D1 75*1A 00         [24] 1307 	mov	(_control_angle + 1),#0x00
                                   1308 ;	./src/angry_bird.c:342: control_strength = 3;
      0004D4 75*1B 03         [24] 1309 	mov	_control_strength,#0x03
      0004D7 75*1C 00         [24] 1310 	mov	(_control_strength + 1),#0x00
                                   1311 ;	./src/angry_bird.c:343: angrybird_display_game();
      0004DA 12r01rB9         [24] 1312 	lcall	_angrybird_display_game
                                   1313 ;	./src/angry_bird.c:346: }
      0004DD                       1314 00118$:
                                   1315 ;	./src/angry_bird.c:348: if (selection_list_cur + 2 == STATE_PLAY_EASY)
      0004DD 74 02            [12] 1316 	mov	a,#0x02
      0004DF 25*04            [12] 1317 	add	a,_selection_list_cur
      0004E1 FE               [12] 1318 	mov	r6,a
      0004E2 E4               [12] 1319 	clr	a
      0004E3 35*05            [12] 1320 	addc	a,(_selection_list_cur + 1)
      0004E5 FF               [12] 1321 	mov	r7,a
      0004E6 BE 03 0B         [24] 1322 	cjne	r6,#0x03,00122$
      0004E9 BF 00 08         [24] 1323 	cjne	r7,#0x00,00122$
                                   1324 ;	./src/angry_bird.c:349: cur_state = STATE_PLAY_EASY;
      0004EC 75*26 03         [24] 1325 	mov	_cur_state,#0x03
      0004EF 75*27 00         [24] 1326 	mov	(_cur_state + 1),#0x00
      0004F2 80 15            [24] 1327 	sjmp	00127$
      0004F4                       1328 00122$:
                                   1329 ;	./src/angry_bird.c:350: else if (selection_list_cur + 2 == STATE_PLAY_HARD)
      0004F4 74 02            [12] 1330 	mov	a,#0x02
      0004F6 25*04            [12] 1331 	add	a,_selection_list_cur
      0004F8 FE               [12] 1332 	mov	r6,a
      0004F9 E4               [12] 1333 	clr	a
      0004FA 35*05            [12] 1334 	addc	a,(_selection_list_cur + 1)
      0004FC FF               [12] 1335 	mov	r7,a
      0004FD BE 04 09         [24] 1336 	cjne	r6,#0x04,00127$
      000500 BF 00 06         [24] 1337 	cjne	r7,#0x00,00127$
                                   1338 ;	./src/angry_bird.c:351: cur_state = STATE_PLAY_HARD;
      000503 75*26 04         [24] 1339 	mov	_cur_state,#0x04
      000506 75*27 00         [24] 1340 	mov	(_cur_state + 1),#0x00
      000509                       1341 00127$:
                                   1342 ;	./src/angry_bird.c:355: if (selection_list_past != selection_list_cur)
      000509 E5*04            [12] 1343 	mov	a,_selection_list_cur
      00050B B5*06 08         [24] 1344 	cjne	a,_selection_list_past,00258$
      00050E E5*05            [12] 1345 	mov	a,(_selection_list_cur + 1)
      000510 B5*07 03         [24] 1346 	cjne	a,(_selection_list_past + 1),00258$
      000513 02r05rA4         [24] 1347 	ljmp	00130$
      000516                       1348 00258$:
                                   1349 ;	./src/angry_bird.c:357: OLED_SetCursor(selection_row_cursor, selection_col_cursor - strlen(selection_list[selection_list_past]));
      000516 85*06*00         [24] 1350 	mov	__mulint_PARM_2,_selection_list_past
      000519 85*07*01         [24] 1351 	mov	(__mulint_PARM_2 + 1),(_selection_list_past + 1)
      00051C 90 00 03         [24] 1352 	mov	dptr,#0x0003
      00051F 12r00r00         [24] 1353 	lcall	__mulint
      000522 AE 82            [24] 1354 	mov	r6,dpl
      000524 EE               [12] 1355 	mov	a,r6
      000525 24r08            [12] 1356 	add	a,#_selection_list
      000527 F9               [12] 1357 	mov	r1,a
      000528 87 05            [24] 1358 	mov	ar5,@r1
      00052A 09               [12] 1359 	inc	r1
      00052B 87 06            [24] 1360 	mov	ar6,@r1
      00052D 09               [12] 1361 	inc	r1
      00052E 87 07            [24] 1362 	mov	ar7,@r1
      000530 8D 82            [24] 1363 	mov	dpl,r5
      000532 8E 83            [24] 1364 	mov	dph,r6
      000534 8F F0            [24] 1365 	mov	b,r7
      000536 12r00r00         [24] 1366 	lcall	_strlen
      000539 AE 82            [24] 1367 	mov	r6,dpl
      00053B 74 54            [12] 1368 	mov	a,#0x54
      00053D C3               [12] 1369 	clr	c
      00053E 9E               [12] 1370 	subb	a,r6
      00053F F5*00            [12] 1371 	mov	_OLED_SetCursor_PARM_2,a
      000541 75 82 05         [24] 1372 	mov	dpl,#0x05
      000544 12r00r00         [24] 1373 	lcall	_OLED_SetCursor
                                   1374 ;	./src/angry_bird.c:358: OLED_DisplayString("       ");
      000547 90r02rAA         [24] 1375 	mov	dptr,#___str_3
      00054A 75 F0 80         [24] 1376 	mov	b,#0x80
      00054D 12r00r00         [24] 1377 	lcall	_OLED_DisplayString
                                   1378 ;	./src/angry_bird.c:359: OLED_SetCursor(selection_row_cursor, selection_col_cursor - strlen(selection_list[selection_list_cur]));
      000550 85*04*00         [24] 1379 	mov	__mulint_PARM_2,_selection_list_cur
      000553 85*05*01         [24] 1380 	mov	(__mulint_PARM_2 + 1),(_selection_list_cur + 1)
      000556 90 00 03         [24] 1381 	mov	dptr,#0x0003
      000559 12r00r00         [24] 1382 	lcall	__mulint
      00055C AE 82            [24] 1383 	mov	r6,dpl
      00055E EE               [12] 1384 	mov	a,r6
      00055F 24r08            [12] 1385 	add	a,#_selection_list
      000561 F9               [12] 1386 	mov	r1,a
      000562 87 05            [24] 1387 	mov	ar5,@r1
      000564 09               [12] 1388 	inc	r1
      000565 87 06            [24] 1389 	mov	ar6,@r1
      000567 09               [12] 1390 	inc	r1
      000568 87 07            [24] 1391 	mov	ar7,@r1
      00056A 8D 82            [24] 1392 	mov	dpl,r5
      00056C 8E 83            [24] 1393 	mov	dph,r6
      00056E 8F F0            [24] 1394 	mov	b,r7
      000570 12r00r00         [24] 1395 	lcall	_strlen
      000573 AE 82            [24] 1396 	mov	r6,dpl
      000575 74 54            [12] 1397 	mov	a,#0x54
      000577 C3               [12] 1398 	clr	c
      000578 9E               [12] 1399 	subb	a,r6
      000579 F5*00            [12] 1400 	mov	_OLED_SetCursor_PARM_2,a
      00057B 75 82 05         [24] 1401 	mov	dpl,#0x05
      00057E 12r00r00         [24] 1402 	lcall	_OLED_SetCursor
                                   1403 ;	./src/angry_bird.c:360: OLED_DisplayString(selection_list[selection_list_cur]);
      000581 85*04*00         [24] 1404 	mov	__mulint_PARM_2,_selection_list_cur
      000584 85*05*01         [24] 1405 	mov	(__mulint_PARM_2 + 1),(_selection_list_cur + 1)
      000587 90 00 03         [24] 1406 	mov	dptr,#0x0003
      00058A 12r00r00         [24] 1407 	lcall	__mulint
      00058D AE 82            [24] 1408 	mov	r6,dpl
      00058F EE               [12] 1409 	mov	a,r6
      000590 24r08            [12] 1410 	add	a,#_selection_list
      000592 F9               [12] 1411 	mov	r1,a
      000593 87 05            [24] 1412 	mov	ar5,@r1
      000595 09               [12] 1413 	inc	r1
      000596 87 06            [24] 1414 	mov	ar6,@r1
      000598 09               [12] 1415 	inc	r1
      000599 87 07            [24] 1416 	mov	ar7,@r1
      00059B 8D 82            [24] 1417 	mov	dpl,r5
      00059D 8E 83            [24] 1418 	mov	dph,r6
      00059F 8F F0            [24] 1419 	mov	b,r7
      0005A1 12r00r00         [24] 1420 	lcall	_OLED_DisplayString
      0005A4                       1421 00130$:
                                   1422 ;	./src/angry_bird.c:363: selection_list_past = selection_list_cur;
      0005A4 85*04*06         [24] 1423 	mov	_selection_list_past,_selection_list_cur
      0005A7 85*05*07         [24] 1424 	mov	(_selection_list_past + 1),(_selection_list_cur + 1)
                                   1425 ;	./src/angry_bird.c:364: prebut_enter = but_enter;
      0005AA A2 B3            [12] 1426 	mov	c,_INT1
      0005AC E4               [12] 1427 	clr	a
      0005AD 33               [12] 1428 	rlc	a
      0005AE F5*34            [12] 1429 	mov	_prebut_enter,a
      0005B0 75*35 00         [24] 1430 	mov	(_prebut_enter + 1),#0x00
                                   1431 ;	./src/angry_bird.c:365: prebut_up = but_up;
      0005B3 A2 A0            [12] 1432 	mov	c,_P2_0
      0005B5 E4               [12] 1433 	clr	a
      0005B6 33               [12] 1434 	rlc	a
      0005B7 F5*2C            [12] 1435 	mov	_prebut_up,a
      0005B9 75*2D 00         [24] 1436 	mov	(_prebut_up + 1),#0x00
                                   1437 ;	./src/angry_bird.c:366: prebut_down = but_down;
      0005BC A2 A1            [12] 1438 	mov	c,_P2_1
      0005BE E4               [12] 1439 	clr	a
      0005BF 33               [12] 1440 	rlc	a
      0005C0 F5*2E            [12] 1441 	mov	_prebut_down,a
      0005C2 75*2F 00         [24] 1442 	mov	(_prebut_down + 1),#0x00
                                   1443 ;	./src/angry_bird.c:367: delay_ms(10);
      0005C5 90 00 0A         [24] 1444 	mov	dptr,#0x000a
                                   1445 ;	./src/angry_bird.c:368: }
      0005C8 02r00r00         [24] 1446 	ljmp	_delay_ms
                                   1447 ;------------------------------------------------------------
                                   1448 ;Allocation info for local variables in function 'angrybird_setting_state'
                                   1449 ;------------------------------------------------------------
                                   1450 ;	./src/angry_bird.c:370: void angrybird_setting_state(void)
                                   1451 ;	-----------------------------------------
                                   1452 ;	 function angrybird_setting_state
                                   1453 ;	-----------------------------------------
      0005CB                       1454 _angrybird_setting_state:
                                   1455 ;	./src/angry_bird.c:515: }
      0005CB 22               [24] 1456 	ret
                                   1457 ;------------------------------------------------------------
                                   1458 ;Allocation info for local variables in function 'angrybird_game_state'
                                   1459 ;------------------------------------------------------------
                                   1460 ;which                     Allocated to registers r7 
                                   1461 ;control_angle_            Allocated with name '_angrybird_game_state_control_angle__196609_181'
                                   1462 ;i                         Allocated to registers r4 r5 
                                   1463 ;angle_                    Allocated with name '_angrybird_game_state_angle__196610_182'
                                   1464 ;which                     Allocated to registers r7 
                                   1465 ;control_strength_         Allocated with name '_angrybird_game_state_control_strength__196609_187'
                                   1466 ;j                         Allocated to registers r6 r7 
                                   1467 ;i                         Allocated to registers r5 
                                   1468 ;delta_y                   Allocated with name '_angrybird_game_state_delta_y_196609_194'
                                   1469 ;delta_x                   Allocated with name '_angrybird_game_state_delta_x_196609_194'
                                   1470 ;peak_x                    Allocated with name '_angrybird_game_state_peak_x_196609_194'
                                   1471 ;peak_y                    Allocated with name '_angrybird_game_state_peak_y_196609_194'
                                   1472 ;a                         Allocated with name '_angrybird_game_state_a_196609_194'
                                   1473 ;j                         Allocated to registers r2 r3 
                                   1474 ;i                         Allocated to registers r7 
                                   1475 ;i                         Allocated with name '_angrybird_game_state_i_262145_199'
                                   1476 ;output_row                Allocated with name '_angrybird_game_state_output_row_327681_200'
                                   1477 ;j                         Allocated to registers r2 r3 
                                   1478 ;i                         Allocated to registers r5 
                                   1479 ;j                         Allocated to registers r6 r7 
                                   1480 ;i                         Allocated to registers r5 
                                   1481 ;j                         Allocated to registers r6 r7 
                                   1482 ;i                         Allocated to registers r5 
                                   1483 ;j                         Allocated to registers r6 r7 
                                   1484 ;i                         Allocated to registers r5 
                                   1485 ;sloc1                     Allocated with name '_angrybird_game_state_sloc1_1_0'
                                   1486 ;------------------------------------------------------------
                                   1487 ;	./src/angry_bird.c:519: void angrybird_game_state(void)
                                   1488 ;	-----------------------------------------
                                   1489 ;	 function angrybird_game_state
                                   1490 ;	-----------------------------------------
      0005CC                       1491 _angrybird_game_state:
                                   1492 ;	./src/angry_bird.c:522: if (((but_up == 0) && (prebut_up == 1)) || ((but_down == 0) && (prebut_down == 1)))
      0005CC 20 A0 0B         [24] 1493 	jb	_P2_0,00119$
      0005CF 74 01            [12] 1494 	mov	a,#0x01
      0005D1 B5*2C 06         [24] 1495 	cjne	a,_prebut_up,00605$
      0005D4 14               [12] 1496 	dec	a
      0005D5 B5*2D 02         [24] 1497 	cjne	a,(_prebut_up + 1),00605$
      0005D8 80 14            [24] 1498 	sjmp	00115$
      0005DA                       1499 00605$:
      0005DA                       1500 00119$:
      0005DA 30 A1 03         [24] 1501 	jnb	_P2_1,00606$
      0005DD 02r06rF3         [24] 1502 	ljmp	00116$
      0005E0                       1503 00606$:
      0005E0 74 01            [12] 1504 	mov	a,#0x01
      0005E2 B5*2E 06         [24] 1505 	cjne	a,_prebut_down,00607$
      0005E5 14               [12] 1506 	dec	a
      0005E6 B5*2F 02         [24] 1507 	cjne	a,(_prebut_down + 1),00607$
      0005E9 80 03            [24] 1508 	sjmp	00608$
      0005EB                       1509 00607$:
      0005EB 02r06rF3         [24] 1510 	ljmp	00116$
      0005EE                       1511 00608$:
      0005EE                       1512 00115$:
                                   1513 ;	./src/angry_bird.c:525: int which = (but_up == 0) ? 1 : 0;
      0005EE 20 A0 04         [24] 1514 	jb	_P2_0,00207$
      0005F1 7F 01            [12] 1515 	mov	r7,#0x01
      0005F3 80 02            [24] 1516 	sjmp	00208$
      0005F5                       1517 00207$:
      0005F5 7F 00            [12] 1518 	mov	r7,#0x00
      0005F7                       1519 00208$:
                                   1520 ;	./src/angry_bird.c:526: if (but_up == 0 || but_down == 0)
      0005F7 30 A0 06         [24] 1521 	jnb	_P2_0,00112$
      0005FA 30 A1 03         [24] 1522 	jnb	_P2_1,00611$
      0005FD 02r06rF3         [24] 1523 	ljmp	00116$
      000600                       1524 00611$:
      000600                       1525 00112$:
                                   1526 ;	./src/angry_bird.c:528: if (which == 1)
      000600 BF 01 24         [24] 1527 	cjne	r7,#0x01,00106$
                                   1528 ;	./src/angry_bird.c:530: control_angle += 10;
      000603 74 0A            [12] 1529 	mov	a,#0x0a
      000605 25*19            [12] 1530 	add	a,_control_angle
      000607 F5*19            [12] 1531 	mov	_control_angle,a
      000609 E4               [12] 1532 	clr	a
      00060A 35*1A            [12] 1533 	addc	a,(_control_angle + 1)
      00060C F5*1A            [12] 1534 	mov	(_control_angle + 1),a
                                   1535 ;	./src/angry_bird.c:531: if (control_angle > 90)
      00060E C3               [12] 1536 	clr	c
      00060F 74 5A            [12] 1537 	mov	a,#0x5a
      000611 95*19            [12] 1538 	subb	a,_control_angle
      000613 74 80            [12] 1539 	mov	a,#(0x00 ^ 0x80)
      000615 85*1A F0         [24] 1540 	mov	b,(_control_angle + 1)
      000618 63 F0 80         [24] 1541 	xrl	b,#0x80
      00061B 95 F0            [12] 1542 	subb	a,b
      00061D 50 1C            [24] 1543 	jnc	00107$
                                   1544 ;	./src/angry_bird.c:532: control_angle = 90;
      00061F 75*19 5A         [24] 1545 	mov	_control_angle,#0x5a
      000622 75*1A 00         [24] 1546 	mov	(_control_angle + 1),#0x00
      000625 80 14            [24] 1547 	sjmp	00107$
      000627                       1548 00106$:
                                   1549 ;	./src/angry_bird.c:536: control_angle -= 10;
      000627 E5*19            [12] 1550 	mov	a,_control_angle
      000629 24 F6            [12] 1551 	add	a,#0xf6
      00062B F5*19            [12] 1552 	mov	_control_angle,a
      00062D E5*1A            [12] 1553 	mov	a,(_control_angle + 1)
      00062F 34 FF            [12] 1554 	addc	a,#0xff
                                   1555 ;	./src/angry_bird.c:537: if (control_angle < 0)
      000631 F5*1A            [12] 1556 	mov	(_control_angle + 1),a
      000633 30 E7 05         [24] 1557 	jnb	acc.7,00107$
                                   1558 ;	./src/angry_bird.c:538: control_angle = 0;
      000636 E4               [12] 1559 	clr	a
      000637 F5*19            [12] 1560 	mov	_control_angle,a
      000639 F5*1A            [12] 1561 	mov	(_control_angle + 1),a
      00063B                       1562 00107$:
                                   1563 ;	./src/angry_bird.c:543: int i = 0;
                                   1564 ;	./src/angry_bird.c:544: if (control_angle < 0)
      00063B E4               [12] 1565 	clr	a
      00063C FE               [12] 1566 	mov	r6,a
      00063D FF               [12] 1567 	mov	r7,a
      00063E E5*1A            [12] 1568 	mov	a,(_control_angle + 1)
      000640 30 E7 07         [24] 1569 	jnb	acc.7,00109$
                                   1570 ;	./src/angry_bird.c:545: control_angle_[i++] = '-';
      000643 7E 01            [12] 1571 	mov	r6,#0x01
      000645 7F 00            [12] 1572 	mov	r7,#0x00
      000647 75*36 2D         [24] 1573 	mov	_angrybird_game_state_control_angle__196609_181,#0x2d
      00064A                       1574 00109$:
                                   1575 ;	./src/angry_bird.c:546: int angle_ = (control_angle >= 0) ? control_angle : -1 * control_angle;
      00064A E5*1A            [12] 1576 	mov	a,(_control_angle + 1)
      00064C 33               [12] 1577 	rlc	a
      00064D 92*01            [24] 1578 	mov	_angrybird_game_state_sloc0_1_0,c
      00064F 40 06            [24] 1579 	jc	00209$
      000651 AC*19            [24] 1580 	mov	r4,_control_angle
      000653 AD*1A            [24] 1581 	mov	r5,(_control_angle + 1)
      000655 80 09            [24] 1582 	sjmp	00210$
      000657                       1583 00209$:
      000657 C3               [12] 1584 	clr	c
      000658 E4               [12] 1585 	clr	a
      000659 95*19            [12] 1586 	subb	a,_control_angle
      00065B FC               [12] 1587 	mov	r4,a
      00065C E4               [12] 1588 	clr	a
      00065D 95*1A            [12] 1589 	subb	a,(_control_angle + 1)
      00065F FD               [12] 1590 	mov	r5,a
      000660                       1591 00210$:
      000660 8C*3B            [24] 1592 	mov	_angrybird_game_state_angle__196610_182,r4
      000662 8D*3C            [24] 1593 	mov	(_angrybird_game_state_angle__196610_182 + 1),r5
                                   1594 ;	./src/angry_bird.c:547: if (angle_ % 100 / 10 != 0)
      000664 75*00 64         [24] 1595 	mov	__modsint_PARM_2,#0x64
      000667 75*01 00         [24] 1596 	mov	(__modsint_PARM_2 + 1),#0x00
      00066A 85*3B 82         [24] 1597 	mov	dpl,_angrybird_game_state_angle__196610_182
      00066D 85*3C 83         [24] 1598 	mov	dph,(_angrybird_game_state_angle__196610_182 + 1)
      000670 C0 07            [24] 1599 	push	ar7
      000672 C0 06            [24] 1600 	push	ar6
      000674 12r00r00         [24] 1601 	lcall	__modsint
      000677 75*00 0A         [24] 1602 	mov	__divsint_PARM_2,#0x0a
      00067A 75*01 00         [24] 1603 	mov	(__divsint_PARM_2 + 1),#0x00
      00067D 12r00r00         [24] 1604 	lcall	__divsint
      000680 AA 82            [24] 1605 	mov	r2,dpl
      000682 AB 83            [24] 1606 	mov	r3,dph
      000684 D0 06            [24] 1607 	pop	ar6
      000686 D0 07            [24] 1608 	pop	ar7
      000688 EA               [12] 1609 	mov	a,r2
      000689 4B               [12] 1610 	orl	a,r3
      00068A 60 11            [24] 1611 	jz	00111$
                                   1612 ;	./src/angry_bird.c:548: control_angle_[i++] = '0' + angle_ % 100 / 10;
      00068C 8E 04            [24] 1613 	mov	ar4,r6
      00068E 8F 05            [24] 1614 	mov	ar5,r7
      000690 0E               [12] 1615 	inc	r6
      000691 BE 00 01         [24] 1616 	cjne	r6,#0x00,00619$
      000694 0F               [12] 1617 	inc	r7
      000695                       1618 00619$:
      000695 EC               [12] 1619 	mov	a,r4
      000696 24r36            [12] 1620 	add	a,#_angrybird_game_state_control_angle__196609_181
      000698 F9               [12] 1621 	mov	r1,a
      000699 74 30            [12] 1622 	mov	a,#0x30
      00069B 2A               [12] 1623 	add	a,r2
      00069C F7               [12] 1624 	mov	@r1,a
      00069D                       1625 00111$:
                                   1626 ;	./src/angry_bird.c:549: control_angle_[i++] = '0' + angle_ % 10;
      00069D 74 01            [12] 1627 	mov	a,#0x01
      00069F 2E               [12] 1628 	add	a,r6
      0006A0 FC               [12] 1629 	mov	r4,a
      0006A1 E4               [12] 1630 	clr	a
      0006A2 3F               [12] 1631 	addc	a,r7
      0006A3 FD               [12] 1632 	mov	r5,a
      0006A4 EE               [12] 1633 	mov	a,r6
      0006A5 24r36            [12] 1634 	add	a,#_angrybird_game_state_control_angle__196609_181
      0006A7 F9               [12] 1635 	mov	r1,a
      0006A8 75*00 0A         [24] 1636 	mov	__modsint_PARM_2,#0x0a
      0006AB 75*01 00         [24] 1637 	mov	(__modsint_PARM_2 + 1),#0x00
      0006AE 85*3B 82         [24] 1638 	mov	dpl,_angrybird_game_state_angle__196610_182
      0006B1 85*3C 83         [24] 1639 	mov	dph,(_angrybird_game_state_angle__196610_182 + 1)
      0006B4 C0 05            [24] 1640 	push	ar5
      0006B6 C0 04            [24] 1641 	push	ar4
      0006B8 C0 01            [24] 1642 	push	ar1
      0006BA 12r00r00         [24] 1643 	lcall	__modsint
      0006BD AE 82            [24] 1644 	mov	r6,dpl
      0006BF D0 01            [24] 1645 	pop	ar1
      0006C1 D0 04            [24] 1646 	pop	ar4
      0006C3 D0 05            [24] 1647 	pop	ar5
      0006C5 74 30            [12] 1648 	mov	a,#0x30
      0006C7 2E               [12] 1649 	add	a,r6
      0006C8 F7               [12] 1650 	mov	@r1,a
                                   1651 ;	./src/angry_bird.c:550: control_angle_[i++] = '\0';
      0006C9 EC               [12] 1652 	mov	a,r4
      0006CA 24r36            [12] 1653 	add	a,#_angrybird_game_state_control_angle__196609_181
      0006CC F8               [12] 1654 	mov	r0,a
      0006CD 76 00            [12] 1655 	mov	@r0,#0x00
                                   1656 ;	./src/angry_bird.c:552: OLED_SetCursor(angle_text_row_cursor, angle_text_col_cursor);
      0006CF 75*00 1E         [24] 1657 	mov	_OLED_SetCursor_PARM_2,#0x1e
      0006D2 75 82 00         [24] 1658 	mov	dpl,#0x00
      0006D5 12r00r00         [24] 1659 	lcall	_OLED_SetCursor
                                   1660 ;	./src/angry_bird.c:553: OLED_DisplayString("   ");
      0006D8 90r02rB2         [24] 1661 	mov	dptr,#___str_4
      0006DB 75 F0 80         [24] 1662 	mov	b,#0x80
      0006DE 12r00r00         [24] 1663 	lcall	_OLED_DisplayString
                                   1664 ;	./src/angry_bird.c:554: OLED_SetCursor(angle_text_row_cursor, angle_text_col_cursor);
      0006E1 75*00 1E         [24] 1665 	mov	_OLED_SetCursor_PARM_2,#0x1e
      0006E4 75 82 00         [24] 1666 	mov	dpl,#0x00
      0006E7 12r00r00         [24] 1667 	lcall	_OLED_SetCursor
                                   1668 ;	./src/angry_bird.c:555: OLED_DisplayString(control_angle_);
      0006EA 90r00r36         [24] 1669 	mov	dptr,#_angrybird_game_state_control_angle__196609_181
      0006ED 75 F0 40         [24] 1670 	mov	b,#0x40
      0006F0 12r00r00         [24] 1671 	lcall	_OLED_DisplayString
      0006F3                       1672 00116$:
                                   1673 ;	./src/angry_bird.c:560: if (((but_left == 0) && (prebut_left == 1)) || ((but_right == 0) && (prebut_right == 1)))
      0006F3 20 B2 0B         [24] 1674 	jb	_INT0,00134$
      0006F6 74 01            [12] 1675 	mov	a,#0x01
      0006F8 B5*30 06         [24] 1676 	cjne	a,_prebut_left,00621$
      0006FB 14               [12] 1677 	dec	a
      0006FC B5*31 02         [24] 1678 	cjne	a,(_prebut_left + 1),00621$
      0006FF 80 14            [24] 1679 	sjmp	00130$
      000701                       1680 00621$:
      000701                       1681 00134$:
      000701 30 A2 03         [24] 1682 	jnb	_P2_2,00622$
      000704 02r07r93         [24] 1683 	ljmp	00131$
      000707                       1684 00622$:
      000707 74 01            [12] 1685 	mov	a,#0x01
      000709 B5*32 06         [24] 1686 	cjne	a,_prebut_right,00623$
      00070C 14               [12] 1687 	dec	a
      00070D B5*33 02         [24] 1688 	cjne	a,(_prebut_right + 1),00623$
      000710 80 03            [24] 1689 	sjmp	00624$
      000712                       1690 00623$:
      000712 02r07r93         [24] 1691 	ljmp	00131$
      000715                       1692 00624$:
      000715                       1693 00130$:
                                   1694 ;	./src/angry_bird.c:563: int which = (but_left == 0) ? 1 : 0;
      000715 20 B2 04         [24] 1695 	jb	_INT0,00211$
      000718 7F 01            [12] 1696 	mov	r7,#0x01
      00071A 80 02            [24] 1697 	sjmp	00212$
      00071C                       1698 00211$:
      00071C 7F 00            [12] 1699 	mov	r7,#0x00
      00071E                       1700 00212$:
                                   1701 ;	./src/angry_bird.c:564: if (but_left == 0 || but_right == 0)
      00071E 30 B2 03         [24] 1702 	jnb	_INT0,00127$
      000721 20 A2 6F         [24] 1703 	jb	_P2_2,00131$
      000724                       1704 00127$:
                                   1705 ;	./src/angry_bird.c:566: if (which == 1)
      000724 BF 01 1E         [24] 1706 	cjne	r7,#0x01,00125$
                                   1707 ;	./src/angry_bird.c:568: control_strength--;
      000727 15*1B            [12] 1708 	dec	_control_strength
      000729 74 FF            [12] 1709 	mov	a,#0xff
      00072B B5*1B 02         [24] 1710 	cjne	a,_control_strength,00630$
      00072E 15*1C            [12] 1711 	dec	(_control_strength + 1)
      000730                       1712 00630$:
                                   1713 ;	./src/angry_bird.c:569: if (control_strength < 1)
      000730 C3               [12] 1714 	clr	c
      000731 E5*1B            [12] 1715 	mov	a,_control_strength
      000733 94 01            [12] 1716 	subb	a,#0x01
      000735 E5*1C            [12] 1717 	mov	a,(_control_strength + 1)
      000737 64 80            [12] 1718 	xrl	a,#0x80
      000739 94 80            [12] 1719 	subb	a,#0x80
      00073B 50 28            [24] 1720 	jnc	00126$
                                   1721 ;	./src/angry_bird.c:570: control_strength = 1;
      00073D 75*1B 01         [24] 1722 	mov	_control_strength,#0x01
      000740 75*1C 00         [24] 1723 	mov	(_control_strength + 1),#0x00
      000743 80 20            [24] 1724 	sjmp	00126$
      000745                       1725 00125$:
                                   1726 ;	./src/angry_bird.c:574: control_strength--;
      000745 15*1B            [12] 1727 	dec	_control_strength
      000747 74 FF            [12] 1728 	mov	a,#0xff
      000749 B5*1B 02         [24] 1729 	cjne	a,_control_strength,00632$
      00074C 15*1C            [12] 1730 	dec	(_control_strength + 1)
      00074E                       1731 00632$:
                                   1732 ;	./src/angry_bird.c:575: if (control_strength > 3)
      00074E C3               [12] 1733 	clr	c
      00074F 74 03            [12] 1734 	mov	a,#0x03
      000751 95*1B            [12] 1735 	subb	a,_control_strength
      000753 74 80            [12] 1736 	mov	a,#(0x00 ^ 0x80)
      000755 85*1C F0         [24] 1737 	mov	b,(_control_strength + 1)
      000758 63 F0 80         [24] 1738 	xrl	b,#0x80
      00075B 95 F0            [12] 1739 	subb	a,b
      00075D 50 06            [24] 1740 	jnc	00126$
                                   1741 ;	./src/angry_bird.c:576: control_strength = 3;
      00075F 75*1B 03         [24] 1742 	mov	_control_strength,#0x03
      000762 75*1C 00         [24] 1743 	mov	(_control_strength + 1),#0x00
      000765                       1744 00126$:
                                   1745 ;	./src/angry_bird.c:581: control_strength_[0] = '0' + control_strength;
      000765 AF*1B            [24] 1746 	mov	r7,_control_strength
      000767 74 30            [12] 1747 	mov	a,#0x30
      000769 2F               [12] 1748 	add	a,r7
      00076A F5*3D            [12] 1749 	mov	_angrybird_game_state_control_strength__196609_187,a
                                   1750 ;	./src/angry_bird.c:582: control_strength_[1] = '\0';
      00076C 75*3E 00         [24] 1751 	mov	(_angrybird_game_state_control_strength__196609_187 + 0x0001),#0x00
                                   1752 ;	./src/angry_bird.c:584: OLED_SetCursor(strength_text_row_cursor, strength_text_col_cursor);
      00076F 75*00 0A         [24] 1753 	mov	_OLED_SetCursor_PARM_2,#0x0a
      000772 75 82 00         [24] 1754 	mov	dpl,#0x00
      000775 12r00r00         [24] 1755 	lcall	_OLED_SetCursor
                                   1756 ;	./src/angry_bird.c:585: OLED_DisplayString(" ");
      000778 90r02rB6         [24] 1757 	mov	dptr,#___str_5
      00077B 75 F0 80         [24] 1758 	mov	b,#0x80
      00077E 12r00r00         [24] 1759 	lcall	_OLED_DisplayString
                                   1760 ;	./src/angry_bird.c:586: OLED_SetCursor(strength_text_row_cursor, strength_text_col_cursor);
      000781 75*00 0A         [24] 1761 	mov	_OLED_SetCursor_PARM_2,#0x0a
      000784 75 82 00         [24] 1762 	mov	dpl,#0x00
      000787 12r00r00         [24] 1763 	lcall	_OLED_SetCursor
                                   1764 ;	./src/angry_bird.c:587: OLED_DisplayString(control_strength_);
      00078A 90r00r3D         [24] 1765 	mov	dptr,#_angrybird_game_state_control_strength__196609_187
      00078D 75 F0 40         [24] 1766 	mov	b,#0x40
      000790 12r00r00         [24] 1767 	lcall	_OLED_DisplayString
      000793                       1768 00131$:
                                   1769 ;	./src/angry_bird.c:592: if ((but_enter == 0) && (prebut_enter == 1))
      000793 30 B3 03         [24] 1770 	jnb	_INT1,00634$
      000796 02r0Cr33         [24] 1771 	ljmp	00159$
      000799                       1772 00634$:
      000799 74 01            [12] 1773 	mov	a,#0x01
      00079B B5*34 06         [24] 1774 	cjne	a,_prebut_enter,00635$
      00079E 14               [12] 1775 	dec	a
      00079F B5*35 02         [24] 1776 	cjne	a,(_prebut_enter + 1),00635$
      0007A2 80 03            [24] 1777 	sjmp	00636$
      0007A4                       1778 00635$:
      0007A4 02r0Cr33         [24] 1779 	ljmp	00159$
      0007A7                       1780 00636$:
                                   1781 ;	./src/angry_bird.c:594: delay_ms(10);
      0007A7 90 00 0A         [24] 1782 	mov	dptr,#0x000a
      0007AA 12r00r00         [24] 1783 	lcall	_delay_ms
                                   1784 ;	./src/angry_bird.c:595: if (but_enter == 0)
      0007AD 30 B3 03         [24] 1785 	jnb	_INT1,00637$
      0007B0 02r0Cr33         [24] 1786 	ljmp	00159$
      0007B3                       1787 00637$:
                                   1788 ;	./src/angry_bird.c:597: bird_amt--;
      0007B3 15*28            [12] 1789 	dec	_bird_amt
      0007B5 74 FF            [12] 1790 	mov	a,#0xff
      0007B7 B5*28 02         [24] 1791 	cjne	a,_bird_amt,00638$
      0007BA 15*29            [12] 1792 	dec	(_bird_amt + 1)
      0007BC                       1793 00638$:
                                   1794 ;	./src/angry_bird.c:599: row_offset = 0;
      0007BC E4               [12] 1795 	clr	a
      0007BD F5*00            [12] 1796 	mov	_row_offset,a
      0007BF F5*01            [12] 1797 	mov	(_row_offset + 1),a
                                   1798 ;	./src/angry_bird.c:600: col_offset = bird_remain_col_cursor + (bird_total_amount - bird_amt - 1) * 8;
      0007C1 74 08            [12] 1799 	mov	a,#0x08
      0007C3 C3               [12] 1800 	clr	c
      0007C4 95*28            [12] 1801 	subb	a,_bird_amt
      0007C6 FE               [12] 1802 	mov	r6,a
      0007C7 E4               [12] 1803 	clr	a
      0007C8 95*29            [12] 1804 	subb	a,(_bird_amt + 1)
      0007CA C4               [12] 1805 	swap	a
      0007CB 03               [12] 1806 	rr	a
      0007CC 54 F8            [12] 1807 	anl	a,#0xf8
      0007CE CE               [12] 1808 	xch	a,r6
      0007CF C4               [12] 1809 	swap	a
      0007D0 03               [12] 1810 	rr	a
      0007D1 CE               [12] 1811 	xch	a,r6
      0007D2 6E               [12] 1812 	xrl	a,r6
      0007D3 CE               [12] 1813 	xch	a,r6
      0007D4 54 F8            [12] 1814 	anl	a,#0xf8
      0007D6 CE               [12] 1815 	xch	a,r6
      0007D7 6E               [12] 1816 	xrl	a,r6
      0007D8 FF               [12] 1817 	mov	r7,a
      0007D9 74 32            [12] 1818 	mov	a,#0x32
      0007DB 2E               [12] 1819 	add	a,r6
      0007DC F5*02            [12] 1820 	mov	_col_offset,a
      0007DE E4               [12] 1821 	clr	a
      0007DF 3F               [12] 1822 	addc	a,r7
      0007E0 F5*03            [12] 1823 	mov	(_col_offset + 1),a
                                   1824 ;	./src/angry_bird.c:601: for (int j = 0; j < bird_cul_size; j++)
      0007E2 7E 00            [12] 1825 	mov	r6,#0x00
      0007E4 7F 00            [12] 1826 	mov	r7,#0x00
      0007E6                       1827 00170$:
      0007E6 C3               [12] 1828 	clr	c
      0007E7 EE               [12] 1829 	mov	a,r6
      0007E8 94 08            [12] 1830 	subb	a,#0x08
      0007EA EF               [12] 1831 	mov	a,r7
      0007EB 64 80            [12] 1832 	xrl	a,#0x80
      0007ED 94 80            [12] 1833 	subb	a,#0x80
      0007EF 50 31            [24] 1834 	jnc	00136$
                                   1835 ;	./src/angry_bird.c:603: for (int i = 0; i < bird_row_size; i++)
      0007F1 7D 00            [12] 1836 	mov	r5,#0x00
      0007F3                       1837 00167$:
      0007F3 BD 01 00         [24] 1838 	cjne	r5,#0x01,00640$
      0007F6                       1839 00640$:
      0007F6 50 23            [24] 1840 	jnc	00171$
                                   1841 ;	./src/angry_bird.c:605: OLED_SetCursor(row_offset + i, col_offset + j);
      0007F8 AC*00            [24] 1842 	mov	r4,_row_offset
      0007FA E4               [12] 1843 	clr	a
      0007FB 2C               [12] 1844 	add	a,r4
      0007FC F5 82            [12] 1845 	mov	dpl,a
      0007FE AC*02            [24] 1846 	mov	r4,_col_offset
      000800 8E 03            [24] 1847 	mov	ar3,r6
      000802 EB               [12] 1848 	mov	a,r3
      000803 2C               [12] 1849 	add	a,r4
      000804 F5*00            [12] 1850 	mov	_OLED_SetCursor_PARM_2,a
      000806 C0 07            [24] 1851 	push	ar7
      000808 C0 06            [24] 1852 	push	ar6
      00080A 12r00r00         [24] 1853 	lcall	_OLED_SetCursor
                                   1854 ;	./src/angry_bird.c:606: oledSendData(0x00);
      00080D 75 82 00         [24] 1855 	mov	dpl,#0x00
      000810 12r00r00         [24] 1856 	lcall	_oledSendData
      000813 D0 06            [24] 1857 	pop	ar6
      000815 D0 07            [24] 1858 	pop	ar7
                                   1859 ;	./src/angry_bird.c:603: for (int i = 0; i < bird_row_size; i++)
      000817 7D 01            [12] 1860 	mov	r5,#0x01
      000819 80 D8            [24] 1861 	sjmp	00167$
      00081B                       1862 00171$:
                                   1863 ;	./src/angry_bird.c:601: for (int j = 0; j < bird_cul_size; j++)
      00081B 0E               [12] 1864 	inc	r6
      00081C BE 00 C7         [24] 1865 	cjne	r6,#0x00,00170$
      00081F 0F               [12] 1866 	inc	r7
      000820 80 C4            [24] 1867 	sjmp	00170$
      000822                       1868 00136$:
                                   1869 ;	./src/angry_bird.c:613: float delta_y = (control_angle_value) / (SQRT_2 / 2) * getsine(control_angle);
      000822 85*19 82         [24] 1870 	mov	dpl,_control_angle
      000825 85*1A 83         [24] 1871 	mov	dph,(_control_angle + 1)
      000828 12r0Cr84         [24] 1872 	lcall	_getsine
      00082B AC 82            [24] 1873 	mov	r4,dpl
      00082D AD 83            [24] 1874 	mov	r5,dph
      00082F AE F0            [24] 1875 	mov	r6,b
      000831 FF               [12] 1876 	mov	r7,a
      000832 C0 04            [24] 1877 	push	ar4
      000834 C0 05            [24] 1878 	push	ar5
      000836 C0 06            [24] 1879 	push	ar6
      000838 C0 07            [24] 1880 	push	ar7
                                   1881 ;	./src/angry_bird.c:614: float delta_x = control_strength_value * control_strength - delta_y * 4;
      00083A 90 C3 B7         [24] 1882 	mov	dptr,#0xc3b7
      00083D 75 F0 07         [24] 1883 	mov	b,#0x07
      000840 74 41            [12] 1884 	mov	a,#0x41
      000842 12r00r00         [24] 1885 	lcall	___fsmul
      000845 85 82*3F         [24] 1886 	mov	_angrybird_game_state_delta_y_196609_194,dpl
      000848 85 83*40         [24] 1887 	mov	(_angrybird_game_state_delta_y_196609_194 + 1),dph
      00084B 85 F0*41         [24] 1888 	mov	(_angrybird_game_state_delta_y_196609_194 + 2),b
      00084E F5*42            [12] 1889 	mov	(_angrybird_game_state_delta_y_196609_194 + 3),a
      000850 E5 81            [12] 1890 	mov	a,sp
      000852 24 FC            [12] 1891 	add	a,#0xfc
      000854 F5 81            [12] 1892 	mov	sp,a
      000856 85*1B*00         [24] 1893 	mov	__mulint_PARM_2,_control_strength
      000859 85*1C*01         [24] 1894 	mov	(__mulint_PARM_2 + 1),(_control_strength + 1)
      00085C 90 00 19         [24] 1895 	mov	dptr,#0x0019
      00085F 12r00r00         [24] 1896 	lcall	__mulint
      000862 AA 82            [24] 1897 	mov	r2,dpl
      000864 AB 83            [24] 1898 	mov	r3,dph
      000866 C0 03            [24] 1899 	push	ar3
      000868 C0 02            [24] 1900 	push	ar2
      00086A C0*3F            [24] 1901 	push	_angrybird_game_state_delta_y_196609_194
      00086C C0*40            [24] 1902 	push	(_angrybird_game_state_delta_y_196609_194 + 1)
      00086E C0*41            [24] 1903 	push	(_angrybird_game_state_delta_y_196609_194 + 2)
      000870 C0*42            [24] 1904 	push	(_angrybird_game_state_delta_y_196609_194 + 3)
      000872 90 00 00         [24] 1905 	mov	dptr,#0x0000
      000875 75 F0 80         [24] 1906 	mov	b,#0x80
      000878 74 40            [12] 1907 	mov	a,#0x40
      00087A 12r00r00         [24] 1908 	lcall	___fsmul
      00087D 85 82*57         [24] 1909 	mov	_angrybird_game_state_sloc1_1_0,dpl
      000880 85 83*58         [24] 1910 	mov	(_angrybird_game_state_sloc1_1_0 + 1),dph
      000883 85 F0*59         [24] 1911 	mov	(_angrybird_game_state_sloc1_1_0 + 2),b
      000886 F5*5A            [12] 1912 	mov	(_angrybird_game_state_sloc1_1_0 + 3),a
      000888 E5 81            [12] 1913 	mov	a,sp
      00088A 24 FC            [12] 1914 	add	a,#0xfc
      00088C F5 81            [12] 1915 	mov	sp,a
      00088E D0 02            [24] 1916 	pop	ar2
      000890 D0 03            [24] 1917 	pop	ar3
      000892 8A 82            [24] 1918 	mov	dpl,r2
      000894 8B 83            [24] 1919 	mov	dph,r3
      000896 12r00r00         [24] 1920 	lcall	___sint2fs
      000899 AA 82            [24] 1921 	mov	r2,dpl
      00089B AB 83            [24] 1922 	mov	r3,dph
      00089D AE F0            [24] 1923 	mov	r6,b
      00089F FF               [12] 1924 	mov	r7,a
      0008A0 C0*57            [24] 1925 	push	_angrybird_game_state_sloc1_1_0
      0008A2 C0*58            [24] 1926 	push	(_angrybird_game_state_sloc1_1_0 + 1)
      0008A4 C0*59            [24] 1927 	push	(_angrybird_game_state_sloc1_1_0 + 2)
      0008A6 C0*5A            [24] 1928 	push	(_angrybird_game_state_sloc1_1_0 + 3)
                                   1929 ;	./src/angry_bird.c:615: float peak_x = bird_init_col_cursor + delta_x;
      0008A8 8A 82            [24] 1930 	mov	dpl,r2
      0008AA 8B 83            [24] 1931 	mov	dph,r3
      0008AC 8E F0            [24] 1932 	mov	b,r6
      0008AE EF               [12] 1933 	mov	a,r7
      0008AF 12r00r00         [24] 1934 	lcall	___fssub
      0008B2 85 82*43         [24] 1935 	mov	_angrybird_game_state_delta_x_196609_194,dpl
      0008B5 85 83*44         [24] 1936 	mov	(_angrybird_game_state_delta_x_196609_194 + 1),dph
      0008B8 85 F0*45         [24] 1937 	mov	(_angrybird_game_state_delta_x_196609_194 + 2),b
      0008BB F5*46            [12] 1938 	mov	(_angrybird_game_state_delta_x_196609_194 + 3),a
      0008BD E5 81            [12] 1939 	mov	a,sp
      0008BF 24 FC            [12] 1940 	add	a,#0xfc
      0008C1 F5 81            [12] 1941 	mov	sp,a
      0008C3 E4               [12] 1942 	clr	a
      0008C4 C0 E0            [24] 1943 	push	acc
      0008C6 C0 E0            [24] 1944 	push	acc
      0008C8 C0 E0            [24] 1945 	push	acc
      0008CA 74 41            [12] 1946 	mov	a,#0x41
      0008CC C0 E0            [24] 1947 	push	acc
                                   1948 ;	./src/angry_bird.c:616: float peak_y = bird_init_row_cursor - delta_y;
      0008CE 85*43 82         [24] 1949 	mov	dpl,_angrybird_game_state_delta_x_196609_194
      0008D1 85*44 83         [24] 1950 	mov	dph,(_angrybird_game_state_delta_x_196609_194 + 1)
      0008D4 85*45 F0         [24] 1951 	mov	b,(_angrybird_game_state_delta_x_196609_194 + 2)
      0008D7 E5*46            [12] 1952 	mov	a,(_angrybird_game_state_delta_x_196609_194 + 3)
      0008D9 12r00r00         [24] 1953 	lcall	___fsadd
      0008DC 85 82*47         [24] 1954 	mov	_angrybird_game_state_peak_x_196609_194,dpl
      0008DF 85 83*48         [24] 1955 	mov	(_angrybird_game_state_peak_x_196609_194 + 1),dph
      0008E2 85 F0*49         [24] 1956 	mov	(_angrybird_game_state_peak_x_196609_194 + 2),b
      0008E5 F5*4A            [12] 1957 	mov	(_angrybird_game_state_peak_x_196609_194 + 3),a
      0008E7 E5 81            [12] 1958 	mov	a,sp
      0008E9 24 FC            [12] 1959 	add	a,#0xfc
      0008EB F5 81            [12] 1960 	mov	sp,a
      0008ED C0*3F            [24] 1961 	push	_angrybird_game_state_delta_y_196609_194
      0008EF C0*40            [24] 1962 	push	(_angrybird_game_state_delta_y_196609_194 + 1)
      0008F1 C0*41            [24] 1963 	push	(_angrybird_game_state_delta_y_196609_194 + 2)
      0008F3 C0*42            [24] 1964 	push	(_angrybird_game_state_delta_y_196609_194 + 3)
                                   1965 ;	./src/angry_bird.c:617: float a = delta_y / pow_2(delta_x);
      0008F5 90 00 00         [24] 1966 	mov	dptr,#0x0000
      0008F8 75 F0 E0         [24] 1967 	mov	b,#0xe0
      0008FB 74 40            [12] 1968 	mov	a,#0x40
      0008FD 12r00r00         [24] 1969 	lcall	___fssub
      000900 85 82*4B         [24] 1970 	mov	_angrybird_game_state_peak_y_196609_194,dpl
      000903 85 83*4C         [24] 1971 	mov	(_angrybird_game_state_peak_y_196609_194 + 1),dph
      000906 85 F0*4D         [24] 1972 	mov	(_angrybird_game_state_peak_y_196609_194 + 2),b
      000909 F5*4E            [12] 1973 	mov	(_angrybird_game_state_peak_y_196609_194 + 3),a
      00090B E5 81            [12] 1974 	mov	a,sp
      00090D 24 FC            [12] 1975 	add	a,#0xfc
      00090F F5 81            [12] 1976 	mov	sp,a
      000911 85*43 82         [24] 1977 	mov	dpl,_angrybird_game_state_delta_x_196609_194
      000914 85*44 83         [24] 1978 	mov	dph,(_angrybird_game_state_delta_x_196609_194 + 1)
      000917 85*45 F0         [24] 1979 	mov	b,(_angrybird_game_state_delta_x_196609_194 + 2)
      00091A E5*46            [12] 1980 	mov	a,(_angrybird_game_state_delta_x_196609_194 + 3)
      00091C 12r0Dr5F         [24] 1981 	lcall	_pow_2
      00091F AA 82            [24] 1982 	mov	r2,dpl
      000921 AB 83            [24] 1983 	mov	r3,dph
      000923 AE F0            [24] 1984 	mov	r6,b
      000925 FF               [12] 1985 	mov	r7,a
      000926 C0 02            [24] 1986 	push	ar2
      000928 C0 03            [24] 1987 	push	ar3
      00092A C0 06            [24] 1988 	push	ar6
      00092C C0 07            [24] 1989 	push	ar7
                                   1990 ;	./src/angry_bird.c:619: row_offset = bird_init_row_cursor;
      00092E 85*3F 82         [24] 1991 	mov	dpl,_angrybird_game_state_delta_y_196609_194
      000931 85*40 83         [24] 1992 	mov	dph,(_angrybird_game_state_delta_y_196609_194 + 1)
      000934 85*41 F0         [24] 1993 	mov	b,(_angrybird_game_state_delta_y_196609_194 + 2)
      000937 E5*42            [12] 1994 	mov	a,(_angrybird_game_state_delta_y_196609_194 + 3)
      000939 12r00r00         [24] 1995 	lcall	___fsdiv
      00093C 85 82*4F         [24] 1996 	mov	_angrybird_game_state_a_196609_194,dpl
      00093F 85 83*50         [24] 1997 	mov	(_angrybird_game_state_a_196609_194 + 1),dph
      000942 85 F0*51         [24] 1998 	mov	(_angrybird_game_state_a_196609_194 + 2),b
      000945 F5*52            [12] 1999 	mov	(_angrybird_game_state_a_196609_194 + 3),a
      000947 E5 81            [12] 2000 	mov	a,sp
      000949 24 FC            [12] 2001 	add	a,#0xfc
      00094B F5 81            [12] 2002 	mov	sp,a
      00094D 75*00 07         [24] 2003 	mov	_row_offset,#0x07
      000950 75*01 00         [24] 2004 	mov	(_row_offset + 1),#0x00
                                   2005 ;	./src/angry_bird.c:620: col_offset = bird_init_col_cursor;
      000953 75*02 08         [24] 2006 	mov	_col_offset,#0x08
      000956 75*03 00         [24] 2007 	mov	(_col_offset + 1),#0x00
                                   2008 ;	./src/angry_bird.c:621: for (int j = 0; j < bird_cul_size; j++)
      000959 7A 00            [12] 2009 	mov	r2,#0x00
      00095B 7B 00            [12] 2010 	mov	r3,#0x00
      00095D                       2011 00176$:
      00095D C3               [12] 2012 	clr	c
      00095E EA               [12] 2013 	mov	a,r2
      00095F 94 08            [12] 2014 	subb	a,#0x08
      000961 EB               [12] 2015 	mov	a,r3
      000962 64 80            [12] 2016 	xrl	a,#0x80
      000964 94 80            [12] 2017 	subb	a,#0x80
      000966 50 31            [24] 2018 	jnc	00138$
                                   2019 ;	./src/angry_bird.c:623: for (int i = 0; i < bird_row_size; i++)
      000968 7F 00            [12] 2020 	mov	r7,#0x00
      00096A                       2021 00173$:
      00096A BF 01 00         [24] 2022 	cjne	r7,#0x01,00644$
      00096D                       2023 00644$:
      00096D 50 23            [24] 2024 	jnc	00177$
                                   2025 ;	./src/angry_bird.c:625: OLED_SetCursor(row_offset + i, col_offset + j);
      00096F AE*00            [24] 2026 	mov	r6,_row_offset
      000971 E4               [12] 2027 	clr	a
      000972 2E               [12] 2028 	add	a,r6
      000973 F5 82            [12] 2029 	mov	dpl,a
      000975 AE*02            [24] 2030 	mov	r6,_col_offset
      000977 8A 05            [24] 2031 	mov	ar5,r2
      000979 ED               [12] 2032 	mov	a,r5
      00097A 2E               [12] 2033 	add	a,r6
      00097B F5*00            [12] 2034 	mov	_OLED_SetCursor_PARM_2,a
      00097D C0 03            [24] 2035 	push	ar3
      00097F C0 02            [24] 2036 	push	ar2
      000981 12r00r00         [24] 2037 	lcall	_OLED_SetCursor
                                   2038 ;	./src/angry_bird.c:626: oledSendData(0x00);
      000984 75 82 00         [24] 2039 	mov	dpl,#0x00
      000987 12r00r00         [24] 2040 	lcall	_oledSendData
      00098A D0 02            [24] 2041 	pop	ar2
      00098C D0 03            [24] 2042 	pop	ar3
                                   2043 ;	./src/angry_bird.c:623: for (int i = 0; i < bird_row_size; i++)
      00098E 7F 01            [12] 2044 	mov	r7,#0x01
      000990 80 D8            [24] 2045 	sjmp	00173$
      000992                       2046 00177$:
                                   2047 ;	./src/angry_bird.c:621: for (int j = 0; j < bird_cul_size; j++)
      000992 0A               [12] 2048 	inc	r2
      000993 BA 00 C7         [24] 2049 	cjne	r2,#0x00,00176$
      000996 0B               [12] 2050 	inc	r3
      000997 80 C4            [24] 2051 	sjmp	00176$
      000999                       2052 00138$:
                                   2053 ;	./src/angry_bird.c:630: for (int i = 16; i <= 119; i += 8)
      000999 75*53 10         [24] 2054 	mov	_angrybird_game_state_i_262145_199,#0x10
      00099C 75*54 00         [24] 2055 	mov	(_angrybird_game_state_i_262145_199 + 1),#0x00
      00099F                       2056 00197$:
      00099F C3               [12] 2057 	clr	c
      0009A0 74 77            [12] 2058 	mov	a,#0x77
      0009A2 95*53            [12] 2059 	subb	a,_angrybird_game_state_i_262145_199
      0009A4 74 80            [12] 2060 	mov	a,#(0x00 ^ 0x80)
      0009A6 85*54 F0         [24] 2061 	mov	b,(_angrybird_game_state_i_262145_199 + 1)
      0009A9 63 F0 80         [24] 2062 	xrl	b,#0x80
      0009AC 95 F0            [12] 2063 	subb	a,b
      0009AE 50 03            [24] 2064 	jnc	00647$
      0009B0 02r0BrD3         [24] 2065 	ljmp	00153$
      0009B3                       2066 00647$:
                                   2067 ;	./src/angry_bird.c:632: int output_row = a * pow_2(i - peak_x) + peak_y;
      0009B3 85*53 82         [24] 2068 	mov	dpl,_angrybird_game_state_i_262145_199
      0009B6 85*54 83         [24] 2069 	mov	dph,(_angrybird_game_state_i_262145_199 + 1)
      0009B9 12r00r00         [24] 2070 	lcall	___sint2fs
      0009BC AA 82            [24] 2071 	mov	r2,dpl
      0009BE AB 83            [24] 2072 	mov	r3,dph
      0009C0 AC F0            [24] 2073 	mov	r4,b
      0009C2 FD               [12] 2074 	mov	r5,a
      0009C3 C0*47            [24] 2075 	push	_angrybird_game_state_peak_x_196609_194
      0009C5 C0*48            [24] 2076 	push	(_angrybird_game_state_peak_x_196609_194 + 1)
      0009C7 C0*49            [24] 2077 	push	(_angrybird_game_state_peak_x_196609_194 + 2)
      0009C9 C0*4A            [24] 2078 	push	(_angrybird_game_state_peak_x_196609_194 + 3)
      0009CB 8A 82            [24] 2079 	mov	dpl,r2
      0009CD 8B 83            [24] 2080 	mov	dph,r3
      0009CF 8C F0            [24] 2081 	mov	b,r4
      0009D1 ED               [12] 2082 	mov	a,r5
      0009D2 12r00r00         [24] 2083 	lcall	___fssub
      0009D5 AA 82            [24] 2084 	mov	r2,dpl
      0009D7 AB 83            [24] 2085 	mov	r3,dph
      0009D9 AC F0            [24] 2086 	mov	r4,b
      0009DB FD               [12] 2087 	mov	r5,a
      0009DC E5 81            [12] 2088 	mov	a,sp
      0009DE 24 FC            [12] 2089 	add	a,#0xfc
      0009E0 F5 81            [12] 2090 	mov	sp,a
      0009E2 8A 82            [24] 2091 	mov	dpl,r2
      0009E4 8B 83            [24] 2092 	mov	dph,r3
      0009E6 8C F0            [24] 2093 	mov	b,r4
      0009E8 ED               [12] 2094 	mov	a,r5
      0009E9 12r0Dr5F         [24] 2095 	lcall	_pow_2
      0009EC AA 82            [24] 2096 	mov	r2,dpl
      0009EE AB 83            [24] 2097 	mov	r3,dph
      0009F0 AC F0            [24] 2098 	mov	r4,b
      0009F2 FD               [12] 2099 	mov	r5,a
      0009F3 C0 02            [24] 2100 	push	ar2
      0009F5 C0 03            [24] 2101 	push	ar3
      0009F7 C0 04            [24] 2102 	push	ar4
      0009F9 C0 05            [24] 2103 	push	ar5
      0009FB 85*4F 82         [24] 2104 	mov	dpl,_angrybird_game_state_a_196609_194
      0009FE 85*50 83         [24] 2105 	mov	dph,(_angrybird_game_state_a_196609_194 + 1)
      000A01 85*51 F0         [24] 2106 	mov	b,(_angrybird_game_state_a_196609_194 + 2)
      000A04 E5*52            [12] 2107 	mov	a,(_angrybird_game_state_a_196609_194 + 3)
      000A06 12r00r00         [24] 2108 	lcall	___fsmul
      000A09 AA 82            [24] 2109 	mov	r2,dpl
      000A0B AB 83            [24] 2110 	mov	r3,dph
      000A0D AC F0            [24] 2111 	mov	r4,b
      000A0F FD               [12] 2112 	mov	r5,a
      000A10 E5 81            [12] 2113 	mov	a,sp
      000A12 24 FC            [12] 2114 	add	a,#0xfc
      000A14 F5 81            [12] 2115 	mov	sp,a
      000A16 C0*4B            [24] 2116 	push	_angrybird_game_state_peak_y_196609_194
      000A18 C0*4C            [24] 2117 	push	(_angrybird_game_state_peak_y_196609_194 + 1)
      000A1A C0*4D            [24] 2118 	push	(_angrybird_game_state_peak_y_196609_194 + 2)
      000A1C C0*4E            [24] 2119 	push	(_angrybird_game_state_peak_y_196609_194 + 3)
      000A1E 8A 82            [24] 2120 	mov	dpl,r2
      000A20 8B 83            [24] 2121 	mov	dph,r3
      000A22 8C F0            [24] 2122 	mov	b,r4
      000A24 ED               [12] 2123 	mov	a,r5
      000A25 12r00r00         [24] 2124 	lcall	___fsadd
      000A28 AA 82            [24] 2125 	mov	r2,dpl
      000A2A AB 83            [24] 2126 	mov	r3,dph
      000A2C AC F0            [24] 2127 	mov	r4,b
      000A2E FD               [12] 2128 	mov	r5,a
      000A2F E5 81            [12] 2129 	mov	a,sp
      000A31 24 FC            [12] 2130 	add	a,#0xfc
      000A33 F5 81            [12] 2131 	mov	sp,a
      000A35 8A 82            [24] 2132 	mov	dpl,r2
      000A37 8B 83            [24] 2133 	mov	dph,r3
      000A39 8C F0            [24] 2134 	mov	b,r4
      000A3B ED               [12] 2135 	mov	a,r5
      000A3C 12r00r00         [24] 2136 	lcall	___fs2sint
      000A3F 85 82*55         [24] 2137 	mov	_angrybird_game_state_output_row_327681_200,dpl
      000A42 85 83*56         [24] 2138 	mov	(_angrybird_game_state_output_row_327681_200 + 1),dph
                                   2139 ;	./src/angry_bird.c:634: if (1 <= output_row && output_row <= 7)
      000A45 C3               [12] 2140 	clr	c
      000A46 E5*55            [12] 2141 	mov	a,_angrybird_game_state_output_row_327681_200
      000A48 94 01            [12] 2142 	subb	a,#0x01
      000A4A E5*56            [12] 2143 	mov	a,(_angrybird_game_state_output_row_327681_200 + 1)
      000A4C 64 80            [12] 2144 	xrl	a,#0x80
      000A4E 94 80            [12] 2145 	subb	a,#0x80
      000A50 50 03            [24] 2146 	jnc	00648$
      000A52 02r0BrC5         [24] 2147 	ljmp	00198$
      000A55                       2148 00648$:
      000A55 C3               [12] 2149 	clr	c
      000A56 74 07            [12] 2150 	mov	a,#0x07
      000A58 95*55            [12] 2151 	subb	a,_angrybird_game_state_output_row_327681_200
      000A5A 74 80            [12] 2152 	mov	a,#(0x00 ^ 0x80)
      000A5C 85*56 F0         [24] 2153 	mov	b,(_angrybird_game_state_output_row_327681_200 + 1)
      000A5F 63 F0 80         [24] 2154 	xrl	b,#0x80
      000A62 95 F0            [12] 2155 	subb	a,b
      000A64 50 03            [24] 2156 	jnc	00649$
      000A66 02r0BrC5         [24] 2157 	ljmp	00198$
      000A69                       2158 00649$:
                                   2159 ;	./src/angry_bird.c:637: row_offset = output_row;
      000A69 85*55*00         [24] 2160 	mov	_row_offset,_angrybird_game_state_output_row_327681_200
      000A6C 85*56*01         [24] 2161 	mov	(_row_offset + 1),(_angrybird_game_state_output_row_327681_200 + 1)
                                   2162 ;	./src/angry_bird.c:638: col_offset = bird_init_col_cursor + i;
      000A6F 74 08            [12] 2163 	mov	a,#0x08
      000A71 25*53            [12] 2164 	add	a,_angrybird_game_state_i_262145_199
      000A73 F5*02            [12] 2165 	mov	_col_offset,a
      000A75 E4               [12] 2166 	clr	a
      000A76 35*54            [12] 2167 	addc	a,(_angrybird_game_state_i_262145_199 + 1)
      000A78 F5*03            [12] 2168 	mov	(_col_offset + 1),a
                                   2169 ;	./src/angry_bird.c:639: for (int j = 0; j < bird_cul_size; j++)
      000A7A 7A 00            [12] 2170 	mov	r2,#0x00
      000A7C 7B 00            [12] 2171 	mov	r3,#0x00
      000A7E                       2172 00182$:
      000A7E C3               [12] 2173 	clr	c
      000A7F EA               [12] 2174 	mov	a,r2
      000A80 94 08            [12] 2175 	subb	a,#0x08
      000A82 EB               [12] 2176 	mov	a,r3
      000A83 64 80            [12] 2177 	xrl	a,#0x80
      000A85 94 80            [12] 2178 	subb	a,#0x80
      000A87 50 4D            [24] 2179 	jnc	00140$
                                   2180 ;	./src/angry_bird.c:641: for (int i = 0; i < bird_row_size; i++)
      000A89 7D 00            [12] 2181 	mov	r5,#0x00
      000A8B                       2182 00179$:
      000A8B BD 01 00         [24] 2183 	cjne	r5,#0x01,00651$
      000A8E                       2184 00651$:
      000A8E 50 3F            [24] 2185 	jnc	00183$
                                   2186 ;	./src/angry_bird.c:643: OLED_SetCursor(row_offset + i, col_offset + j);
      000A90 AC*00            [24] 2187 	mov	r4,_row_offset
      000A92 E4               [12] 2188 	clr	a
      000A93 2C               [12] 2189 	add	a,r4
      000A94 F5 82            [12] 2190 	mov	dpl,a
      000A96 AC*02            [24] 2191 	mov	r4,_col_offset
      000A98 8A 07            [24] 2192 	mov	ar7,r2
      000A9A EF               [12] 2193 	mov	a,r7
      000A9B 2C               [12] 2194 	add	a,r4
      000A9C F5*00            [12] 2195 	mov	_OLED_SetCursor_PARM_2,a
      000A9E C0 07            [24] 2196 	push	ar7
      000AA0 C0 03            [24] 2197 	push	ar3
      000AA2 C0 02            [24] 2198 	push	ar2
      000AA4 12r00r00         [24] 2199 	lcall	_OLED_SetCursor
      000AA7 D0 02            [24] 2200 	pop	ar2
      000AA9 D0 03            [24] 2201 	pop	ar3
      000AAB D0 07            [24] 2202 	pop	ar7
                                   2203 ;	./src/angry_bird.c:644: oledSendData(bird_logo[bird_cul_size * i + j]);
      000AAD EF               [12] 2204 	mov	a,r7
      000AAE 33               [12] 2205 	rlc	a
      000AAF 95 E0            [12] 2206 	subb	a,acc
      000AB1 FE               [12] 2207 	mov	r6,a
      000AB2 EF               [12] 2208 	mov	a,r7
      000AB3 24r90            [12] 2209 	add	a,#_bird_logo
      000AB5 F5 82            [12] 2210 	mov	dpl,a
      000AB7 EE               [12] 2211 	mov	a,r6
      000AB8 34s02            [12] 2212 	addc	a,#(_bird_logo >> 8)
      000ABA F5 83            [12] 2213 	mov	dph,a
      000ABC E4               [12] 2214 	clr	a
      000ABD 93               [24] 2215 	movc	a,@a+dptr
      000ABE F5 82            [12] 2216 	mov	dpl,a
      000AC0 C0 03            [24] 2217 	push	ar3
      000AC2 C0 02            [24] 2218 	push	ar2
      000AC4 12r00r00         [24] 2219 	lcall	_oledSendData
      000AC7 D0 02            [24] 2220 	pop	ar2
      000AC9 D0 03            [24] 2221 	pop	ar3
                                   2222 ;	./src/angry_bird.c:641: for (int i = 0; i < bird_row_size; i++)
      000ACB 7D 01            [12] 2223 	mov	r5,#0x01
      000ACD 80 BC            [24] 2224 	sjmp	00179$
      000ACF                       2225 00183$:
                                   2226 ;	./src/angry_bird.c:639: for (int j = 0; j < bird_cul_size; j++)
      000ACF 0A               [12] 2227 	inc	r2
      000AD0 BA 00 AB         [24] 2228 	cjne	r2,#0x00,00182$
      000AD3 0B               [12] 2229 	inc	r3
      000AD4 80 A8            [24] 2230 	sjmp	00182$
      000AD6                       2231 00140$:
                                   2232 ;	./src/angry_bird.c:647: delay_ms(400);
      000AD6 90 01 90         [24] 2233 	mov	dptr,#0x0190
      000AD9 12r00r00         [24] 2234 	lcall	_delay_ms
                                   2235 ;	./src/angry_bird.c:653: if (pig1_row_cursor <= row_offset && row_offset <= pig1_row_cursor + 1 && pig1_col_cursor - 8 < col_offset && col_offset < pig1_col_cursor + 12)
      000ADC C3               [12] 2236 	clr	c
      000ADD E5*00            [12] 2237 	mov	a,_row_offset
      000ADF 94 03            [12] 2238 	subb	a,#0x03
      000AE1 E5*01            [12] 2239 	mov	a,(_row_offset + 1)
      000AE3 64 80            [12] 2240 	xrl	a,#0x80
      000AE5 94 80            [12] 2241 	subb	a,#0x80
      000AE7 50 03            [24] 2242 	jnc	00654$
      000AE9 02r0Br74         [24] 2243 	ljmp	00144$
      000AEC                       2244 00654$:
      000AEC C3               [12] 2245 	clr	c
      000AED 74 04            [12] 2246 	mov	a,#0x04
      000AEF 95*00            [12] 2247 	subb	a,_row_offset
      000AF1 74 80            [12] 2248 	mov	a,#(0x00 ^ 0x80)
      000AF3 85*01 F0         [24] 2249 	mov	b,(_row_offset + 1)
      000AF6 63 F0 80         [24] 2250 	xrl	b,#0x80
      000AF9 95 F0            [12] 2251 	subb	a,b
      000AFB 40 77            [24] 2252 	jc	00144$
      000AFD 74 48            [12] 2253 	mov	a,#0x48
      000AFF 95*02            [12] 2254 	subb	a,_col_offset
      000B01 74 80            [12] 2255 	mov	a,#(0x00 ^ 0x80)
      000B03 85*03 F0         [24] 2256 	mov	b,(_col_offset + 1)
      000B06 63 F0 80         [24] 2257 	xrl	b,#0x80
      000B09 95 F0            [12] 2258 	subb	a,b
      000B0B 50 67            [24] 2259 	jnc	00144$
      000B0D C3               [12] 2260 	clr	c
      000B0E E5*02            [12] 2261 	mov	a,_col_offset
      000B10 94 5C            [12] 2262 	subb	a,#0x5c
      000B12 E5*03            [12] 2263 	mov	a,(_col_offset + 1)
      000B14 64 80            [12] 2264 	xrl	a,#0x80
      000B16 94 80            [12] 2265 	subb	a,#0x80
      000B18 50 5A            [24] 2266 	jnc	00144$
                                   2267 ;	./src/angry_bird.c:655: pig_amt--;
      000B1A 15*2A            [12] 2268 	dec	_pig_amt
      000B1C 74 FF            [12] 2269 	mov	a,#0xff
      000B1E B5*2A 02         [24] 2270 	cjne	a,_pig_amt,00658$
      000B21 15*2B            [12] 2271 	dec	(_pig_amt + 1)
      000B23                       2272 00658$:
                                   2273 ;	./src/angry_bird.c:656: row_offset = pig1_row_cursor;
      000B23 75*00 03         [24] 2274 	mov	_row_offset,#0x03
      000B26 75*01 00         [24] 2275 	mov	(_row_offset + 1),#0x00
                                   2276 ;	./src/angry_bird.c:657: col_offset = pig1_col_cursor;
      000B29 75*02 50         [24] 2277 	mov	_col_offset,#0x50
      000B2C 75*03 00         [24] 2278 	mov	(_col_offset + 1),#0x00
                                   2279 ;	./src/angry_bird.c:658: for (int j = 0; j < pig_cul_size; j++)
      000B2F 7E 00            [12] 2280 	mov	r6,#0x00
      000B31 7F 00            [12] 2281 	mov	r7,#0x00
      000B33                       2282 00188$:
      000B33 C3               [12] 2283 	clr	c
      000B34 EE               [12] 2284 	mov	a,r6
      000B35 94 0C            [12] 2285 	subb	a,#0x0c
      000B37 EF               [12] 2286 	mov	a,r7
      000B38 64 80            [12] 2287 	xrl	a,#0x80
      000B3A 94 80            [12] 2288 	subb	a,#0x80
      000B3C 50 36            [24] 2289 	jnc	00144$
                                   2290 ;	./src/angry_bird.c:660: for (int i = 0; i < pig_row_size; i++)
      000B3E 7D 00            [12] 2291 	mov	r5,#0x00
      000B40                       2292 00185$:
      000B40 BD 02 00         [24] 2293 	cjne	r5,#0x02,00660$
      000B43                       2294 00660$:
      000B43 50 28            [24] 2295 	jnc	00189$
                                   2296 ;	./src/angry_bird.c:662: OLED_SetCursor(row_offset + i, col_offset + j);
      000B45 AC*00            [24] 2297 	mov	r4,_row_offset
      000B47 8D 03            [24] 2298 	mov	ar3,r5
      000B49 EB               [12] 2299 	mov	a,r3
      000B4A 2C               [12] 2300 	add	a,r4
      000B4B F5 82            [12] 2301 	mov	dpl,a
      000B4D AC*02            [24] 2302 	mov	r4,_col_offset
      000B4F 8E 03            [24] 2303 	mov	ar3,r6
      000B51 EB               [12] 2304 	mov	a,r3
      000B52 2C               [12] 2305 	add	a,r4
      000B53 F5*00            [12] 2306 	mov	_OLED_SetCursor_PARM_2,a
      000B55 C0 07            [24] 2307 	push	ar7
      000B57 C0 06            [24] 2308 	push	ar6
      000B59 C0 05            [24] 2309 	push	ar5
      000B5B 12r00r00         [24] 2310 	lcall	_OLED_SetCursor
                                   2311 ;	./src/angry_bird.c:663: oledSendData(0x00);
      000B5E 75 82 00         [24] 2312 	mov	dpl,#0x00
      000B61 12r00r00         [24] 2313 	lcall	_oledSendData
      000B64 D0 05            [24] 2314 	pop	ar5
      000B66 D0 06            [24] 2315 	pop	ar6
      000B68 D0 07            [24] 2316 	pop	ar7
                                   2317 ;	./src/angry_bird.c:660: for (int i = 0; i < pig_row_size; i++)
      000B6A 0D               [12] 2318 	inc	r5
      000B6B 80 D3            [24] 2319 	sjmp	00185$
      000B6D                       2320 00189$:
                                   2321 ;	./src/angry_bird.c:658: for (int j = 0; j < pig_cul_size; j++)
      000B6D 0E               [12] 2322 	inc	r6
      000B6E BE 00 C2         [24] 2323 	cjne	r6,#0x00,00188$
      000B71 0F               [12] 2324 	inc	r7
      000B72 80 BF            [24] 2325 	sjmp	00188$
      000B74                       2326 00144$:
                                   2327 ;	./src/angry_bird.c:668: row_offset = output_row;
      000B74 85*55*00         [24] 2328 	mov	_row_offset,_angrybird_game_state_output_row_327681_200
      000B77 85*56*01         [24] 2329 	mov	(_row_offset + 1),(_angrybird_game_state_output_row_327681_200 + 1)
                                   2330 ;	./src/angry_bird.c:669: col_offset = bird_init_col_cursor + i;
      000B7A 74 08            [12] 2331 	mov	a,#0x08
      000B7C 25*53            [12] 2332 	add	a,_angrybird_game_state_i_262145_199
      000B7E F5*02            [12] 2333 	mov	_col_offset,a
      000B80 E4               [12] 2334 	clr	a
      000B81 35*54            [12] 2335 	addc	a,(_angrybird_game_state_i_262145_199 + 1)
      000B83 F5*03            [12] 2336 	mov	(_col_offset + 1),a
                                   2337 ;	./src/angry_bird.c:670: for (int j = 0; j < bird_cul_size; j++)
      000B85 7E 00            [12] 2338 	mov	r6,#0x00
      000B87 7F 00            [12] 2339 	mov	r7,#0x00
      000B89                       2340 00194$:
      000B89 C3               [12] 2341 	clr	c
      000B8A EE               [12] 2342 	mov	a,r6
      000B8B 94 08            [12] 2343 	subb	a,#0x08
      000B8D EF               [12] 2344 	mov	a,r7
      000B8E 64 80            [12] 2345 	xrl	a,#0x80
      000B90 94 80            [12] 2346 	subb	a,#0x80
      000B92 50 31            [24] 2347 	jnc	00198$
                                   2348 ;	./src/angry_bird.c:672: for (int i = 0; i < bird_row_size; i++)
      000B94 7D 00            [12] 2349 	mov	r5,#0x00
      000B96                       2350 00191$:
      000B96 BD 01 00         [24] 2351 	cjne	r5,#0x01,00664$
      000B99                       2352 00664$:
      000B99 50 23            [24] 2353 	jnc	00195$
                                   2354 ;	./src/angry_bird.c:674: OLED_SetCursor(row_offset + i, col_offset + j);
      000B9B AC*00            [24] 2355 	mov	r4,_row_offset
      000B9D E4               [12] 2356 	clr	a
      000B9E 2C               [12] 2357 	add	a,r4
      000B9F F5 82            [12] 2358 	mov	dpl,a
      000BA1 AC*02            [24] 2359 	mov	r4,_col_offset
      000BA3 8E 03            [24] 2360 	mov	ar3,r6
      000BA5 EB               [12] 2361 	mov	a,r3
      000BA6 2C               [12] 2362 	add	a,r4
      000BA7 F5*00            [12] 2363 	mov	_OLED_SetCursor_PARM_2,a
      000BA9 C0 07            [24] 2364 	push	ar7
      000BAB C0 06            [24] 2365 	push	ar6
      000BAD 12r00r00         [24] 2366 	lcall	_OLED_SetCursor
                                   2367 ;	./src/angry_bird.c:675: oledSendData(0x00);
      000BB0 75 82 00         [24] 2368 	mov	dpl,#0x00
      000BB3 12r00r00         [24] 2369 	lcall	_oledSendData
      000BB6 D0 06            [24] 2370 	pop	ar6
      000BB8 D0 07            [24] 2371 	pop	ar7
                                   2372 ;	./src/angry_bird.c:672: for (int i = 0; i < bird_row_size; i++)
      000BBA 7D 01            [12] 2373 	mov	r5,#0x01
      000BBC 80 D8            [24] 2374 	sjmp	00191$
      000BBE                       2375 00195$:
                                   2376 ;	./src/angry_bird.c:670: for (int j = 0; j < bird_cul_size; j++)
      000BBE 0E               [12] 2377 	inc	r6
      000BBF BE 00 C7         [24] 2378 	cjne	r6,#0x00,00194$
      000BC2 0F               [12] 2379 	inc	r7
      000BC3 80 C4            [24] 2380 	sjmp	00194$
      000BC5                       2381 00198$:
                                   2382 ;	./src/angry_bird.c:630: for (int i = 16; i <= 119; i += 8)
      000BC5 74 08            [12] 2383 	mov	a,#0x08
      000BC7 25*53            [12] 2384 	add	a,_angrybird_game_state_i_262145_199
      000BC9 F5*53            [12] 2385 	mov	_angrybird_game_state_i_262145_199,a
      000BCB E4               [12] 2386 	clr	a
      000BCC 35*54            [12] 2387 	addc	a,(_angrybird_game_state_i_262145_199 + 1)
      000BCE F5*54            [12] 2388 	mov	(_angrybird_game_state_i_262145_199 + 1),a
      000BD0 02r09r9F         [24] 2389 	ljmp	00197$
      000BD3                       2390 00153$:
                                   2391 ;	./src/angry_bird.c:682: row_offset = bird_init_row_cursor;
      000BD3 75*00 07         [24] 2392 	mov	_row_offset,#0x07
      000BD6 75*01 00         [24] 2393 	mov	(_row_offset + 1),#0x00
                                   2394 ;	./src/angry_bird.c:683: col_offset = bird_init_col_cursor;
      000BD9 75*02 08         [24] 2395 	mov	_col_offset,#0x08
      000BDC 75*03 00         [24] 2396 	mov	(_col_offset + 1),#0x00
                                   2397 ;	./src/angry_bird.c:684: for (int j = 0; j < bird_cul_size; j++)
      000BDF 7E 00            [12] 2398 	mov	r6,#0x00
      000BE1 7F 00            [12] 2399 	mov	r7,#0x00
      000BE3                       2400 00203$:
      000BE3 C3               [12] 2401 	clr	c
      000BE4 EE               [12] 2402 	mov	a,r6
      000BE5 94 08            [12] 2403 	subb	a,#0x08
      000BE7 EF               [12] 2404 	mov	a,r7
      000BE8 64 80            [12] 2405 	xrl	a,#0x80
      000BEA 94 80            [12] 2406 	subb	a,#0x80
      000BEC 50 45            [24] 2407 	jnc	00159$
                                   2408 ;	./src/angry_bird.c:686: for (int i = 0; i < bird_row_size; i++)
      000BEE 7D 00            [12] 2409 	mov	r5,#0x00
      000BF0                       2410 00200$:
      000BF0 BD 01 00         [24] 2411 	cjne	r5,#0x01,00668$
      000BF3                       2412 00668$:
      000BF3 50 37            [24] 2413 	jnc	00204$
                                   2414 ;	./src/angry_bird.c:688: OLED_SetCursor(row_offset + i, col_offset + j);
      000BF5 AC*00            [24] 2415 	mov	r4,_row_offset
      000BF7 E4               [12] 2416 	clr	a
      000BF8 2C               [12] 2417 	add	a,r4
      000BF9 F5 82            [12] 2418 	mov	dpl,a
      000BFB AC*02            [24] 2419 	mov	r4,_col_offset
      000BFD 8E 03            [24] 2420 	mov	ar3,r6
      000BFF EB               [12] 2421 	mov	a,r3
      000C00 2C               [12] 2422 	add	a,r4
      000C01 F5*00            [12] 2423 	mov	_OLED_SetCursor_PARM_2,a
      000C03 C0 07            [24] 2424 	push	ar7
      000C05 C0 06            [24] 2425 	push	ar6
      000C07 C0 03            [24] 2426 	push	ar3
      000C09 12r00r00         [24] 2427 	lcall	_OLED_SetCursor
      000C0C D0 03            [24] 2428 	pop	ar3
                                   2429 ;	./src/angry_bird.c:689: oledSendData(bird_logo[bird_cul_size * i + j]);
      000C0E EB               [12] 2430 	mov	a,r3
      000C0F 33               [12] 2431 	rlc	a
      000C10 95 E0            [12] 2432 	subb	a,acc
      000C12 FC               [12] 2433 	mov	r4,a
      000C13 EB               [12] 2434 	mov	a,r3
      000C14 24r90            [12] 2435 	add	a,#_bird_logo
      000C16 F5 82            [12] 2436 	mov	dpl,a
      000C18 EC               [12] 2437 	mov	a,r4
      000C19 34s02            [12] 2438 	addc	a,#(_bird_logo >> 8)
      000C1B F5 83            [12] 2439 	mov	dph,a
      000C1D E4               [12] 2440 	clr	a
      000C1E 93               [24] 2441 	movc	a,@a+dptr
      000C1F F5 82            [12] 2442 	mov	dpl,a
      000C21 12r00r00         [24] 2443 	lcall	_oledSendData
      000C24 D0 06            [24] 2444 	pop	ar6
      000C26 D0 07            [24] 2445 	pop	ar7
                                   2446 ;	./src/angry_bird.c:686: for (int i = 0; i < bird_row_size; i++)
      000C28 7D 01            [12] 2447 	mov	r5,#0x01
      000C2A 80 C4            [24] 2448 	sjmp	00200$
      000C2C                       2449 00204$:
                                   2450 ;	./src/angry_bird.c:684: for (int j = 0; j < bird_cul_size; j++)
      000C2C 0E               [12] 2451 	inc	r6
      000C2D BE 00 B3         [24] 2452 	cjne	r6,#0x00,00203$
      000C30 0F               [12] 2453 	inc	r7
      000C31 80 B0            [24] 2454 	sjmp	00203$
      000C33                       2455 00159$:
                                   2456 ;	./src/angry_bird.c:707: if (pig_amt == 0)
      000C33 E5*2A            [12] 2457 	mov	a,_pig_amt
      000C35 45*2B            [12] 2458 	orl	a,(_pig_amt + 1)
                                   2459 ;	./src/angry_bird.c:711: cur_state = STATE_HOME;
      000C37 70 0A            [24] 2460 	jnz	00164$
      000C39 75*26 01         [24] 2461 	mov	_cur_state,#0x01
      000C3C F5*27            [12] 2462 	mov	(_cur_state + 1),a
                                   2463 ;	./src/angry_bird.c:712: angrybird_display_home();
      000C3E 12r00r00         [24] 2464 	lcall	_angrybird_display_home
      000C41 80 0E            [24] 2465 	sjmp	00165$
      000C43                       2466 00164$:
                                   2467 ;	./src/angry_bird.c:714: else if (bird_amt == 0)
      000C43 E5*28            [12] 2468 	mov	a,_bird_amt
      000C45 45*29            [12] 2469 	orl	a,(_bird_amt + 1)
                                   2470 ;	./src/angry_bird.c:718: cur_state = STATE_HOME;
      000C47 70 08            [24] 2471 	jnz	00165$
      000C49 75*26 01         [24] 2472 	mov	_cur_state,#0x01
      000C4C F5*27            [12] 2473 	mov	(_cur_state + 1),a
                                   2474 ;	./src/angry_bird.c:719: angrybird_display_home();
      000C4E 12r00r00         [24] 2475 	lcall	_angrybird_display_home
      000C51                       2476 00165$:
                                   2477 ;	./src/angry_bird.c:722: prebut_enter = but_enter;
      000C51 A2 B3            [12] 2478 	mov	c,_INT1
      000C53 E4               [12] 2479 	clr	a
      000C54 33               [12] 2480 	rlc	a
      000C55 F5*34            [12] 2481 	mov	_prebut_enter,a
      000C57 75*35 00         [24] 2482 	mov	(_prebut_enter + 1),#0x00
                                   2483 ;	./src/angry_bird.c:723: prebut_up = but_up;
      000C5A A2 A0            [12] 2484 	mov	c,_P2_0
      000C5C E4               [12] 2485 	clr	a
      000C5D 33               [12] 2486 	rlc	a
      000C5E F5*2C            [12] 2487 	mov	_prebut_up,a
      000C60 75*2D 00         [24] 2488 	mov	(_prebut_up + 1),#0x00
                                   2489 ;	./src/angry_bird.c:724: prebut_down = but_down;
      000C63 A2 A1            [12] 2490 	mov	c,_P2_1
      000C65 E4               [12] 2491 	clr	a
      000C66 33               [12] 2492 	rlc	a
      000C67 F5*2E            [12] 2493 	mov	_prebut_down,a
      000C69 75*2F 00         [24] 2494 	mov	(_prebut_down + 1),#0x00
                                   2495 ;	./src/angry_bird.c:725: prebut_left = but_left;
      000C6C A2 B2            [12] 2496 	mov	c,_INT0
      000C6E E4               [12] 2497 	clr	a
      000C6F 33               [12] 2498 	rlc	a
      000C70 F5*30            [12] 2499 	mov	_prebut_left,a
      000C72 75*31 00         [24] 2500 	mov	(_prebut_left + 1),#0x00
                                   2501 ;	./src/angry_bird.c:726: prebut_right = but_right;
      000C75 A2 A2            [12] 2502 	mov	c,_P2_2
      000C77 E4               [12] 2503 	clr	a
      000C78 33               [12] 2504 	rlc	a
      000C79 F5*32            [12] 2505 	mov	_prebut_right,a
      000C7B 75*33 00         [24] 2506 	mov	(_prebut_right + 1),#0x00
                                   2507 ;	./src/angry_bird.c:727: delay_ms(10);
      000C7E 90 00 0A         [24] 2508 	mov	dptr,#0x000a
                                   2509 ;	./src/angry_bird.c:728: }
      000C81 02r00r00         [24] 2510 	ljmp	_delay_ms
                                   2511 ;------------------------------------------------------------
                                   2512 ;Allocation info for local variables in function 'getsine'
                                   2513 ;------------------------------------------------------------
                                   2514 ;angle                     Allocated to registers r6 r7 
                                   2515 ;index                     Allocated to registers r6 r7 
                                   2516 ;------------------------------------------------------------
                                   2517 ;	./src/angry_bird.c:734: float getsine(int angle)
                                   2518 ;	-----------------------------------------
                                   2519 ;	 function getsine
                                   2520 ;	-----------------------------------------
      000C84                       2521 _getsine:
      000C84 AE 82            [24] 2522 	mov	r6,dpl
      000C86 AF 83            [24] 2523 	mov	r7,dph
                                   2524 ;	./src/angry_bird.c:736: int index = (angle > 0) ? (angle / 10) : (-angle / 10);
      000C88 C3               [12] 2525 	clr	c
      000C89 E4               [12] 2526 	clr	a
      000C8A 9E               [12] 2527 	subb	a,r6
      000C8B 74 80            [12] 2528 	mov	a,#(0x00 ^ 0x80)
      000C8D 8F F0            [24] 2529 	mov	b,r7
      000C8F 63 F0 80         [24] 2530 	xrl	b,#0x80
      000C92 95 F0            [12] 2531 	subb	a,b
      000C94 E4               [12] 2532 	clr	a
      000C95 33               [12] 2533 	rlc	a
      000C96 FD               [12] 2534 	mov	r5,a
      000C97 60 17            [24] 2535 	jz	00103$
      000C99 75*00 0A         [24] 2536 	mov	__divsint_PARM_2,#0x0a
      000C9C 75*01 00         [24] 2537 	mov	(__divsint_PARM_2 + 1),#0x00
      000C9F 8E 82            [24] 2538 	mov	dpl,r6
      000CA1 8F 83            [24] 2539 	mov	dph,r7
      000CA3 C0 05            [24] 2540 	push	ar5
      000CA5 12r00r00         [24] 2541 	lcall	__divsint
      000CA8 AB 82            [24] 2542 	mov	r3,dpl
      000CAA AC 83            [24] 2543 	mov	r4,dph
      000CAC D0 05            [24] 2544 	pop	ar5
      000CAE 80 1A            [24] 2545 	sjmp	00104$
      000CB0                       2546 00103$:
      000CB0 C3               [12] 2547 	clr	c
      000CB1 E4               [12] 2548 	clr	a
      000CB2 9E               [12] 2549 	subb	a,r6
      000CB3 F5 82            [12] 2550 	mov	dpl,a
      000CB5 E4               [12] 2551 	clr	a
      000CB6 9F               [12] 2552 	subb	a,r7
      000CB7 F5 83            [12] 2553 	mov	dph,a
      000CB9 75*00 0A         [24] 2554 	mov	__divsint_PARM_2,#0x0a
      000CBC 75*01 00         [24] 2555 	mov	(__divsint_PARM_2 + 1),#0x00
      000CBF C0 05            [24] 2556 	push	ar5
      000CC1 12r00r00         [24] 2557 	lcall	__divsint
      000CC4 AB 82            [24] 2558 	mov	r3,dpl
      000CC6 AC 83            [24] 2559 	mov	r4,dph
      000CC8 D0 05            [24] 2560 	pop	ar5
      000CCA                       2561 00104$:
      000CCA 8B 06            [24] 2562 	mov	ar6,r3
      000CCC 8C 07            [24] 2563 	mov	ar7,r4
                                   2564 ;	./src/angry_bird.c:737: return (angle > 0) ? sine_table[index] : -sine_table[index];
      000CCE ED               [12] 2565 	mov	a,r5
      000CCF 60 27            [24] 2566 	jz	00105$
      000CD1 EE               [12] 2567 	mov	a,r6
      000CD2 2E               [12] 2568 	add	a,r6
      000CD3 FC               [12] 2569 	mov	r4,a
      000CD4 EF               [12] 2570 	mov	a,r7
      000CD5 33               [12] 2571 	rlc	a
      000CD6 FD               [12] 2572 	mov	r5,a
      000CD7 EC               [12] 2573 	mov	a,r4
      000CD8 2C               [12] 2574 	add	a,r4
      000CD9 FC               [12] 2575 	mov	r4,a
      000CDA ED               [12] 2576 	mov	a,r5
      000CDB 33               [12] 2577 	rlc	a
      000CDC FD               [12] 2578 	mov	r5,a
      000CDD EC               [12] 2579 	mov	a,r4
      000CDE 24r8D            [12] 2580 	add	a,#_sine_table
      000CE0 F5 82            [12] 2581 	mov	dpl,a
      000CE2 ED               [12] 2582 	mov	a,r5
      000CE3 34s0D            [12] 2583 	addc	a,#(_sine_table >> 8)
      000CE5 F5 83            [12] 2584 	mov	dph,a
      000CE7 E4               [12] 2585 	clr	a
      000CE8 93               [24] 2586 	movc	a,@a+dptr
      000CE9 FA               [12] 2587 	mov	r2,a
      000CEA A3               [24] 2588 	inc	dptr
      000CEB E4               [12] 2589 	clr	a
      000CEC 93               [24] 2590 	movc	a,@a+dptr
      000CED FB               [12] 2591 	mov	r3,a
      000CEE A3               [24] 2592 	inc	dptr
      000CEF E4               [12] 2593 	clr	a
      000CF0 93               [24] 2594 	movc	a,@a+dptr
      000CF1 FC               [12] 2595 	mov	r4,a
      000CF2 A3               [24] 2596 	inc	dptr
      000CF3 E4               [12] 2597 	clr	a
      000CF4 93               [24] 2598 	movc	a,@a+dptr
      000CF5 FD               [12] 2599 	mov	r5,a
      000CF6 80 2F            [24] 2600 	sjmp	00106$
      000CF8                       2601 00105$:
      000CF8 EE               [12] 2602 	mov	a,r6
      000CF9 2E               [12] 2603 	add	a,r6
      000CFA FE               [12] 2604 	mov	r6,a
      000CFB EF               [12] 2605 	mov	a,r7
      000CFC 33               [12] 2606 	rlc	a
      000CFD FF               [12] 2607 	mov	r7,a
      000CFE EE               [12] 2608 	mov	a,r6
      000CFF 2E               [12] 2609 	add	a,r6
      000D00 FE               [12] 2610 	mov	r6,a
      000D01 EF               [12] 2611 	mov	a,r7
      000D02 33               [12] 2612 	rlc	a
      000D03 FF               [12] 2613 	mov	r7,a
      000D04 EE               [12] 2614 	mov	a,r6
      000D05 24r8D            [12] 2615 	add	a,#_sine_table
      000D07 F5 82            [12] 2616 	mov	dpl,a
      000D09 EF               [12] 2617 	mov	a,r7
      000D0A 34s0D            [12] 2618 	addc	a,#(_sine_table >> 8)
      000D0C F5 83            [12] 2619 	mov	dph,a
      000D0E E4               [12] 2620 	clr	a
      000D0F 93               [24] 2621 	movc	a,@a+dptr
      000D10 F8               [12] 2622 	mov	r0,a
      000D11 A3               [24] 2623 	inc	dptr
      000D12 E4               [12] 2624 	clr	a
      000D13 93               [24] 2625 	movc	a,@a+dptr
      000D14 F9               [12] 2626 	mov	r1,a
      000D15 A3               [24] 2627 	inc	dptr
      000D16 E4               [12] 2628 	clr	a
      000D17 93               [24] 2629 	movc	a,@a+dptr
      000D18 FE               [12] 2630 	mov	r6,a
      000D19 A3               [24] 2631 	inc	dptr
      000D1A E4               [12] 2632 	clr	a
      000D1B 93               [24] 2633 	movc	a,@a+dptr
      000D1C FF               [12] 2634 	mov	r7,a
      000D1D 88 02            [24] 2635 	mov	ar2,r0
      000D1F 89 03            [24] 2636 	mov	ar3,r1
      000D21 8E 04            [24] 2637 	mov	ar4,r6
      000D23 EF               [12] 2638 	mov	a,r7
      000D24 B2 E7            [12] 2639 	cpl	acc.7
      000D26 FD               [12] 2640 	mov	r5,a
      000D27                       2641 00106$:
      000D27 8A 82            [24] 2642 	mov	dpl,r2
      000D29 8B 83            [24] 2643 	mov	dph,r3
      000D2B 8C F0            [24] 2644 	mov	b,r4
      000D2D ED               [12] 2645 	mov	a,r5
                                   2646 ;	./src/angry_bird.c:738: }
      000D2E 22               [24] 2647 	ret
                                   2648 ;------------------------------------------------------------
                                   2649 ;Allocation info for local variables in function 'getcosine'
                                   2650 ;------------------------------------------------------------
                                   2651 ;angle                     Allocated to registers r6 r7 
                                   2652 ;------------------------------------------------------------
                                   2653 ;	./src/angry_bird.c:739: float getcosine(int angle)
                                   2654 ;	-----------------------------------------
                                   2655 ;	 function getcosine
                                   2656 ;	-----------------------------------------
      000D2F                       2657 _getcosine:
      000D2F AE 82            [24] 2658 	mov	r6,dpl
      000D31 AF 83            [24] 2659 	mov	r7,dph
                                   2660 ;	./src/angry_bird.c:741: return getsine((angle > 0) ? -angle + 90 : angle + 90);
      000D33 C3               [12] 2661 	clr	c
      000D34 E4               [12] 2662 	clr	a
      000D35 9E               [12] 2663 	subb	a,r6
      000D36 74 80            [12] 2664 	mov	a,#(0x00 ^ 0x80)
      000D38 8F F0            [24] 2665 	mov	b,r7
      000D3A 63 F0 80         [24] 2666 	xrl	b,#0x80
      000D3D 95 F0            [12] 2667 	subb	a,b
      000D3F 50 10            [24] 2668 	jnc	00103$
      000D41 C3               [12] 2669 	clr	c
      000D42 E4               [12] 2670 	clr	a
      000D43 9E               [12] 2671 	subb	a,r6
      000D44 FC               [12] 2672 	mov	r4,a
      000D45 E4               [12] 2673 	clr	a
      000D46 9F               [12] 2674 	subb	a,r7
      000D47 FD               [12] 2675 	mov	r5,a
      000D48 74 5A            [12] 2676 	mov	a,#0x5a
      000D4A 2C               [12] 2677 	add	a,r4
      000D4B FC               [12] 2678 	mov	r4,a
      000D4C E4               [12] 2679 	clr	a
      000D4D 3D               [12] 2680 	addc	a,r5
      000D4E FD               [12] 2681 	mov	r5,a
      000D4F 80 07            [24] 2682 	sjmp	00104$
      000D51                       2683 00103$:
      000D51 74 5A            [12] 2684 	mov	a,#0x5a
      000D53 2E               [12] 2685 	add	a,r6
      000D54 FC               [12] 2686 	mov	r4,a
      000D55 E4               [12] 2687 	clr	a
      000D56 3F               [12] 2688 	addc	a,r7
      000D57 FD               [12] 2689 	mov	r5,a
      000D58                       2690 00104$:
      000D58 8C 82            [24] 2691 	mov	dpl,r4
      000D5A 8D 83            [24] 2692 	mov	dph,r5
                                   2693 ;	./src/angry_bird.c:742: }
      000D5C 02r0Cr84         [24] 2694 	ljmp	_getsine
                                   2695 ;------------------------------------------------------------
                                   2696 ;Allocation info for local variables in function 'pow_2'
                                   2697 ;------------------------------------------------------------
                                   2698 ;n                         Allocated to registers r4 r5 r6 r7 
                                   2699 ;------------------------------------------------------------
                                   2700 ;	./src/angry_bird.c:743: float pow_2(float n)
                                   2701 ;	-----------------------------------------
                                   2702 ;	 function pow_2
                                   2703 ;	-----------------------------------------
      000D5F                       2704 _pow_2:
      000D5F AC 82            [24] 2705 	mov	r4,dpl
      000D61 AD 83            [24] 2706 	mov	r5,dph
      000D63 AE F0            [24] 2707 	mov	r6,b
      000D65 FF               [12] 2708 	mov	r7,a
                                   2709 ;	./src/angry_bird.c:745: return n * n;
      000D66 C0 04            [24] 2710 	push	ar4
      000D68 C0 05            [24] 2711 	push	ar5
      000D6A C0 06            [24] 2712 	push	ar6
      000D6C C0 07            [24] 2713 	push	ar7
      000D6E 8C 82            [24] 2714 	mov	dpl,r4
      000D70 8D 83            [24] 2715 	mov	dph,r5
      000D72 8E F0            [24] 2716 	mov	b,r6
      000D74 EF               [12] 2717 	mov	a,r7
      000D75 12r00r00         [24] 2718 	lcall	___fsmul
      000D78 AC 82            [24] 2719 	mov	r4,dpl
      000D7A AD 83            [24] 2720 	mov	r5,dph
      000D7C AE F0            [24] 2721 	mov	r6,b
      000D7E FF               [12] 2722 	mov	r7,a
      000D7F E5 81            [12] 2723 	mov	a,sp
      000D81 24 FC            [12] 2724 	add	a,#0xfc
      000D83 F5 81            [12] 2725 	mov	sp,a
      000D85 8C 82            [24] 2726 	mov	dpl,r4
      000D87 8D 83            [24] 2727 	mov	dph,r5
      000D89 8E F0            [24] 2728 	mov	b,r6
      000D8B EF               [12] 2729 	mov	a,r7
                                   2730 ;	./src/angry_bird.c:746: }
      000D8C 22               [24] 2731 	ret
                                   2732 	.area CSEG    (CODE)
                                   2733 	.area CONST   (CODE)
      000000                       2734 _angry_bird_logo:
      000000 00                    2735 	.db #0x00	; 0
      000001 00                    2736 	.db #0x00	; 0
      000002 00                    2737 	.db #0x00	; 0
      000003 00                    2738 	.db #0x00	; 0
      000004 00                    2739 	.db #0x00	; 0
      000005 00                    2740 	.db #0x00	; 0
      000006 00                    2741 	.db #0x00	; 0
      000007 00                    2742 	.db #0x00	; 0
      000008 00                    2743 	.db #0x00	; 0
      000009 00                    2744 	.db #0x00	; 0
      00000A 00                    2745 	.db #0x00	; 0
      00000B 00                    2746 	.db #0x00	; 0
      00000C 00                    2747 	.db #0x00	; 0
      00000D 00                    2748 	.db #0x00	; 0
      00000E 00                    2749 	.db #0x00	; 0
      00000F 00                    2750 	.db #0x00	; 0
      000010 00                    2751 	.db #0x00	; 0
      000011 00                    2752 	.db #0x00	; 0
      000012 00                    2753 	.db #0x00	; 0
      000013 00                    2754 	.db #0x00	; 0
      000014 00                    2755 	.db #0x00	; 0
      000015 00                    2756 	.db #0x00	; 0
      000016 00                    2757 	.db #0x00	; 0
      000017 00                    2758 	.db #0x00	; 0
      000018 00                    2759 	.db #0x00	; 0
      000019 00                    2760 	.db #0x00	; 0
      00001A 00                    2761 	.db #0x00	; 0
      00001B 00                    2762 	.db #0x00	; 0
      00001C 00                    2763 	.db #0x00	; 0
      00001D 80                    2764 	.db #0x80	; 128
      00001E E0                    2765 	.db #0xe0	; 224
      00001F 20                    2766 	.db #0x20	; 32
      000020 20                    2767 	.db #0x20	; 32
      000021 60                    2768 	.db #0x60	; 96
      000022 40                    2769 	.db #0x40	; 64
      000023 40                    2770 	.db #0x40	; 64
      000024 80                    2771 	.db #0x80	; 128
      000025 80                    2772 	.db #0x80	; 128
      000026 00                    2773 	.db #0x00	; 0
      000027 00                    2774 	.db #0x00	; 0
      000028 00                    2775 	.db #0x00	; 0
      000029 00                    2776 	.db #0x00	; 0
      00002A 00                    2777 	.db #0x00	; 0
      00002B 00                    2778 	.db #0x00	; 0
      00002C 00                    2779 	.db #0x00	; 0
      00002D 00                    2780 	.db #0x00	; 0
      00002E 00                    2781 	.db #0x00	; 0
      00002F 00                    2782 	.db #0x00	; 0
      000030 00                    2783 	.db #0x00	; 0
      000031 00                    2784 	.db #0x00	; 0
      000032 00                    2785 	.db #0x00	; 0
      000033 00                    2786 	.db #0x00	; 0
      000034 00                    2787 	.db #0x00	; 0
      000035 00                    2788 	.db #0x00	; 0
      000036 00                    2789 	.db #0x00	; 0
      000037 00                    2790 	.db #0x00	; 0
      000038 00                    2791 	.db #0x00	; 0
      000039 00                    2792 	.db #0x00	; 0
      00003A 00                    2793 	.db #0x00	; 0
      00003B 00                    2794 	.db #0x00	; 0
      00003C 00                    2795 	.db #0x00	; 0
      00003D 00                    2796 	.db #0x00	; 0
      00003E 00                    2797 	.db #0x00	; 0
      00003F 00                    2798 	.db #0x00	; 0
      000040 00                    2799 	.db #0x00	; 0
      000041 00                    2800 	.db #0x00	; 0
      000042 00                    2801 	.db #0x00	; 0
      000043 00                    2802 	.db #0x00	; 0
      000044 00                    2803 	.db #0x00	; 0
      000045 00                    2804 	.db #0x00	; 0
      000046 00                    2805 	.db #0x00	; 0
      000047 00                    2806 	.db #0x00	; 0
      000048 00                    2807 	.db #0x00	; 0
      000049 00                    2808 	.db #0x00	; 0
      00004A 00                    2809 	.db #0x00	; 0
      00004B 00                    2810 	.db #0x00	; 0
      00004C 00                    2811 	.db #0x00	; 0
      00004D 00                    2812 	.db #0x00	; 0
      00004E 00                    2813 	.db #0x00	; 0
      00004F 00                    2814 	.db #0x00	; 0
      000050 00                    2815 	.db #0x00	; 0
      000051 00                    2816 	.db #0x00	; 0
      000052 00                    2817 	.db #0x00	; 0
      000053 00                    2818 	.db #0x00	; 0
      000054 00                    2819 	.db #0x00	; 0
      000055 30                    2820 	.db #0x30	; 48	'0'
      000056 78                    2821 	.db #0x78	; 120	'x'
      000057 48                    2822 	.db #0x48	; 72	'H'
      000058 CC                    2823 	.db #0xcc	; 204
      000059 84                    2824 	.db #0x84	; 132
      00005A 84                    2825 	.db #0x84	; 132
      00005B 84                    2826 	.db #0x84	; 132
      00005C 84                    2827 	.db #0x84	; 132
      00005D 84                    2828 	.db #0x84	; 132
      00005E 87                    2829 	.db #0x87	; 135
      00005F CE                    2830 	.db #0xce	; 206
      000060 CC                    2831 	.db #0xcc	; 204
      000061 D8                    2832 	.db #0xd8	; 216
      000062 F0                    2833 	.db #0xf0	; 240
      000063 60                    2834 	.db #0x60	; 96
      000064 40                    2835 	.db #0x40	; 64
      000065 41                    2836 	.db #0x41	; 65	'A'
      000066 43                    2837 	.db #0x43	; 67	'C'
      000067 46                    2838 	.db #0x46	; 70	'F'
      000068 CC                    2839 	.db #0xcc	; 204
      000069 D8                    2840 	.db #0xd8	; 216
      00006A F0                    2841 	.db #0xf0	; 240
      00006B E0                    2842 	.db #0xe0	; 224
      00006C 80                    2843 	.db #0x80	; 128
      00006D 80                    2844 	.db #0x80	; 128
      00006E 00                    2845 	.db #0x00	; 0
      00006F 00                    2846 	.db #0x00	; 0
      000070 00                    2847 	.db #0x00	; 0
      000071 00                    2848 	.db #0x00	; 0
      000072 00                    2849 	.db #0x00	; 0
      000073 00                    2850 	.db #0x00	; 0
      000074 00                    2851 	.db #0x00	; 0
      000075 00                    2852 	.db #0x00	; 0
      000076 00                    2853 	.db #0x00	; 0
      000077 00                    2854 	.db #0x00	; 0
      000078 00                    2855 	.db #0x00	; 0
      000079 00                    2856 	.db #0x00	; 0
      00007A 00                    2857 	.db #0x00	; 0
      00007B 00                    2858 	.db #0x00	; 0
      00007C 00                    2859 	.db #0x00	; 0
      00007D 00                    2860 	.db #0x00	; 0
      00007E 00                    2861 	.db #0x00	; 0
      00007F 00                    2862 	.db #0x00	; 0
      000080 00                    2863 	.db #0x00	; 0
      000081 00                    2864 	.db #0x00	; 0
      000082 00                    2865 	.db #0x00	; 0
      000083 00                    2866 	.db #0x00	; 0
      000084 00                    2867 	.db #0x00	; 0
      000085 00                    2868 	.db #0x00	; 0
      000086 00                    2869 	.db #0x00	; 0
      000087 00                    2870 	.db #0x00	; 0
      000088 00                    2871 	.db #0x00	; 0
      000089 00                    2872 	.db #0x00	; 0
      00008A 00                    2873 	.db #0x00	; 0
      00008B 00                    2874 	.db #0x00	; 0
      00008C 00                    2875 	.db #0x00	; 0
      00008D 00                    2876 	.db #0x00	; 0
      00008E 00                    2877 	.db #0x00	; 0
      00008F 00                    2878 	.db #0x00	; 0
      000090 00                    2879 	.db #0x00	; 0
      000091 00                    2880 	.db #0x00	; 0
      000092 80                    2881 	.db #0x80	; 128
      000093 E0                    2882 	.db #0xe0	; 224
      000094 60                    2883 	.db #0x60	; 96
      000095 30                    2884 	.db #0x30	; 48	'0'
      000096 18                    2885 	.db #0x18	; 24
      000097 0C                    2886 	.db #0x0c	; 12
      000098 06                    2887 	.db #0x06	; 6
      000099 06                    2888 	.db #0x06	; 6
      00009A 03                    2889 	.db #0x03	; 3
      00009B 03                    2890 	.db #0x03	; 3
      00009C 01                    2891 	.db #0x01	; 1
      00009D 01                    2892 	.db #0x01	; 1
      00009E 01                    2893 	.db #0x01	; 1
      00009F 00                    2894 	.db #0x00	; 0
      0000A0 00                    2895 	.db #0x00	; 0
      0000A1 00                    2896 	.db #0x00	; 0
      0000A2 00                    2897 	.db #0x00	; 0
      0000A3 00                    2898 	.db #0x00	; 0
      0000A4 00                    2899 	.db #0x00	; 0
      0000A5 00                    2900 	.db #0x00	; 0
      0000A6 00                    2901 	.db #0x00	; 0
      0000A7 00                    2902 	.db #0x00	; 0
      0000A8 00                    2903 	.db #0x00	; 0
      0000A9 00                    2904 	.db #0x00	; 0
      0000AA 00                    2905 	.db #0x00	; 0
      0000AB 00                    2906 	.db #0x00	; 0
      0000AC 01                    2907 	.db #0x01	; 1
      0000AD 01                    2908 	.db #0x01	; 1
      0000AE 03                    2909 	.db #0x03	; 3
      0000AF 03                    2910 	.db #0x03	; 3
      0000B0 06                    2911 	.db #0x06	; 6
      0000B1 06                    2912 	.db #0x06	; 6
      0000B2 0C                    2913 	.db #0x0c	; 12
      0000B3 18                    2914 	.db #0x18	; 24
      0000B4 30                    2915 	.db #0x30	; 48	'0'
      0000B5 E0                    2916 	.db #0xe0	; 224
      0000B6 C0                    2917 	.db #0xc0	; 192
      0000B7 00                    2918 	.db #0x00	; 0
      0000B8 00                    2919 	.db #0x00	; 0
      0000B9 00                    2920 	.db #0x00	; 0
      0000BA 00                    2921 	.db #0x00	; 0
      0000BB 00                    2922 	.db #0x00	; 0
      0000BC 00                    2923 	.db #0x00	; 0
      0000BD 00                    2924 	.db #0x00	; 0
      0000BE 00                    2925 	.db #0x00	; 0
      0000BF 00                    2926 	.db #0x00	; 0
      0000C0 00                    2927 	.db #0x00	; 0
      0000C1 00                    2928 	.db #0x00	; 0
      0000C2 00                    2929 	.db #0x00	; 0
      0000C3 00                    2930 	.db #0x00	; 0
      0000C4 00                    2931 	.db #0x00	; 0
      0000C5 00                    2932 	.db #0x00	; 0
      0000C6 C0                    2933 	.db #0xc0	; 192
      0000C7 E0                    2934 	.db #0xe0	; 224
      0000C8 E0                    2935 	.db #0xe0	; 224
      0000C9 C0                    2936 	.db #0xc0	; 192
      0000CA F0                    2937 	.db #0xf0	; 240
      0000CB F8                    2938 	.db #0xf8	; 248
      0000CC F8                    2939 	.db #0xf8	; 248
      0000CD F0                    2940 	.db #0xf0	; 240
      0000CE E0                    2941 	.db #0xe0	; 224
      0000CF 78                    2942 	.db #0x78	; 120	'x'
      0000D0 1E                    2943 	.db #0x1e	; 30
      0000D1 07                    2944 	.db #0x07	; 7
      0000D2 03                    2945 	.db #0x03	; 3
      0000D3 00                    2946 	.db #0x00	; 0
      0000D4 00                    2947 	.db #0x00	; 0
      0000D5 00                    2948 	.db #0x00	; 0
      0000D6 00                    2949 	.db #0x00	; 0
      0000D7 00                    2950 	.db #0x00	; 0
      0000D8 00                    2951 	.db #0x00	; 0
      0000D9 00                    2952 	.db #0x00	; 0
      0000DA 00                    2953 	.db #0x00	; 0
      0000DB 00                    2954 	.db #0x00	; 0
      0000DC 00                    2955 	.db #0x00	; 0
      0000DD 00                    2956 	.db #0x00	; 0
      0000DE 00                    2957 	.db #0x00	; 0
      0000DF 00                    2958 	.db #0x00	; 0
      0000E0 80                    2959 	.db #0x80	; 128
      0000E1 F0                    2960 	.db #0xf0	; 240
      0000E2 F8                    2961 	.db #0xf8	; 248
      0000E3 F0                    2962 	.db #0xf0	; 240
      0000E4 F0                    2963 	.db #0xf0	; 240
      0000E5 F0                    2964 	.db #0xf0	; 240
      0000E6 E0                    2965 	.db #0xe0	; 224
      0000E7 E0                    2966 	.db #0xe0	; 224
      0000E8 E0                    2967 	.db #0xe0	; 224
      0000E9 C0                    2968 	.db #0xc0	; 192
      0000EA C0                    2969 	.db #0xc0	; 192
      0000EB 80                    2970 	.db #0x80	; 128
      0000EC 80                    2971 	.db #0x80	; 128
      0000ED 80                    2972 	.db #0x80	; 128
      0000EE 80                    2973 	.db #0x80	; 128
      0000EF 80                    2974 	.db #0x80	; 128
      0000F0 C0                    2975 	.db #0xc0	; 192
      0000F1 C0                    2976 	.db #0xc0	; 192
      0000F2 C0                    2977 	.db #0xc0	; 192
      0000F3 E0                    2978 	.db #0xe0	; 224
      0000F4 E0                    2979 	.db #0xe0	; 224
      0000F5 E0                    2980 	.db #0xe0	; 224
      0000F6 F1                    2981 	.db #0xf1	; 241
      0000F7 F7                    2982 	.db #0xf7	; 247
      0000F8 FE                    2983 	.db #0xfe	; 254
      0000F9 F8                    2984 	.db #0xf8	; 248
      0000FA C0                    2985 	.db #0xc0	; 192
      0000FB 00                    2986 	.db #0x00	; 0
      0000FC 00                    2987 	.db #0x00	; 0
      0000FD 00                    2988 	.db #0x00	; 0
      0000FE 00                    2989 	.db #0x00	; 0
      0000FF 00                    2990 	.db #0x00	; 0
      000100 00                    2991 	.db #0x00	; 0
      000101 00                    2992 	.db #0x00	; 0
      000102 00                    2993 	.db #0x00	; 0
      000103 00                    2994 	.db #0x00	; 0
      000104 00                    2995 	.db #0x00	; 0
      000105 00                    2996 	.db #0x00	; 0
      000106 03                    2997 	.db #0x03	; 3
      000107 03                    2998 	.db #0x03	; 3
      000108 03                    2999 	.db #0x03	; 3
      000109 3B                    3000 	.db #0x3b	; 59
      00010A 3F                    3001 	.db #0x3f	; 63
      00010B 1F                    3002 	.db #0x1f	; 31
      00010C 1F                    3003 	.db #0x1f	; 31
      00010D FF                    3004 	.db #0xff	; 255
      00010E FF                    3005 	.db #0xff	; 255
      00010F 00                    3006 	.db #0x00	; 0
      000110 00                    3007 	.db #0x00	; 0
      000111 00                    3008 	.db #0x00	; 0
      000112 00                    3009 	.db #0x00	; 0
      000113 00                    3010 	.db #0x00	; 0
      000114 00                    3011 	.db #0x00	; 0
      000115 00                    3012 	.db #0x00	; 0
      000116 00                    3013 	.db #0x00	; 0
      000117 00                    3014 	.db #0x00	; 0
      000118 00                    3015 	.db #0x00	; 0
      000119 00                    3016 	.db #0x00	; 0
      00011A 00                    3017 	.db #0x00	; 0
      00011B 00                    3018 	.db #0x00	; 0
      00011C 00                    3019 	.db #0x00	; 0
      00011D 00                    3020 	.db #0x00	; 0
      00011E 00                    3021 	.db #0x00	; 0
      00011F 00                    3022 	.db #0x00	; 0
      000120 00                    3023 	.db #0x00	; 0
      000121 00                    3024 	.db #0x00	; 0
      000122 00                    3025 	.db #0x00	; 0
      000123 3D                    3026 	.db #0x3d	; 61
      000124 67                    3027 	.db #0x67	; 103	'g'
      000125 81                    3028 	.db #0x81	; 129
      000126 81                    3029 	.db #0x81	; 129
      000127 03                    3030 	.db #0x03	; 3
      000128 03                    3031 	.db #0x03	; 3
      000129 9F                    3032 	.db #0x9f	; 159
      00012A FF                    3033 	.db #0xff	; 255
      00012B 5F                    3034 	.db #0x5f	; 95
      00012C 23                    3035 	.db #0x23	; 35
      00012D 3F                    3036 	.db #0x3f	; 63
      00012E 3F                    3037 	.db #0x3f	; 63
      00012F 7F                    3038 	.db #0x7f	; 127
      000130 7F                    3039 	.db #0x7f	; 127
      000131 9B                    3040 	.db #0x9b	; 155
      000132 83                    3041 	.db #0x83	; 131
      000133 83                    3042 	.db #0x83	; 131
      000134 83                    3043 	.db #0x83	; 131
      000135 63                    3044 	.db #0x63	; 99	'c'
      000136 3F                    3045 	.db #0x3f	; 63
      000137 01                    3046 	.db #0x01	; 1
      000138 01                    3047 	.db #0x01	; 1
      000139 C7                    3048 	.db #0xc7	; 199
      00013A FF                    3049 	.db #0xff	; 255
      00013B 00                    3050 	.db #0x00	; 0
      00013C 00                    3051 	.db #0x00	; 0
      00013D 00                    3052 	.db #0x00	; 0
      00013E 00                    3053 	.db #0x00	; 0
      00013F 00                    3054 	.db #0x00	; 0
      000140 00                    3055 	.db #0x00	; 0
      000141 00                    3056 	.db #0x00	; 0
      000142 00                    3057 	.db #0x00	; 0
      000143 00                    3058 	.db #0x00	; 0
      000144 00                    3059 	.db #0x00	; 0
      000145 00                    3060 	.db #0x00	; 0
      000146 00                    3061 	.db #0x00	; 0
      000147 00                    3062 	.db #0x00	; 0
      000148 00                    3063 	.db #0x00	; 0
      000149 00                    3064 	.db #0x00	; 0
      00014A 00                    3065 	.db #0x00	; 0
      00014B 00                    3066 	.db #0x00	; 0
      00014C 00                    3067 	.db #0x00	; 0
      00014D 03                    3068 	.db #0x03	; 3
      00014E 1F                    3069 	.db #0x1f	; 31
      00014F 3C                    3070 	.db #0x3c	; 60
      000150 E0                    3071 	.db #0xe0	; 224
      000151 C0                    3072 	.db #0xc0	; 192
      000152 80                    3073 	.db #0x80	; 128
      000153 00                    3074 	.db #0x00	; 0
      000154 00                    3075 	.db #0x00	; 0
      000155 00                    3076 	.db #0x00	; 0
      000156 00                    3077 	.db #0x00	; 0
      000157 00                    3078 	.db #0x00	; 0
      000158 00                    3079 	.db #0x00	; 0
      000159 00                    3080 	.db #0x00	; 0
      00015A 00                    3081 	.db #0x00	; 0
      00015B 00                    3082 	.db #0x00	; 0
      00015C 00                    3083 	.db #0x00	; 0
      00015D 00                    3084 	.db #0x00	; 0
      00015E 00                    3085 	.db #0x00	; 0
      00015F 00                    3086 	.db #0x00	; 0
      000160 00                    3087 	.db #0x00	; 0
      000161 00                    3088 	.db #0x00	; 0
      000162 00                    3089 	.db #0x00	; 0
      000163 00                    3090 	.db #0x00	; 0
      000164 00                    3091 	.db #0x00	; 0
      000165 08                    3092 	.db #0x08	; 8
      000166 1D                    3093 	.db #0x1d	; 29
      000167 37                    3094 	.db #0x37	; 55	'7'
      000168 73                    3095 	.db #0x73	; 115	's'
      000169 91                    3096 	.db #0x91	; 145
      00016A 30                    3097 	.db #0x30	; 48	'0'
      00016B 30                    3098 	.db #0x30	; 48	'0'
      00016C 30                    3099 	.db #0x30	; 48	'0'
      00016D 20                    3100 	.db #0x20	; 32
      00016E 20                    3101 	.db #0x20	; 32
      00016F 20                    3102 	.db #0x20	; 32
      000170 20                    3103 	.db #0x20	; 32
      000171 A0                    3104 	.db #0xa0	; 160
      000172 A1                    3105 	.db #0xa1	; 161
      000173 63                    3106 	.db #0x63	; 99	'c'
      000174 26                    3107 	.db #0x26	; 38
      000175 3C                    3108 	.db #0x3c	; 60
      000176 B0                    3109 	.db #0xb0	; 176
      000177 E0                    3110 	.db #0xe0	; 224
      000178 78                    3111 	.db #0x78	; 120	'x'
      000179 1F                    3112 	.db #0x1f	; 31
      00017A 07                    3113 	.db #0x07	; 7
      00017B 00                    3114 	.db #0x00	; 0
      00017C 00                    3115 	.db #0x00	; 0
      00017D 00                    3116 	.db #0x00	; 0
      00017E 00                    3117 	.db #0x00	; 0
      00017F 00                    3118 	.db #0x00	; 0
      000180 00                    3119 	.db #0x00	; 0
      000181 00                    3120 	.db #0x00	; 0
      000182 00                    3121 	.db #0x00	; 0
      000183 00                    3122 	.db #0x00	; 0
      000184 00                    3123 	.db #0x00	; 0
      000185 00                    3124 	.db #0x00	; 0
      000186 00                    3125 	.db #0x00	; 0
      000187 00                    3126 	.db #0x00	; 0
      000188 00                    3127 	.db #0x00	; 0
      000189 00                    3128 	.db #0x00	; 0
      00018A 00                    3129 	.db #0x00	; 0
      00018B 00                    3130 	.db #0x00	; 0
      00018C 00                    3131 	.db #0x00	; 0
      00018D 00                    3132 	.db #0x00	; 0
      00018E 00                    3133 	.db #0x00	; 0
      00018F 00                    3134 	.db #0x00	; 0
      000190 00                    3135 	.db #0x00	; 0
      000191 01                    3136 	.db #0x01	; 1
      000192 03                    3137 	.db #0x03	; 3
      000193 06                    3138 	.db #0x06	; 6
      000194 0C                    3139 	.db #0x0c	; 12
      000195 1C                    3140 	.db #0x1c	; 28
      000196 18                    3141 	.db #0x18	; 24
      000197 30                    3142 	.db #0x30	; 48	'0'
      000198 30                    3143 	.db #0x30	; 48	'0'
      000199 60                    3144 	.db #0x60	; 96
      00019A 60                    3145 	.db #0x60	; 96
      00019B C0                    3146 	.db #0xc0	; 192
      00019C C0                    3147 	.db #0xc0	; 192
      00019D 80                    3148 	.db #0x80	; 128
      00019E 80                    3149 	.db #0x80	; 128
      00019F 80                    3150 	.db #0x80	; 128
      0001A0 80                    3151 	.db #0x80	; 128
      0001A1 80                    3152 	.db #0x80	; 128
      0001A2 80                    3153 	.db #0x80	; 128
      0001A3 80                    3154 	.db #0x80	; 128
      0001A4 80                    3155 	.db #0x80	; 128
      0001A5 80                    3156 	.db #0x80	; 128
      0001A6 80                    3157 	.db #0x80	; 128
      0001A7 80                    3158 	.db #0x80	; 128
      0001A8 80                    3159 	.db #0x80	; 128
      0001A9 80                    3160 	.db #0x80	; 128
      0001AA 83                    3161 	.db #0x83	; 131
      0001AB 86                    3162 	.db #0x86	; 134
      0001AC CC                    3163 	.db #0xcc	; 204
      0001AD CC                    3164 	.db #0xcc	; 204
      0001AE 66                    3165 	.db #0x66	; 102	'f'
      0001AF 62                    3166 	.db #0x62	; 98	'b'
      0001B0 33                    3167 	.db #0x33	; 51	'3'
      0001B1 31                    3168 	.db #0x31	; 49	'1'
      0001B2 18                    3169 	.db #0x18	; 24
      0001B3 1C                    3170 	.db #0x1c	; 28
      0001B4 0E                    3171 	.db #0x0e	; 14
      0001B5 07                    3172 	.db #0x07	; 7
      0001B6 03                    3173 	.db #0x03	; 3
      0001B7 00                    3174 	.db #0x00	; 0
      0001B8 00                    3175 	.db #0x00	; 0
      0001B9 00                    3176 	.db #0x00	; 0
      0001BA 00                    3177 	.db #0x00	; 0
      0001BB 00                    3178 	.db #0x00	; 0
      0001BC 00                    3179 	.db #0x00	; 0
      0001BD 00                    3180 	.db #0x00	; 0
      0001BE 00                    3181 	.db #0x00	; 0
      0001BF 00                    3182 	.db #0x00	; 0
      0001C0 00                    3183 	.db #0x00	; 0
      0001C1 00                    3184 	.db #0x00	; 0
      0001C2 00                    3185 	.db #0x00	; 0
      0001C3 00                    3186 	.db #0x00	; 0
      0001C4 00                    3187 	.db #0x00	; 0
      0001C5 00                    3188 	.db #0x00	; 0
      0001C6 00                    3189 	.db #0x00	; 0
      0001C7 00                    3190 	.db #0x00	; 0
      0001C8 00                    3191 	.db #0x00	; 0
      0001C9 00                    3192 	.db #0x00	; 0
      0001CA 00                    3193 	.db #0x00	; 0
      0001CB 00                    3194 	.db #0x00	; 0
      0001CC 00                    3195 	.db #0x00	; 0
      0001CD 00                    3196 	.db #0x00	; 0
      0001CE 00                    3197 	.db #0x00	; 0
      0001CF 00                    3198 	.db #0x00	; 0
      0001D0 00                    3199 	.db #0x00	; 0
      0001D1 00                    3200 	.db #0x00	; 0
      0001D2 00                    3201 	.db #0x00	; 0
      0001D3 00                    3202 	.db #0x00	; 0
      0001D4 00                    3203 	.db #0x00	; 0
      0001D5 00                    3204 	.db #0x00	; 0
      0001D6 00                    3205 	.db #0x00	; 0
      0001D7 00                    3206 	.db #0x00	; 0
      0001D8 00                    3207 	.db #0x00	; 0
      0001D9 00                    3208 	.db #0x00	; 0
      0001DA 00                    3209 	.db #0x00	; 0
      0001DB 00                    3210 	.db #0x00	; 0
      0001DC 00                    3211 	.db #0x00	; 0
      0001DD 00                    3212 	.db #0x00	; 0
      0001DE 01                    3213 	.db #0x01	; 1
      0001DF 01                    3214 	.db #0x01	; 1
      0001E0 01                    3215 	.db #0x01	; 1
      0001E1 01                    3216 	.db #0x01	; 1
      0001E2 01                    3217 	.db #0x01	; 1
      0001E3 01                    3218 	.db #0x01	; 1
      0001E4 01                    3219 	.db #0x01	; 1
      0001E5 01                    3220 	.db #0x01	; 1
      0001E6 01                    3221 	.db #0x01	; 1
      0001E7 01                    3222 	.db #0x01	; 1
      0001E8 01                    3223 	.db #0x01	; 1
      0001E9 01                    3224 	.db #0x01	; 1
      0001EA 01                    3225 	.db #0x01	; 1
      0001EB 00                    3226 	.db #0x00	; 0
      0001EC 00                    3227 	.db #0x00	; 0
      0001ED 00                    3228 	.db #0x00	; 0
      0001EE 00                    3229 	.db #0x00	; 0
      0001EF 00                    3230 	.db #0x00	; 0
      0001F0 00                    3231 	.db #0x00	; 0
      0001F1 00                    3232 	.db #0x00	; 0
      0001F2 00                    3233 	.db #0x00	; 0
      0001F3 00                    3234 	.db #0x00	; 0
      0001F4 00                    3235 	.db #0x00	; 0
      0001F5 00                    3236 	.db #0x00	; 0
      0001F6 00                    3237 	.db #0x00	; 0
      0001F7 00                    3238 	.db #0x00	; 0
      0001F8 00                    3239 	.db #0x00	; 0
      0001F9 00                    3240 	.db #0x00	; 0
      0001FA 00                    3241 	.db #0x00	; 0
      0001FB 00                    3242 	.db #0x00	; 0
      0001FC 00                    3243 	.db #0x00	; 0
      0001FD 00                    3244 	.db #0x00	; 0
      0001FE 00                    3245 	.db #0x00	; 0
      0001FF 00                    3246 	.db #0x00	; 0
      000200                       3247 _button_up_logo:
      000200 00                    3248 	.db #0x00	; 0
      000201 00                    3249 	.db #0x00	; 0
      000202 00                    3250 	.db #0x00	; 0
      000203 00                    3251 	.db #0x00	; 0
      000204 08                    3252 	.db #0x08	; 8
      000205 0C                    3253 	.db #0x0c	; 12
      000206 0E                    3254 	.db #0x0e	; 14
      000207 0F                    3255 	.db #0x0f	; 15
      000208 0F                    3256 	.db #0x0f	; 15
      000209 0E                    3257 	.db #0x0e	; 14
      00020A 0C                    3258 	.db #0x0c	; 12
      00020B 08                    3259 	.db #0x08	; 8
      00020C 00                    3260 	.db #0x00	; 0
      00020D 00                    3261 	.db #0x00	; 0
      00020E 00                    3262 	.db #0x00	; 0
      00020F 00                    3263 	.db #0x00	; 0
      000210                       3264 _button_down_logo:
      000210 00                    3265 	.db #0x00	; 0
      000211 00                    3266 	.db #0x00	; 0
      000212 00                    3267 	.db #0x00	; 0
      000213 00                    3268 	.db #0x00	; 0
      000214 10                    3269 	.db #0x10	; 16
      000215 30                    3270 	.db #0x30	; 48	'0'
      000216 70                    3271 	.db #0x70	; 112	'p'
      000217 F0                    3272 	.db #0xf0	; 240
      000218 F0                    3273 	.db #0xf0	; 240
      000219 70                    3274 	.db #0x70	; 112	'p'
      00021A 30                    3275 	.db #0x30	; 48	'0'
      00021B 10                    3276 	.db #0x10	; 16
      00021C 00                    3277 	.db #0x00	; 0
      00021D 00                    3278 	.db #0x00	; 0
      00021E 00                    3279 	.db #0x00	; 0
      00021F 00                    3280 	.db #0x00	; 0
      000220                       3281 _music_logo:
      000220 00                    3282 	.db #0x00	; 0
      000221 00                    3283 	.db #0x00	; 0
      000222 00                    3284 	.db #0x00	; 0
      000223 00                    3285 	.db #0x00	; 0
      000224 00                    3286 	.db #0x00	; 0
      000225 FC                    3287 	.db #0xfc	; 252
      000226 1C                    3288 	.db #0x1c	; 28
      000227 1C                    3289 	.db #0x1c	; 28
      000228 1E                    3290 	.db #0x1e	; 30
      000229 0E                    3291 	.db #0x0e	; 14
      00022A 0E                    3292 	.db #0x0e	; 14
      00022B 0E                    3293 	.db #0x0e	; 14
      00022C 0F                    3294 	.db #0x0f	; 15
      00022D FE                    3295 	.db #0xfe	; 254
      00022E 00                    3296 	.db #0x00	; 0
      00022F 00                    3297 	.db #0x00	; 0
      000230 00                    3298 	.db #0x00	; 0
      000231 60                    3299 	.db #0x60	; 96
      000232 F0                    3300 	.db #0xf0	; 240
      000233 F0                    3301 	.db #0xf0	; 240
      000234 70                    3302 	.db #0x70	; 112	'p'
      000235 7F                    3303 	.db #0x7f	; 127
      000236 00                    3304 	.db #0x00	; 0
      000237 00                    3305 	.db #0x00	; 0
      000238 00                    3306 	.db #0x00	; 0
      000239 18                    3307 	.db #0x18	; 24
      00023A 38                    3308 	.db #0x38	; 56	'8'
      00023B 38                    3309 	.db #0x38	; 56	'8'
      00023C 3C                    3310 	.db #0x3c	; 60
      00023D 1F                    3311 	.db #0x1f	; 31
      00023E 00                    3312 	.db #0x00	; 0
      00023F 00                    3313 	.db #0x00	; 0
      000240                       3314 _volume_logo:
      000240 C0                    3315 	.db #0xc0	; 192
      000241 C0                    3316 	.db #0xc0	; 192
      000242 E0                    3317 	.db #0xe0	; 224
      000243 E0                    3318 	.db #0xe0	; 224
      000244 F0                    3319 	.db #0xf0	; 240
      000245 F8                    3320 	.db #0xf8	; 248
      000246 FC                    3321 	.db #0xfc	; 252
      000247 00                    3322 	.db #0x00	; 0
      000248 00                    3323 	.db #0x00	; 0
      000249 20                    3324 	.db #0x20	; 32
      00024A C8                    3325 	.db #0xc8	; 200
      00024B 18                    3326 	.db #0x18	; 24
      00024C E2                    3327 	.db #0xe2	; 226
      00024D 06                    3328 	.db #0x06	; 6
      00024E 18                    3329 	.db #0x18	; 24
      00024F E0                    3330 	.db #0xe0	; 224
      000250 03                    3331 	.db #0x03	; 3
      000251 03                    3332 	.db #0x03	; 3
      000252 07                    3333 	.db #0x07	; 7
      000253 07                    3334 	.db #0x07	; 7
      000254 0F                    3335 	.db #0x0f	; 15
      000255 1F                    3336 	.db #0x1f	; 31
      000256 3F                    3337 	.db #0x3f	; 63
      000257 00                    3338 	.db #0x00	; 0
      000258 00                    3339 	.db #0x00	; 0
      000259 04                    3340 	.db #0x04	; 4
      00025A 13                    3341 	.db #0x13	; 19
      00025B 18                    3342 	.db #0x18	; 24
      00025C 47                    3343 	.db #0x47	; 71	'G'
      00025D 60                    3344 	.db #0x60	; 96
      00025E 18                    3345 	.db #0x18	; 24
      00025F 07                    3346 	.db #0x07	; 7
      000260                       3347 _button_left_logo:
      000260 18                    3348 	.db #0x18	; 24
      000261 3C                    3349 	.db #0x3c	; 60
      000262 7E                    3350 	.db #0x7e	; 126
      000263 FF                    3351 	.db #0xff	; 255
      000264                       3352 _button_right_logo:
      000264 FF                    3353 	.db #0xff	; 255
      000265 7E                    3354 	.db #0x7e	; 126
      000266 3C                    3355 	.db #0x3c	; 60
      000267 18                    3356 	.db #0x18	; 24
      000268                       3357 _shooter_logo:
      000268 00                    3358 	.db #0x00	; 0
      000269 FF                    3359 	.db #0xff	; 255
      00026A FF                    3360 	.db #0xff	; 255
      00026B F6                    3361 	.db #0xf6	; 246
      00026C 00                    3362 	.db #0x00	; 0
      00026D FE                    3363 	.db #0xfe	; 254
      00026E FF                    3364 	.db #0xff	; 255
      00026F FE                    3365 	.db #0xfe	; 254
      000270 00                    3366 	.db #0x00	; 0
      000271 01                    3367 	.db #0x01	; 1
      000272 07                    3368 	.db #0x07	; 7
      000273 FF                    3369 	.db #0xff	; 255
      000274 FE                    3370 	.db #0xfe	; 254
      000275 FF                    3371 	.db #0xff	; 255
      000276 07                    3372 	.db #0x07	; 7
      000277 00                    3373 	.db #0x00	; 0
      000278                       3374 _pig_logo:
      000278 C0                    3375 	.db #0xc0	; 192
      000279 30                    3376 	.db #0x30	; 48	'0'
      00027A 38                    3377 	.db #0x38	; 56	'8'
      00027B FC                    3378 	.db #0xfc	; 252
      00027C FF                    3379 	.db #0xff	; 255
      00027D FF                    3380 	.db #0xff	; 255
      00027E FC                    3381 	.db #0xfc	; 252
      00027F FC                    3382 	.db #0xfc	; 252
      000280 3E                    3383 	.db #0x3e	; 62
      000281 3E                    3384 	.db #0x3e	; 62
      000282 F0                    3385 	.db #0xf0	; 240
      000283 C0                    3386 	.db #0xc0	; 192
      000284 01                    3387 	.db #0x01	; 1
      000285 03                    3388 	.db #0x03	; 3
      000286 07                    3389 	.db #0x07	; 7
      000287 0F                    3390 	.db #0x0f	; 15
      000288 0F                    3391 	.db #0x0f	; 15
      000289 0F                    3392 	.db #0x0f	; 15
      00028A 0F                    3393 	.db #0x0f	; 15
      00028B 0F                    3394 	.db #0x0f	; 15
      00028C 0F                    3395 	.db #0x0f	; 15
      00028D 07                    3396 	.db #0x07	; 7
      00028E 03                    3397 	.db #0x03	; 3
      00028F 01                    3398 	.db #0x01	; 1
      000290                       3399 _bird_logo:
      000290 7E                    3400 	.db #0x7e	; 126
      000291 C3                    3401 	.db #0xc3	; 195
      000292 81                    3402 	.db #0x81	; 129
      000293 81                    3403 	.db #0x81	; 129
      000294 81                    3404 	.db #0x81	; 129
      000295 81                    3405 	.db #0x81	; 129
      000296 C3                    3406 	.db #0xc3	; 195
      000297 7E                    3407 	.db #0x7e	; 126
                                   3408 	.area CONST   (CODE)
      000298                       3409 ___str_0:
      000298 41 6E 67 72 79 20 42  3410 	.ascii "Angry Bird!"
             69 72 64 21
      0002A3 00                    3411 	.db 0x00
                                   3412 	.area CSEG    (CODE)
                                   3413 	.area CONST   (CODE)
      0002A4                       3414 ___str_1:
      0002A4 53 20                 3415 	.ascii "S "
      0002A6 00                    3416 	.db 0x00
                                   3417 	.area CSEG    (CODE)
                                   3418 	.area CONST   (CODE)
      0002A7                       3419 ___str_2:
      0002A7 41 20                 3420 	.ascii "A "
      0002A9 00                    3421 	.db 0x00
                                   3422 	.area CSEG    (CODE)
                                   3423 	.area CONST   (CODE)
      0002AA                       3424 ___str_3:
      0002AA 20 20 20 20 20 20 20  3425 	.ascii "       "
      0002B1 00                    3426 	.db 0x00
                                   3427 	.area CSEG    (CODE)
      000D8D                       3428 _sine_table:
      000D8D 00 00 00 00           3429 	.byte #0x00, #0x00, #0x00, #0x00	;  0.000000e+00
      000D91 33 C4 31 3E           3430 	.byte #0x33, #0xc4, #0x31, #0x3e	;  1.736000e-01
      000D95 A0 1A AF 3E           3431 	.byte #0xa0, #0x1a, #0xaf, #0x3e	;  3.420000e-01
      000D99 00 00 00 3F           3432 	.byte #0x00, #0x00, #0x00, #0x3f	;  5.000000e-01
      000D9D 8A 8E 24 3F           3433 	.byte #0x8a, #0x8e, #0x24, #0x3f	;  6.428000e-01
      000DA1 93 18 44 3F           3434 	.byte #0x93, #0x18, #0x44, #0x3f	;  7.660000e-01
      000DA5 2D B2 5D 3F           3435 	.byte #0x2d, #0xb2, #0x5d, #0x3f	;  8.660000e-01
      000DA9 2E 90 70 3F           3436 	.byte #0x2e, #0x90, #0x70, #0x3f	;  9.397000e-01
      000DAD DA 1B 7C 3F           3437 	.byte #0xda, #0x1b, #0x7c, #0x3f	;  9.848000e-01
      000DB1 00 00 80 3F           3438 	.byte #0x00, #0x00, #0x80, #0x3f	;  1.000000e+00
                                   3439 	.area CONST   (CODE)
      0002B2                       3440 ___str_4:
      0002B2 20 20 20              3441 	.ascii "   "
      0002B5 00                    3442 	.db 0x00
                                   3443 	.area CSEG    (CODE)
                                   3444 	.area CONST   (CODE)
      0002B6                       3445 ___str_5:
      0002B6 20                    3446 	.ascii " "
      0002B7 00                    3447 	.db 0x00
                                   3448 	.area CSEG    (CODE)
                                   3449 	.area CONST   (CODE)
      0002B8                       3450 ___str_6:
      0002B8 53 65 74 74 69 6E 67  3451 	.ascii "Setting"
      0002BF 00                    3452 	.db 0x00
                                   3453 	.area CSEG    (CODE)
                                   3454 	.area CONST   (CODE)
      0002C0                       3455 ___str_7:
      0002C0 45 61 73 79           3456 	.ascii "Easy"
      0002C4 00                    3457 	.db 0x00
                                   3458 	.area CSEG    (CODE)
                                   3459 	.area CONST   (CODE)
      0002C5                       3460 ___str_8:
      0002C5 48 61 72 64           3461 	.ascii "Hard"
      0002C9 00                    3462 	.db 0x00
                                   3463 	.area CSEG    (CODE)
                                   3464 	.area XINIT   (CODE)
                                   3465 	.area CABS    (ABS,CODE)
